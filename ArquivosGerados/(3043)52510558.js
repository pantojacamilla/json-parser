    import anime from 'animejs';&#xD;&#xA;    //document.body.style.overflow = "hidden";&#xD;&#xA;    //the key strokes for the up and down keys&#xD;&#xA;    remove();&#xD;&#xA;    var array = [];&#xD;&#xA;    var count = 0;&#xD;&#xA;    let slotSize = 400;&#xD;&#xA;    let items = Array.from(document.querySelectorAll('.middle > .icons'));&#xD;&#xA;    //if (items.length == 0) throw "error empty";&#xD;&#xA;    //if (items.count < 3) throw "Needs at least three items!";&#xD;&#xA;    let idx = Math.floor(items.length / 2);&#xD;&#xA;    items.forEach((it, i) => {&#xD;&#xA;        it.style.transform = 'translateY(' + (slotSize * (i - idx)) + 'px)';&#xD;&#xA;    });&#xD;&#xA;    function next() {&#xD;&#xA;        let nidx = idx + 1;&#xD;&#xA;        idx = nidx % items.length;&#xD;&#xA;        items.forEach((it, i) => {&#xD;&#xA;            let offset = i - nidx;&#xD;&#xA;            if (offset < -Math.floor((items.length / 2))) {&#xD;&#xA;                offset += items.length;&#xD;&#xA;            }&#xD;&#xA;            if (offset > 0) {&#xD;&#xA;                it.classList.add('warp');&#xD;&#xA;            } else {&#xD;&#xA;                it.classList.remove('warp');&#xD;&#xA;            }&#xD;&#xA;            it.style.transform = 'translateY(' + (slotSize * offset) + 'px)';&#xD;&#xA;            array.push(offset);&#xD;&#xA;        });&#xD;&#xA;        return array;&#xD;&#xA;    }&#xD;&#xA;    function prev() {&#xD;&#xA;        let nidx = idx - 1;&#xD;&#xA;        idx = (items.length + nidx) % items.length;&#xD;&#xA;        items.forEach((it, i) => {&#xD;&#xA;            let offset = i - nidx;&#xD;&#xA;            if (offset > Math.floor((items.length / 2))) {&#xD;&#xA;                offset -= items.length;&#xD;&#xA;            }&#xD;&#xA;            if (offset < 0) {&#xD;&#xA;                it.classList.add('warp');&#xD;&#xA;            } else {&#xD;&#xA;                it.classList.remove('warp');&#xD;&#xA;            }&#xD;&#xA;            it.style.transform = 'translateY(' + (slotSize * offset) + 'px)';&#xD;&#xA;            array.push(offset);&#xD;&#xA;        });&#xD;&#xA;        return array;&#xD;&#xA;    }&#xD;&#xA;    function remove() {&#xD;&#xA;        if (count == 1) {} else {&#xD;&#xA;            $('#blankID').fadeOut("slow", function() {&#xD;&#xA;                $('#aboutID').fadeIn("slow", function() {&#xD;&#xA;                  console.log("changed");&#xD;&#xA;                });&#xD;&#xA;            });&#xD;&#xA;            $("#blankID").remove();&#xD;&#xA;            count++;&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;    function isOnScreen(arr) {&#xD;&#xA;        if (arr[0] == -2) {&#xD;&#xA;            return true;&#xD;&#xA;        } else {&#xD;&#xA;            return false;&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;    document.onkeydown = checkKey;&#xD;&#xA;    function checkKey(e) {&#xD;&#xA;        e = e || window.event;&#xD;&#xA;        if ($("#aboutTextID").css('display') === 'none' && $("#applyButtonID").css('display') === 'none') {&#xD;&#xA;            if (e.keyCode == "40") {&#xD;&#xA;                //this is down&#xD;&#xA;                //this will open it up&#xD;&#xA;                open();&#xD;&#xA;                let a = prev();&#xD;&#xA;                if (isOnScreen(a)) {&#xD;&#xA;                    close();&#xD;&#xA;                }&#xD;&#xA;                array = [];&#xD;&#xA;            } else if (e.keyCode == "38") {&#xD;&#xA;                open();&#xD;&#xA;                let a = next();&#xD;&#xA;                if (isOnScreen(a)) {&#xD;&#xA;                    close();&#xD;&#xA;                }&#xD;&#xA;                array = [];&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;    //Scroll detection occurs here, without the scrollbar&#xD;&#xA;    $("html").on("mousewheel", function(e) {&#xD;&#xA;        open();&#xD;&#xA;        let delta = e.originalEvent.wheelDelta;&#xD;&#xA;        if ($("#aboutTextID").css('display') === 'none' && $("#applyButtonID").css('display') === 'none') {&#xD;&#xA;            if (delta < 0) {&#xD;&#xA;                //This is for the scrolling down&#xD;&#xA;                // animation opens up the brakets&#xD;&#xA;                let a = prev();&#xD;&#xA;                if (isOnScreen(a)) {&#xD;&#xA;                    close();&#xD;&#xA;                }&#xD;&#xA;                array = [];&#xD;&#xA;            }&#xD;&#xA;            if (delta > 0) {&#xD;&#xA;                let a = next();&#xD;&#xA;                if (isOnScreen(a)) {&#xD;&#xA;                    close();&#xD;&#xA;                }&#xD;&#xA;                array = [];&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    });&#xD;&#xA;    //this is for detecting clicks  for the divs in the middle div&#xD;&#xA;    // 1 = the 2nd image , 2 = the  3rd image&#xD;&#xA;    $(".middle div").click(function() {&#xD;&#xA;      console.log(($(this).index()));&#xD;&#xA;        if ($(this).index() == '1') {&#xD;&#xA;            $('#theMiddle').fadeOut("slow", function() {&#xD;&#xA;                $('#applyButtonID').fadeIn("slow", function() {});&#xD;&#xA;                $("#backButtonID").fadeIn("slow", function() {&#xD;&#xA;                });&#xD;&#xA;                //Define the event handler here after the btn has been created&#xD;&#xA;                $("#backButtonID").click(function() {&#xD;&#xA;                    $('#applyButtonID').fadeOut("slow", function() {&#xD;&#xA;                        $("#backButtonID").fadeOut("slow", function() {&#xD;&#xA;                            $('#theMiddle').fadeIn("slow", function() {});&#xD;&#xA;                        });&#xD;&#xA;                    });&#xD;&#xA;                });&#xD;&#xA;            });&#xD;&#xA;        }&#xD;&#xA;        if ($(this).index() == '3') {&#xD;&#xA;            $('#theMiddle').fadeOut("slow", function() {&#xD;&#xA;                $('#aboutTextID').fadeIn("slow", function() {});&#xD;&#xA;                $("#backButtonID").fadeIn("slow", function() {});&#xD;&#xA;                //Define the event handler here after the btn has been created&#xD;&#xA;                $("#backButtonID").click(function() {&#xD;&#xA;                    $('#aboutTextID').fadeOut("slow", function() {&#xD;&#xA;                        $("#backButtonID").fadeOut("slow", function() {&#xD;&#xA;                            $('#theMiddle').fadeIn("slow", function() {});&#xD;&#xA;                        });&#xD;&#xA;                    });&#xD;&#xA;                });&#xD;&#xA;            });&#xD;&#xA;        }&#xD;&#xA;        if ($(this).index() == '4') {&#xD;&#xA;          $('#theMiddle').fadeOut("slow", function() {&#xD;&#xA;              $('#memeDownloadID').fadeIn("slow", function() {});&#xD;&#xA;              $("#backButtonID").fadeIn("slow", function() {});&#xD;&#xA;              $('#WherestheDownload').fadeIn("slow",function(){});&#xD;&#xA;              //Define the event handler here after the btn has been created&#xD;&#xA;              $("#backButtonID").click(function() {&#xD;&#xA;                  $('#memeDownloadID').fadeOut("slow", function() {&#xD;&#xA;                      $("#backButtonID").fadeOut("slow", function() {&#xD;&#xA;                        $("#WherestheDownload").fadeOut("slow", function() {&#xD;&#xA;                          $('#theMiddle').fadeIn("slow", function() {&#xD;&#xA;                          });&#xD;&#xA;                      });&#xD;&#xA;                      });&#xD;&#xA;                  });&#xD;&#xA;              });&#xD;&#xA;          });&#xD;&#xA;        }&#xD;&#xA;    });&#xD;&#xA;    console.log(anime);&#xD;&#xA;    function open() {&#xD;&#xA;        anime({&#xD;&#xA;            targets: "div.right",&#xD;&#xA;            translateX: {&#xD;&#xA;                value: 200,&#xD;&#xA;                duration: 500&#xD;&#xA;            }&#xD;&#xA;        });&#xD;&#xA;        anime({&#xD;&#xA;            targets: "div.left",&#xD;&#xA;            translateX: {&#xD;&#xA;                value: -200,&#xD;&#xA;                duration: 500&#xD;&#xA;            }&#xD;&#xA;        });&#xD;&#xA;    }&#xD;&#xA;    function close() {&#xD;&#xA;        anime({&#xD;&#xA;            targets: "div.right",&#xD;&#xA;            translateX: {&#xD;&#xA;                value: 0,&#xD;&#xA;                duration: 500&#xD;&#xA;            }&#xD;&#xA;        });&#xD;&#xA;        anime({&#xD;&#xA;            targets: "div.left",&#xD;&#xA;            translateX: {&#xD;&#xA;                value: 0,&#xD;&#xA;                duration: 500&#xD;&#xA;            }&#xD;&#xA;        });&#xD;&#xA;    }&#xD;&#xA;    window.human = false;&#xD;&#xA;    var canvasEl = document.querySelector('.fireworks');&#xD;&#xA;    var ctx = canvasEl.getContext('2d');&#xD;&#xA;    var numberOfParticules = 30;&#xD;&#xA;    var pointerX = 0;&#xD;&#xA;    var pointerY = 0;&#xD;&#xA;    var tap = ('ontouchstart' in window || navigator.msMaxTouchPoints) ? 'touchstart' : 'mousedown';&#xD;&#xA;    var colors = ['#DA70D6', '#FE4EDA', '#512888', '#662c92'];&#xD;&#xA;    function setCanvasSize() {&#xD;&#xA;      canvasEl.width = window.innerWidth * 2;&#xD;&#xA;      canvasEl.height = window.innerHeight * 2;&#xD;&#xA;      canvasEl.style.width = window.innerWidth + 'px';&#xD;&#xA;      canvasEl.style.height = window.innerHeight + 'px';&#xD;&#xA;      canvasEl.getContext('2d').scale(2, 2);&#xD;&#xA;    }&#xD;&#xA;    function updateCoords(e) {&#xD;&#xA;      pointerX = e.clientX || e.touches[0].clientX;&#xD;&#xA;      pointerY = e.clientY || e.touches[0].clientY;&#xD;&#xA;    }&#xD;&#xA;    function setParticuleDirection(p) {&#xD;&#xA;      var angle = anime.random(0, 360) * Math.PI / 180;&#xD;&#xA;      var value = anime.random(50, 180);&#xD;&#xA;      var radius = [-1, 1][anime.random(0, 1)] * value;&#xD;&#xA;      return {&#xD;&#xA;        x: p.x + radius * Math.cos(angle),&#xD;&#xA;        y: p.y + radius * Math.sin(angle)&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;    function createParticule(x,y) {&#xD;&#xA;      var p = {};&#xD;&#xA;      p.x = x;&#xD;&#xA;      p.y = y;&#xD;&#xA;      p.color = colors[anime.random(0, colors.length - 1)];&#xD;&#xA;      p.radius = anime.random(16, 32);&#xD;&#xA;      p.endPos = setParticuleDirection(p);&#xD;&#xA;      p.draw = function() {&#xD;&#xA;        ctx.beginPath();&#xD;&#xA;        ctx.arc(p.x, p.y, p.radius, 0, 2 * Math.PI, true);&#xD;&#xA;        ctx.fillStyle = p.color;&#xD;&#xA;        ctx.fill();&#xD;&#xA;      }&#xD;&#xA;      return p;&#xD;&#xA;    }&#xD;&#xA;    function createCircle(x,y) {&#xD;&#xA;      var p = {};&#xD;&#xA;      p.x = x;&#xD;&#xA;      p.y = y;&#xD;&#xA;      p.color = '#FFF';&#xD;&#xA;      p.radius = 0.1;&#xD;&#xA;      p.alpha = .5;&#xD;&#xA;      p.lineWidth = 6;&#xD;&#xA;      p.draw = function() {&#xD;&#xA;        ctx.globalAlpha = p.alpha;&#xD;&#xA;        ctx.beginPath();&#xD;&#xA;        ctx.arc(p.x, p.y, p.radius, 0, 2 * Math.PI, true);&#xD;&#xA;        ctx.lineWidth = p.lineWidth;&#xD;&#xA;        ctx.strokeStyle = p.color;&#xD;&#xA;        ctx.stroke();&#xD;&#xA;        ctx.globalAlpha = 1;&#xD;&#xA;      }&#xD;&#xA;      return p;&#xD;&#xA;    }&#xD;&#xA;    function renderParticule(anim) {&#xD;&#xA;      for (var i = 0; i < anim.animatables.length; i++) {&#xD;&#xA;        anim.animatables[i].target.draw();&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;    function animateParticules(x, y) {&#xD;&#xA;      var circle = createCircle(x, y);&#xD;&#xA;      var particules = [];&#xD;&#xA;      for (var i = 0; i < numberOfParticules; i++) {&#xD;&#xA;        particules.push(createParticule(x, y));&#xD;&#xA;      }&#xD;&#xA;      anime.timeline().add({&#xD;&#xA;        targets: particules,&#xD;&#xA;        x: function(p) { return p.endPos.x; },&#xD;&#xA;        y: function(p) { return p.endPos.y; },&#xD;&#xA;        radius: 0.1,&#xD;&#xA;        duration: anime.random(1200, 1800),&#xD;&#xA;        easing: 'easeOutExpo',&#xD;&#xA;        update: renderParticule&#xD;&#xA;      })&#xD;&#xA;        .add({&#xD;&#xA;        targets: circle,&#xD;&#xA;        radius: anime.random(80, 160),&#xD;&#xA;        lineWidth: 0,&#xD;&#xA;        alpha: {&#xD;&#xA;          value: 0,&#xD;&#xA;          easing: 'linear',&#xD;&#xA;          duration: anime.random(600, 800),&#xD;&#xA;        },&#xD;&#xA;        duration: anime.random(1200, 1800),&#xD;&#xA;        easing: 'easeOutExpo',&#xD;&#xA;        update: renderParticule,&#xD;&#xA;        offset: 0&#xD;&#xA;      });&#xD;&#xA;    }&#xD;&#xA;    var render = anime({&#xD;&#xA;      duration: Infinity,&#xD;&#xA;      update: function() {&#xD;&#xA;        ctx.clearRect(0, 0, canvasEl.width, canvasEl.height);&#xD;&#xA;      }&#xD;&#xA;    });&#xD;&#xA;    document.getElementById("backButtonID").addEventListener("click",function(e){&#xD;&#xA;      window.human = true;&#xD;&#xA;      render.play();&#xD;&#xA;      updateCoords(e);&#xD;&#xA;      animateParticules(pointerX, pointerY);&#xD;&#xA;    }, false);&#xD;&#xA;    var centerX = window.innerWidth / 2;&#xD;&#xA;    var centerY = window.innerHeight / 2;&#xD;&#xA;    setCanvasSize();&#xD;&#xA;    window.addEventListener('resize', setCanvasSize, false);