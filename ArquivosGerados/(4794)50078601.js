    function Customer(type, checked)&#xD;&#xA;    {&#xD;&#xA;      var self = this;&#xD;&#xA;      &#xD;&#xA;      self.CustomerType = ko.observable(type);&#xD;&#xA;      self.IsChecked = ko.observable(false);&#xD;&#xA;    }&#xD;&#xA;    function VM()&#xD;&#xA;    {&#xD;&#xA;      var self = this;&#xD;&#xA;      &#xD;&#xA;      //dynamically populated - this is for testing puposes&#xD;&#xA;      self.AllCustomers = ko.observableArray([&#xD;&#xA;        { &#xD;&#xA;          code: "001",&#xD;&#xA;          name:'Customer 1'&#xD;&#xA;        },&#xD;&#xA;        { &#xD;&#xA;          code: "002",&#xD;&#xA;          name:'Customer 2'&#xD;&#xA;        },&#xD;&#xA;        { &#xD;&#xA;          code: "003",&#xD;&#xA;          name:'Customer 3'&#xD;&#xA;        },&#xD;&#xA;      ]);&#xD;&#xA;      &#xD;&#xA;     self.selectedCustomers = ko.observableArray([]);&#xD;&#xA;     self.Customer = ko.observableArray([]);&#xD;&#xA;      &#xD;&#xA;    //How can I convert the AllCustomers array into an array of Customer object??&#xD;&#xA;    //I need to push the checked object in to self.Customer(), {CustomerType,checked}&#xD;&#xA;    //uncomment below - just for testing looping through Customer objects&#xD;&#xA;    /*&#xD;&#xA;    self.Customer = ko.observableArray([  &#xD;&#xA;        new Customer("001"),&#xD;&#xA;        new Customer("002")&#xD;&#xA;      ]);&#xD;&#xA;    */&#xD;&#xA;      &#xD;&#xA;     // This array should return all customers that checked the box&#xD;&#xA;    self.CheckedCustomers = ko.computed(function()&#xD;&#xA;    {&#xD;&#xA;        var selectedCustomers = [];&#xD;&#xA;        ko.utils.arrayForEach(self.Customer(), function (customer) {&#xD;&#xA;            if(customer.IsChecked())&#xD;&#xA;                selectedCustomers.push(customer);&#xD;&#xA;        });&#xD;&#xA;        return selectedCustomers;&#xD;&#xA;    });&#xD;&#xA;    }&#xD;&#xA;    ko.applyBindings(new VM());