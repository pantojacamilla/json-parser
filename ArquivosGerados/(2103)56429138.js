xml&#xD;&#xA;<div id="wrapper"> &#xD;&#xA;	<canvas id="canvas"/>&#xD;&#xA;</div>&#xD;&#xA;The CSS style:&#xD;&#xA;css&#xD;&#xA;#wrapper {&#xD;&#xA;	height: 100px;&#xD;&#xA;	width: 100px;&#xD;&#xA;	overflow: scroll;&#xD;&#xA;}&#xD;&#xA;#canvas {}&#xD;&#xA;And finally the JavaScript to draw something:&#xD;&#xA;js&#xD;&#xA;function init() {&#xD;&#xA;	var canvas = document.getElementById("canvas");&#xD;&#xA;	var ctx = canvas.getContext('2d');&#xD;&#xA;		&#xD;&#xA;	var max = 5;&#xD;&#xA;	var rectWidth = 30;&#xD;&#xA;	var rectHeight = 30;&#xD;&#xA;		&#xD;&#xA;	for (i = 0; i < max; i++) {&#xD;&#xA;		ctx.fillRect(i * rectWidth, i * rectHeight, rectWidth, rectHeight);&#xD;&#xA;	} &#xD;&#xA;	ctx.fill();&#xD;&#xA;}&#xD;&#xA;What happens (at least in FireFox and Chrome) is that the canvas is about 100x100 pixels big and you can scroll a bit (because the scroll bars sizes are subtracted from the 100px).&#xD;&#xA;What I want to have is that all 5 squares are visible when scrolling. &#xD;&#xA;What I tried:&#xD;&#xA;css  &#xD;&#xA;#canvas {&#xD;&#xA;    /* these screw up the scaling of the canvas, i.e. the squares become rectangles  */&#xD;&#xA;	height: 100%; width: 100%&#xD;&#xA;    /* or */&#xD;&#xA;	height: 150px; width: 150px;&#xD;&#xA;}&#xD;&#xA;js&#xD;&#xA;function init() {&#xD;&#xA;	var canvas = document.getElementById("canvas");&#xD;&#xA;	// [snip]&#xD;&#xA;	&#xD;&#xA;	// this makes the canvas invisible&#xD;&#xA;	canvas.width = max * rectWidth;&#xD;&#xA;	canvas.height = max * rectHeight;&#xD;&#xA;}&#xD;&#xA;xml&#xD;&#xA;<!-- works, but is not dynamic -->&#xD;&#xA;<canvas id="canvas" width="150" height="150" />&#xD;&#xA;I tried combining these approaches, but neither really satisfied my needs.&#xD;&#xA;How do I change the canvas's size dynamically?