    var YourCurrentStanding = React.createClass({&#xD;&#xA;        &#xD;&#xA;        createSentence : function(array) {&#xD;&#xA;          if (array.length === 1) {&#xD;&#xA;            return array[0];&#xD;&#xA;          } else if (array.length === 0) {&#xD;&#xA;            return "";&#xD;&#xA;          }&#xD;&#xA;          return array.slice(0, array.length - 1).join(", ") + " and " + array[array.length - 1];&#xD;&#xA;        },&#xD;&#xA;       &#xD;&#xA;        render: function() {&#xD;&#xA;          var that = this;&#xD;&#xA;    &#xD;&#xA;          return (&#xD;&#xA;            <div className="component-container">&#xD;&#xA;              {&#xD;&#xA;                Object.keys(this.props.data.contents).map((key, i) => {      &#xD;&#xA;              &#xD;&#xA;                  console.log("key", key);&#xD;&#xA;                  console.log("index", i);&#xD;&#xA;                  &#xD;&#xA;                  var ordered = this.props.data.contents[key];&#xD;&#xA;                  var that = this;&#xD;&#xA;    &#xD;&#xA;                  return (&#xD;&#xA;                    <div className="bands" key={i}>&#xD;&#xA;                      {&#xD;&#xA;                        Object.keys(ordered).map(function(key) {&#xD;&#xA;                            console.log(key);          // the name of the current key.&#xD;&#xA;                            console.log(ordered[key]);   // the value of the current key.&#xD;&#xA;                               return (&#xD;&#xA;                                <p className="large-text margin-bottom">Score for {that.createSentence(ordered[key].values)} is <b className={ordered[key].alert+"-text"}>{ordered[key].label}</b></p>&#xD;&#xA;                              ); &#xD;&#xA;                        })&#xD;&#xA;                      }&#xD;&#xA;    &#xD;&#xA;                    </div>&#xD;&#xA;                  )&#xD;&#xA;                  &#xD;&#xA;                })&#xD;&#xA;              }&#xD;&#xA;            </div>&#xD;&#xA;          );&#xD;&#xA;        }&#xD;&#xA;    });