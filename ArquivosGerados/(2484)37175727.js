    import React, { Component, PropTypes } from 'react'&#xD;&#xA;    import Rebase from 're-base'&#xD;&#xA;    import auth from './auth'&#xD;&#xA;    const base = Rebase.createClass('https://myfirebaseapp.firebaseio.com')&#xD;&#xA;    export default class App extends Component {&#xD;&#xA;        constructor(props) {&#xD;&#xA;            super(props)&#xD;&#xA;            this.state = {&#xD;&#xA;                loggedIn: auth.loggedIn(),&#xD;&#xA;                user: {}&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;        // 3. passed user object from auth.js&#xD;&#xA;        // 4. but browser refresh, then it's gone ...&#xD;&#xA;        _updateAuth(loggedIn, user) {&#xD;&#xA;            this.setState({&#xD;&#xA;                loggedIn: !!loggedIn,&#xD;&#xA;                user: user&#xD;&#xA;            })&#xD;&#xA;        }&#xD;&#xA;        componentWillMount() {&#xD;&#xA;            auth.onChange = this._updateAuth.bind(this)&#xD;&#xA;        }&#xD;&#xA;        render() {&#xD;&#xA;            return ( <&#xD;&#xA;                div > {&#xD;&#xA;                    this.props.children &&&#xD;&#xA;                    React.cloneElement(this.props.children, {&#xD;&#xA;                        user: this.state.user&#xD;&#xA;                    })&#xD;&#xA;                } <&#xD;&#xA;                /div>&#xD;&#xA;            )&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;    App.propTypes = {&#xD;&#xA;        children: PropTypes.any&#xD;&#xA;    }