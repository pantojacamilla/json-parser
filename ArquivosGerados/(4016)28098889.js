    // Create canvas&#xD;&#xA;    var R = Raphael(0, 0, "100%", "100%");&#xD;&#xA;    // This is the style objects for the article labels&#xD;&#xA;    var labelattr = {&#xD;&#xA;      font: "30px Helvetica",&#xD;&#xA;      "font-weight": "bold",&#xD;&#xA;      opacity: 0.9,&#xD;&#xA;      fill: "#fff",&#xD;&#xA;      "stroke-width": 1,&#xD;&#xA;      stroke: "#000"&#xD;&#xA;    };&#xD;&#xA;    var discattr = {&#xD;&#xA;      fill: "#f0f",&#xD;&#xA;      stroke: "none",&#xD;&#xA;      opacity: 0.3 // normaly set to 0.01 so that it is not visible&#xD;&#xA;    };&#xD;&#xA;    var arrowattr = {&#xD;&#xA;      "stroke-width": 3,&#xD;&#xA;      "stroke-linecap": "round",&#xD;&#xA;      "arrow-end": "classic -wide"&#xD;&#xA;    };&#xD;&#xA;    // The JSON data object (normally provided via AJAX from a database)&#xD;&#xA;    var data = [{&#xD;&#xA;      "label": "Red",&#xD;&#xA;      "articlelabelid": "12",&#xD;&#xA;      "labelid": "28",&#xD;&#xA;      "x1": "400",&#xD;&#xA;      "y1": "150",&#xD;&#xA;      "pois": [{&#xD;&#xA;        "articlelabelid": "12",&#xD;&#xA;        "poid": "3",&#xD;&#xA;        "x2": "300",&#xD;&#xA;        "y2": "400"&#xD;&#xA;      }]&#xD;&#xA;    }, {&#xD;&#xA;      "label": "Yellow",&#xD;&#xA;      "articlelabelid": "13",&#xD;&#xA;      "labelid": "30",&#xD;&#xA;      "x1": "300",&#xD;&#xA;      "y1": "500",&#xD;&#xA;      "pois": [{&#xD;&#xA;        "articlelabelid": "13",&#xD;&#xA;        "poid": "4",&#xD;&#xA;        "x2": "400",&#xD;&#xA;        "y2": "600"&#xD;&#xA;      }, {&#xD;&#xA;        "articlelabelid": "13",&#xD;&#xA;        "poid": "5",&#xD;&#xA;        "x2": "450",&#xD;&#xA;        "y2": "600"&#xD;&#xA;      }, {&#xD;&#xA;        "articlelabelid": "13",&#xD;&#xA;        "poid": "6",&#xD;&#xA;        "x2": "200",&#xD;&#xA;        "y2": "500"&#xD;&#xA;      }]&#xD;&#xA;    }, {&#xD;&#xA;      "label": "Blue",&#xD;&#xA;      "articlelabelid": "14",&#xD;&#xA;      "labelid": "29",&#xD;&#xA;      "x1": "700",&#xD;&#xA;      "y1": "450",&#xD;&#xA;      "pois": [{&#xD;&#xA;        "articlelabelid": "14",&#xD;&#xA;        "poid": "13",&#xD;&#xA;        "x2": "900",&#xD;&#xA;        "y2": "800"&#xD;&#xA;      }, {&#xD;&#xA;        "articlelabelid": "14",&#xD;&#xA;        "poid": "14",&#xD;&#xA;        "x2": "800",&#xD;&#xA;        "y2": "700"&#xD;&#xA;      }]&#xD;&#xA;    }, {&#xD;&#xA;      "label": "Black",&#xD;&#xA;      "articlelabelid": "15",&#xD;&#xA;      "labelid": "31",&#xD;&#xA;      "x1": "100",&#xD;&#xA;      "y1": "100",&#xD;&#xA;      "pois": [{&#xD;&#xA;        "articlelabelid": "15",&#xD;&#xA;        "poid": "15",&#xD;&#xA;        "x2": "200",&#xD;&#xA;        "y2": "200"&#xD;&#xA;      }]&#xD;&#xA;    }];&#xD;&#xA;    // The start, move and up functions&#xD;&#xA;    function start() {}&#xD;&#xA;    function move(dx, dy) {&#xD;&#xA;      this.update(dx - (this.dx || 0), dy - (this.dy || 0));&#xD;&#xA;      this.dx = dx;&#xD;&#xA;      this.dy = dy;&#xD;&#xA;    }&#xD;&#xA;    function up() {&#xD;&#xA;      this.dx = this.dy = 0;&#xD;&#xA;      switch (this.type) {&#xD;&#xA;        case "text":&#xD;&#xA;          x = this.attr("x"), y = this.attr("y"), objclass = 'articlelabel_' + this.node.id;&#xD;&#xA;          break;&#xD;&#xA;        case "circle":&#xD;&#xA;          x = this.attr("cx"), y = this.attr("cy"), objclass = 'poi_' + this.node.id;&#xD;&#xA;          break;&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;    // Function to draw the labels and lines, but only the first line/poi (point of interest) in the object&#xD;&#xA;    function labeline(object) {&#xD;&#xA;      // Find coordinates of label&#xD;&#xA;      var x = parseInt(object.x1, 10);&#xD;&#xA;      var y = parseInt(object.y1, 10);&#xD;&#xA;      // Number of pois (points of interest) for this label&#xD;&#xA;      var poi_count = Object.keys(object.pois).length;&#xD;&#xA;      var ax = parseInt(object['pois'][0]['x2'], 10);&#xD;&#xA;      var ay = parseInt(object['pois'][0]['y2'], 10);&#xD;&#xA;      var label = object.label;&#xD;&#xA;      var articlelabelid = object.articlelabelid;&#xD;&#xA;      var poid = object['pois'][0]['poid'];&#xD;&#xA;      // The path - creates an array with two arrays within it&#xD;&#xA;      var path = [&#xD;&#xA;          ["M", x, y],&#xD;&#xA;          ["L", ax, ay]&#xD;&#xA;        ],&#xD;&#xA;        // The set&#xD;&#xA;        controls = R.set(&#xD;&#xA;          R.path(path).attr(arrowattr), // Controls [0]&#xD;&#xA;          R.circle(ax, ay, 9).attr(discattr), // Controls [1]&#xD;&#xA;          R.text(x, y, label).attr(labelattr) // Controls [2]&#xD;&#xA;        );&#xD;&#xA;      controls[2].update = function(x, y) {&#xD;&#xA;        this.node.id = articlelabelid;&#xD;&#xA;        var X = this.attr("x") + x,&#xD;&#xA;          Y = this.attr("y") + y;&#xD;&#xA;        this.attr({&#xD;&#xA;          x: X,&#xD;&#xA;          y: Y&#xD;&#xA;        });&#xD;&#xA;        path[0][1] = X;&#xD;&#xA;        path[0][2] = Y;&#xD;&#xA;        controls[0].attr({&#xD;&#xA;          path: path&#xD;&#xA;        });&#xD;&#xA;      };&#xD;&#xA;      controls[1].update = function(x, y) {&#xD;&#xA;        this.node.id = poid;&#xD;&#xA;        var X = this.attr("cx") + x,&#xD;&#xA;          Y = this.attr("cy") + y;&#xD;&#xA;        this.attr({&#xD;&#xA;          cx: X,&#xD;&#xA;          cy: Y&#xD;&#xA;        });&#xD;&#xA;        path[1][1] = X;&#xD;&#xA;        path[1][2] = Y;&#xD;&#xA;        controls[0].attr({&#xD;&#xA;          path: path&#xD;&#xA;        });&#xD;&#xA;      };&#xD;&#xA;      controls.drag(move, start, up);&#xD;&#xA;    }&#xD;&#xA;    // Run function for every label in the JSON data object&#xD;&#xA;    for (var i = 0; i < data.length; i++) {&#xD;&#xA;      labeline(data[i]);&#xD;&#xA;    }