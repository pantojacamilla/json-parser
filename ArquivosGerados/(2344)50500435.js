    class ODOM {&#xD;&#xA;      constructor(props) {&#xD;&#xA;        console.log('how many times')&#xD;&#xA;      }&#xD;&#xA;      @observable speed = 0&#xD;&#xA;      @action change(obj) {&#xD;&#xA;        console.log(obj)&#xD;&#xA;        Object.keys(obj).forEach(item => {&#xD;&#xA;          this[item] = obj[item]&#xD;&#xA;        })&#xD;&#xA;      }&#xD;&#xA;      @computed get velocity() {&#xD;&#xA;        console.log('entry')&#xD;&#xA;        return this.speed*60*60/1000&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;    const model = new ODOM()&#xD;&#xA;    let total = 0&#xD;&#xA;    setInterval(() => {&#xD;&#xA;      model.change({&#xD;&#xA;        speed: ++total&#xD;&#xA;      })&#xD;&#xA;    }, 3000)&#xD;&#xA;    export default model