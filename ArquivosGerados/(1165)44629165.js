    class UniformBuffer {&#xD;&#xA;        constructor(gl, data, boundLocation = 0) {&#xD;&#xA;            this.boundLocation = boundLocation;&#xD;&#xA;            this.data = new Float32Array(data);&#xD;&#xA;            this.buffer = gl.createBuffer();&#xD;&#xA;            gl.bindBuffer(gl.UNIFORM_BUFFER, this.buffer);&#xD;&#xA;            gl.bufferData(gl.UNIFORM_BUFFER, this.data, gl.DYNAMIC_DRAW);&#xD;&#xA;            gl.bindBuffer(gl.UNIFORM_BUFFER, null);&#xD;&#xA;            gl.bindBufferBase(gl.UNIFORM_BUFFER, this.boundLocation, this.buffer);&#xD;&#xA;        }&#xD;&#xA;        update(gl, data, offset = 0) {&#xD;&#xA;            this.data.set(data, offset);&#xD;&#xA;            gl.bindBuffer(gl.UNIFORM_BUFFER, this.buffer);&#xD;&#xA;            gl.bufferSubData(gl.UNIFORM_BUFFER, 0, this.data, 0, null);&#xD;&#xA;            gl.bindBuffer(gl.UNIFORM_BUFFER, null);&#xD;&#xA;            gl.bindBufferBase(gl.UNIFORM_BUFFER, this.boundLocation, this.buffer);&#xD;&#xA;        }&#xD;&#xA;    };