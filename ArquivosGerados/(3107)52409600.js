    @Override&#xD;&#xA;    public void start(Future<Void> fut) {&#xD;&#xA;        Router router = Router.router(vertx);&#xD;&#xA;        router.route("/").handler(routingContext -> {&#xD;&#xA;            HttpServerResponse response = routingContext.response();&#xD;&#xA;            response.putHeader("content-type", "text/html").end("<h1>Hello from my first Vert.x 3 application</h1>");&#xD;&#xA;        });&#xD;&#xA;    &#xD;&#xA;        router.get("/api/whiskies").handler(this::getAll);&#xD;&#xA;		router.delete("/api/whiskies/:id").handler(this::deleteOne);&#xD;&#xA;    &#xD;&#xA;        vertx.createHttpServer().requestHandler(router::accept).listen(&#xD;&#xA;                config().getInteger("http.port", 8080), result -> {&#xD;&#xA;                    if (result.succeeded()) {&#xD;&#xA;                        fut.complete();&#xD;&#xA;                    } else {&#xD;&#xA;                        fut.fail(result.cause());&#xD;&#xA;                    }&#xD;&#xA;                });&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    private void getAll(RoutingContext routingContext) {&#xD;&#xA;        routingContext.response().putHeader("content-type", "application/json; charset=utf-8")&#xD;&#xA;                                 .putHeader("Access-Control-Allow-Origin", "*")&#xD;&#xA;                                 .end(Json.encodePrettily(products.values()));&#xD;&#xA;    }&#xD;&#xA;	private void deleteOne(RoutingContext routingContext) {&#xD;&#xA;		String id = routingContext.request().getParam("id");&#xD;&#xA;		if (id == null) {&#xD;&#xA;			routingContext.response().putHeader("Access-Control-Allow-Origin", "*")&#xD;&#xA;                                     .setStatusCode(400).end();&#xD;&#xA;		} else {&#xD;&#xA;			Integer idAsInteger = Integer.valueOf(id);&#xD;&#xA;			products.remove(idAsInteger);&#xD;&#xA;		    routingContext.response().putHeader("Access-Control-Allow-Origin", "*")&#xD;&#xA;                                     .setStatusCode(204).end();&#xD;&#xA;		}&#xD;&#xA;	}