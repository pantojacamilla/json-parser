    <% @page language = "java"&#xD;&#xA;    contentType = "text/html; charset=UTF-8"&#xD;&#xA;    pageEncoding = "UTF-8" %>&#xD;&#xA;      <% @page import = "java.text.SimpleDateFormat" %>&#xD;&#xA;      <% @page import = "java.util.Date" %>&#xD;&#xA;      < !DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"&#xD;&#xA;    "http://www.w3.org/TR/html4/loose.dtd" >&#xD;&#xA;    < html >&#xD;&#xA;      < head >&#xD;&#xA;      < meta http - equiv = "Content-Type"&#xD;&#xA;    content = "text/html; charset=ISO-8859-1" >&#xD;&#xA;      < meta http - equiv = "X-UA-Compatible"&#xD;&#xA;    content = "IE=9" / >&#xD;&#xA;      < style >&#xD;&#xA;      .myBold {&#xD;&#xA;        font - weight: bold;&#xD;&#xA;        font - size: 11px;&#xD;&#xA;        color: #483D8B;&#xD;&#xA;    }&#xD;&#xA;    .mycol&#xD;&#xA;    {&#xD;&#xA;      color:# 483D8B;&#xD;&#xA;        font - weight: bold;&#xD;&#xA;        font - size: 11px;&#xD;&#xA;      }&#xD;&#xA;      .btn {&#xD;&#xA;        border: solid;&#xD;&#xA;        border - color: black;&#xD;&#xA;        background - color: #9EB32D;&#xD;&#xA;    background-image: none;&#xD;&#xA;    }&#xD;&#xA;    .x-grid-row .custom-column { &#xD;&#xA;        background-color: # D9D9D9;&#xD;&#xA;      }&#xD;&#xA;      .my - combo - lst.x - boundlist - item {&#xD;&#xA;        font - size: 8px;&#xD;&#xA;      }&#xD;&#xA;      .x - boundlist - item {&#xD;&#xA;        font - size: 10px;&#xD;&#xA;      }&#xD;&#xA;      .x - form - field {&#xD;&#xA;        height: 14px;&#xD;&#xA;        font - size: 10px;&#xD;&#xA;      }&#xD;&#xA;      .x - form - text {&#xD;&#xA;        height: 14px;&#xD;&#xA;        font - size: 10px;&#xD;&#xA;      }&#xD;&#xA;      .x - field - form {&#xD;&#xA;        height: 14px;&#xD;&#xA;        font - size: 10px;&#xD;&#xA;      }&#xD;&#xA;      .x - form - focus {&#xD;&#xA;        height: 14px;&#xD;&#xA;        font - size: 10px;&#xD;&#xA;      }&#xD;&#xA;      .x - field - form - focus {&#xD;&#xA;        height: 14px;&#xD;&#xA;        font - size: 10px;&#xD;&#xA;      }&#xD;&#xA;      .x - field -&#xD;&#xA;      default -form - focus {&#xD;&#xA;        height: 14px;&#xD;&#xA;        font - size: 10px;&#xD;&#xA;      } < /style>&#xD;&#xA;    <script>&#xD;&#xA;    Ext.Loader.setConfig({&#xD;&#xA;    	enabled : true&#xD;&#xA;    });&#xD;&#xA;    Ext.Loader.setPath('Ext.ux', 'lib');&#xD;&#xA;    Ext.require([ '*' ]);&#xD;&#xA;    / / definer For Grid&#xD;&#xA;    Ext.define('popupModel', {&#xD;&#xA;      extend: 'Ext.data.Model',&#xD;&#xA;      fields: [{&#xD;&#xA;          name: 'A'&#xD;&#xA;        }, {&#xD;&#xA;          name: 'B'&#xD;&#xA;        }, {&#xD;&#xA;          name: 'C'&#xD;&#xA;        }, {&#xD;&#xA;          name: 'D'&#xD;&#xA;        },&#xD;&#xA;      ],&#xD;&#xA;      idProperty: 'ParentfromRTNWGridModel'&#xD;&#xA;    });&#xD;&#xA;    var popupStore = new Ext.data.Store({&#xD;&#xA;      model: 'popupModel',&#xD;&#xA;      pageSize: 20&#xD;&#xA;    });&#xD;&#xA;    Ext.onReady(function() {&#xD;&#xA;      Ext.suspendLayouts();&#xD;&#xA;      // add/remove items here&#xD;&#xA;      Ext.QuickTips.init();&#xD;&#xA;      Ext.state.Manager.setProvider(Ext&#xD;&#xA;        .create('Ext.state.CookieProvider'));&#xD;&#xA;      var nwId = "";&#xD;&#xA;      var nwVal = "";&#xD;&#xA;      //var nwchangedVal = "";&#xD;&#xA;      var nwIndex = "";&#xD;&#xA;      var item = "";&#xD;&#xA;      var CellEditingRTNW = Ext.create('Ext.grid.plugin.CellEditing', {&#xD;&#xA;        pluginId: 'CellEditingRTNW',&#xD;&#xA;        extend: 'Ext.grid.Editing',&#xD;&#xA;        clicksToMoveEditor: 1,&#xD;&#xA;        clicksToEdit: 1,&#xD;&#xA;        editStyle: 'cell',&#xD;&#xA;        autoCancel: false,&#xD;&#xA;      });&#xD;&#xA;      var flag1 = false;&#xD;&#xA;      var popupPanel = Ext.create('Ext.grid.Panel', {&#xD;&#xA;        id: 'popupPanel',&#xD;&#xA;        store: popupStore,&#xD;&#xA;        title: 'popupPanel ',&#xD;&#xA;        autoScroll: true,&#xD;&#xA;        columnLines: true,&#xD;&#xA;        maximizable: true,&#xD;&#xA;        layout: {&#xD;&#xA;          type: 'vbox',&#xD;&#xA;          align: 'stretch'&#xD;&#xA;        },&#xD;&#xA;        hidden: true,&#xD;&#xA;        plugins: [&#xD;&#xA;          CellEditingRTNW,&#xD;&#xA;          Ext.create('Ext.grid.plugin.Editing', {}),&#xD;&#xA;          Ext.create('Ext.ux.ColumnAutoWidthPlugin', {})&#xD;&#xA;        ],&#xD;&#xA;        columns: [{&#xD;&#xA;          text: 'A Column',&#xD;&#xA;          width: 170,&#xD;&#xA;          flex: 1,&#xD;&#xA;          sortable: false,&#xD;&#xA;          dataIndex: 'A',&#xD;&#xA;        }, {&#xD;&#xA;          text: 'B column',&#xD;&#xA;          width: 170,&#xD;&#xA;          flex: 1,&#xD;&#xA;          sortable: false,&#xD;&#xA;          dataIndex: 'B',&#xD;&#xA;          editor: {&#xD;&#xA;            xtype: 'combobox',&#xD;&#xA;            store: storeCombo,&#xD;&#xA;            autoLoad: false,&#xD;&#xA;            hideTrigger: true,&#xD;&#xA;            queryMode: 'remote',&#xD;&#xA;            editable: false,&#xD;&#xA;            displayField: 'name',&#xD;&#xA;            valueField: 'name',&#xD;&#xA;            selectOnFocus: true,&#xD;&#xA;            d: 'popupEditor',&#xD;&#xA;            listeners: {&#xD;&#xA;              blur: function(e1, o) {&#xD;&#xA;                console.log(e1);&#xD;&#xA;              }&#xD;&#xA;            }&#xD;&#xA;          }&#xD;&#xA;        }, {&#xD;&#xA;          text: 'C Column',&#xD;&#xA;          width: 170,&#xD;&#xA;          flex: 1,&#xD;&#xA;          sortable: false,&#xD;&#xA;          dataIndex: 'Child_Name',&#xD;&#xA;          tdCls: 'custom-column'&#xD;&#xA;        }, {&#xD;&#xA;          text: 'D Column',&#xD;&#xA;          width: 170,&#xD;&#xA;          flex: 1,&#xD;&#xA;          sortable: false,&#xD;&#xA;          dataIndex: 'Child_Value',&#xD;&#xA;          tdCls: 'custom-column'&#xD;&#xA;        }],&#xD;&#xA;        viewConfig: {&#xD;&#xA;          stripeRows: true,&#xD;&#xA;          markDirty: false,&#xD;&#xA;          enableTextSelection: true,&#xD;&#xA;          displayInfo: true,&#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;      var popupFilter = Ext.create('Ext.form.Panel', {&#xD;&#xA;        id: 'popupFilter',&#xD;&#xA;        frame: true,&#xD;&#xA;        //title :'popupFilter',&#xD;&#xA;        collapsible: false,&#xD;&#xA;        collapsed: false,&#xD;&#xA;        buttonAlign: 'center',&#xD;&#xA;        layout: {&#xD;&#xA;          type: 'table',&#xD;&#xA;          columns: 4,&#xD;&#xA;          align: 'middle'&#xD;&#xA;        },&#xD;&#xA;        items: [{&#xD;&#xA;            xtype: 'radiogroup',&#xD;&#xA;            align: 'left',&#xD;&#xA;            width: 200,&#xD;&#xA;            id: 'Parentidtoselect',&#xD;&#xA;            columns: 2,&#xD;&#xA;            items: [&#xD;&#xA;              {&#xD;&#xA;                boxLabel: '1',&#xD;&#xA;                name: 'rb',&#xD;&#xA;                width: '700',&#xD;&#xA;                inputValue: '1',&#xD;&#xA;                id: '1',&#xD;&#xA;                listeners: {&#xD;&#xA;                  change: function(cb, nv, ov) {&#xD;&#xA;                    if (nv) {&#xD;&#xA;                      1.show();&#xD;&#xA;                      2.hide();&#xD;&#xA;                    }&#xD;&#xA;                  }&#xD;&#xA;                }&#xD;&#xA;              }, {&#xD;&#xA;                boxLabel: '2',&#xD;&#xA;                name: 'rb',&#xD;&#xA;                width: '700',&#xD;&#xA;                inputValue: '2',&#xD;&#xA;                hidden: true,&#xD;&#xA;                id: '2',&#xD;&#xA;                listeners: {&#xD;&#xA;                  change: function(cb, nv, ov) {&#xD;&#xA;                    if (nv) {&#xD;&#xA;                      2.show();&#xD;&#xA;                      1.hide();&#xD;&#xA;                    }&#xD;&#xA;                  }&#xD;&#xA;                }&#xD;&#xA;              }&#xD;&#xA;            ]&#xD;&#xA;          },&#xD;&#xA;          {&#xD;&#xA;            xtype: 'button',&#xD;&#xA;            text: 'Cancel',&#xD;&#xA;            id: 'cancel',&#xD;&#xA;            margin: '0 0 0 10',&#xD;&#xA;            //colspan:2,&#xD;&#xA;            width: 100,&#xD;&#xA;            handler: function() {&#xD;&#xA;              popupWindow.hide();&#xD;&#xA;            }&#xD;&#xA;          }&#xD;&#xA;        ]&#xD;&#xA;      });&#xD;&#xA;      var popupWindow = Ext.create('Ext.window.Window', {&#xD;&#xA;        autoWidth: true,&#xD;&#xA;        autoScroll: true,&#xD;&#xA;        closable: true,&#xD;&#xA;        constrainHeader: true,&#xD;&#xA;        id: 'popupWindow',&#xD;&#xA;        height: 550,&#xD;&#xA;        width: 700,&#xD;&#xA;        closeAction: 'hide',&#xD;&#xA;        plain: true,&#xD;&#xA;        stateful: false,&#xD;&#xA;        title: '<div style="text-align:center;">popupWindow</div>',&#xD;&#xA;        hidden: true,&#xD;&#xA;        maximizable: true,&#xD;&#xA;        layout: {&#xD;&#xA;          type: 'vbox',&#xD;&#xA;          align: 'stretch'&#xD;&#xA;        },&#xD;&#xA;        items: [&#xD;&#xA;          popupFilter,&#xD;&#xA;          popupPanel,&#xD;&#xA;        ],&#xD;&#xA;        listeners: {&#xD;&#xA;          beforehide: function(panel) {}&#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;      Ext.define('popupMainPanel', {&#xD;&#xA;        singleton: true,&#xD;&#xA;        popupWindow: popupWindow,&#xD;&#xA;        flag1: flag1,&#xD;&#xA;        popupPanel: popupPanel,&#xD;&#xA;        popupFilter: popupFilter&#xD;&#xA;      });&#xD;&#xA;      Ext.resumeLayouts(true);&#xD;&#xA;    }); < /script>&#xD;&#xA;    </head >&#xD;&#xA;    < body >&#xD;&#xA;      < /body>&#xD;&#xA;    </html >