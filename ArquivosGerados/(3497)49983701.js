    let colorCircles = {&#xD;&#xA;      'a': '#59bcf9',&#xD;&#xA;      'b': '#faabab',&#xD;&#xA;      'd': '#ffde85'&#xD;&#xA;    };&#xD;&#xA;    let tooltip = d3.select("body")&#xD;&#xA;      .append("div")&#xD;&#xA;      .attr("class", "tooltip-inner")&#xD;&#xA;      .style("position", "absolute")&#xD;&#xA;      .style("min-width", "12rem")&#xD;&#xA;      .style("visibility", "hidden")&#xD;&#xA;      .style("color", "#627386")&#xD;&#xA;      .style("padding", "15px")&#xD;&#xA;      .style("stroke", '#b8bfca')&#xD;&#xA;      .style("fill", "none")&#xD;&#xA;      .style("stroke-width", 1)&#xD;&#xA;      .style("background-color", "#fff")&#xD;&#xA;      .style("border-radius", "6px")&#xD;&#xA;      .style("text-align", "center")&#xD;&#xA;      .text("");&#xD;&#xA;    let bubble = d3.layout.pack()&#xD;&#xA;      .sort(null)&#xD;&#xA;      .size([width, diameter])&#xD;&#xA;      .padding(15)&#xD;&#xA;      .value(function(d) {&#xD;&#xA;        return d[columnForRadius];&#xD;&#xA;      });&#xD;&#xA;    let svg = d3.select("body")&#xD;&#xA;      .append("svg")&#xD;&#xA;      .attr("width", width)&#xD;&#xA;      .attr("height", diameter)&#xD;&#xA;      .attr("class", "bubble");&#xD;&#xA;    let nodes = bubble.nodes({&#xD;&#xA;      children: dataset&#xD;&#xA;    }).filter(function(d) {&#xD;&#xA;      return !d.children;&#xD;&#xA;    });&#xD;&#xA;    let circles = svg.selectAll("circle")&#xD;&#xA;      .data(nodes)&#xD;&#xA;      .enter()&#xD;&#xA;      .append("circle")&#xD;&#xA;      .attr("r", function(d) {&#xD;&#xA;        return d.r;&#xD;&#xA;      })&#xD;&#xA;      .attr("cx", function(d) {&#xD;&#xA;        return d.x;&#xD;&#xA;      })&#xD;&#xA;      .attr("cy", function(d) {&#xD;&#xA;        return d.y - 20;&#xD;&#xA;      })&#xD;&#xA;      .style("fill", function(d) {&#xD;&#xA;        return colorCircles[d[columnForColors]]&#xD;&#xA;      })&#xD;&#xA;      .on("mouseover", function(d) {&#xD;&#xA;        tooltip.style("visibility", "visible");&#xD;&#xA;        tooltip.html('<p>' + d[columnForColors] + ": " + d[columnForText] + "</p><div class='font-bold displayInlineBlock'> $" + d[columnForRadius] + '</div>');&#xD;&#xA;      })&#xD;&#xA;      .on("mousemove", function() {&#xD;&#xA;        return tooltip.style("top", (d3.event.offsetY - 10) + "px").style("left", (d3.event.offsetX + 10) + "px");&#xD;&#xA;      })&#xD;&#xA;      // .on("mouseout", function() {&#xD;&#xA;      //     return tooltip.style("visibility", "hidden");&#xD;&#xA;      // })&#xD;&#xA;      .attr("class", "node");&#xD;&#xA;    circles.transition()&#xD;&#xA;      .duration(1000)&#xD;&#xA;      .attr("r", function(d) {&#xD;&#xA;        return d.r;&#xD;&#xA;      })&#xD;&#xA;      .each('end', function() {&#xD;&#xA;        display_text();&#xD;&#xA;      });&#xD;&#xA;    function display_text() {&#xD;&#xA;      let text = svg&#xD;&#xA;        .selectAll(".text")&#xD;&#xA;        .data(nodes, function(d) {&#xD;&#xA;          return d[columnForText];&#xD;&#xA;        });&#xD;&#xA;      text.enter().append("text")&#xD;&#xA;        .attr("class", "graphText")&#xD;&#xA;        .attr("x", function(d) {&#xD;&#xA;          return d.x;&#xD;&#xA;        })&#xD;&#xA;        .attr("y", function(d) {&#xD;&#xA;          return d.y - 20;&#xD;&#xA;        })&#xD;&#xA;        .attr("dy", ".2em")&#xD;&#xA;        .attr("fill", "white")&#xD;&#xA;        .attr("font-size", function(d) {&#xD;&#xA;          return d.r / 5;&#xD;&#xA;        })&#xD;&#xA;        .attr("text-anchor", "middle")&#xD;&#xA;        .text(function(d) {&#xD;&#xA;          console.log(d)&#xD;&#xA;          return d[columnForText].substring(0, d.r / 3);&#xD;&#xA;        });&#xD;&#xA;      text.enter().append("text")&#xD;&#xA;        .attr("class", "graphText")&#xD;&#xA;        .attr("x", function(d) {&#xD;&#xA;          return d.x;&#xD;&#xA;        })&#xD;&#xA;        .attr("y", function(d) {&#xD;&#xA;          return d.y - 20;&#xD;&#xA;        })&#xD;&#xA;        .attr("dy", "1.3em")&#xD;&#xA;        .style("text-anchor", "middle")&#xD;&#xA;        .text(function(d) {&#xD;&#xA;          return '$' + d[columnForRadius];&#xD;&#xA;        })&#xD;&#xA;        .attr("font-size", function(d) {&#xD;&#xA;          return d.r / 5;&#xD;&#xA;        })&#xD;&#xA;        .attr("fill", "white");&#xD;&#xA;    }&#xD;&#xA;    function hide_text() {&#xD;&#xA;      let text = svg.selectAll(".text").remove();&#xD;&#xA;    }&#xD;&#xA;    d3.select(self.frameElement)&#xD;&#xA;      .style("height", diameter + "px");