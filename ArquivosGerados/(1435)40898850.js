    const regex = /([0-9]{1,2}|[a-z]{1,3})-([0-9]{2,3}|[a-z]{2,3})-([0-9]{1,2}|[a-z]{1,2})/gi;&#xD;&#xA;    const str = `XX-99-99&#xD;&#xA;    2​	1965​	99-99-XX ​&#xD;&#xA;    3​	1973​	99-XX-99​&#xD;&#xA;    4​	1978​	XX-99-XX ​&#xD;&#xA;    5​	1991​	XX-XX-99 ​&#xD;&#xA;    6​	1999​	99-XX-XX ​&#xD;&#xA;    7​	2005​	99-XXX-9​&#xD;&#xA;    8​	2009​	9-XXX-99​&#xD;&#xA;    9​	2006​	XX-999-X ​&#xD;&#xA;    10​	2008​	X-999-XX ​&#xD;&#xA;    ​11	​2015	​XXX-99-X`;&#xD;&#xA;    let m;&#xD;&#xA;    while ((m = regex.exec(str)) !== null) {&#xD;&#xA;        // This is necessary to avoid infinite loops with zero-width matches&#xD;&#xA;        if (m.index === regex.lastIndex) {&#xD;&#xA;            regex.lastIndex++;&#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        // The result can be accessed through the `m`-variable.&#xD;&#xA;        m.forEach((match, groupIndex) => {&#xD;&#xA;            console.log(`Found match, group ${groupIndex}: ${match}`);&#xD;&#xA;        });&#xD;&#xA;    }