    /** First JS script : classie.js **/&#xD;&#xA;    /*!&#xD;&#xA;     * classie - class helper functions&#xD;&#xA;     * from bonzo https://github.com/ded/bonzo&#xD;&#xA;     * &#xD;&#xA;     * classie.has( elem, 'my-class' ) -> true/false&#xD;&#xA;     * classie.add( elem, 'my-new-class' )&#xD;&#xA;     * classie.remove( elem, 'my-unwanted-class' )&#xD;&#xA;     * classie.toggle( elem, 'my-class' )&#xD;&#xA;     */&#xD;&#xA;    /*jshint browser: true, strict: true, undef: true */&#xD;&#xA;    /*global define: false */&#xD;&#xA;    ( function( window ) {&#xD;&#xA;    'use strict';&#xD;&#xA;    // class helper functions from bonzo https://github.com/ded/bonzo&#xD;&#xA;    function classReg( className ) {&#xD;&#xA;      return new RegExp("(^|\\s+)" + className + "(\\s+|$)");&#xD;&#xA;    }&#xD;&#xA;    // classList support for class management&#xD;&#xA;    // altho to be fair, the api sucks because it won't accept multiple classes at once&#xD;&#xA;    var hasClass, addClass, removeClass;&#xD;&#xA;    if ( 'classList' in document.documentElement ) {&#xD;&#xA;      hasClass = function( elem, c ) {&#xD;&#xA;        return elem.classList.contains( c );&#xD;&#xA;      };&#xD;&#xA;      addClass = function( elem, c ) {&#xD;&#xA;        elem.classList.add( c );&#xD;&#xA;      };&#xD;&#xA;      removeClass = function( elem, c ) {&#xD;&#xA;        elem.classList.remove( c );&#xD;&#xA;      };&#xD;&#xA;    }&#xD;&#xA;    else {&#xD;&#xA;      hasClass = function( elem, c ) {&#xD;&#xA;        return classReg( c ).test( elem.className );&#xD;&#xA;      };&#xD;&#xA;      addClass = function( elem, c ) {&#xD;&#xA;        if ( !hasClass( elem, c ) ) {&#xD;&#xA;          elem.className = elem.className + ' ' + c;&#xD;&#xA;        }&#xD;&#xA;      };&#xD;&#xA;      removeClass = function( elem, c ) {&#xD;&#xA;        elem.className = elem.className.replace( classReg( c ), ' ' );&#xD;&#xA;      };&#xD;&#xA;    }&#xD;&#xA;    function toggleClass( elem, c ) {&#xD;&#xA;      var fn = hasClass( elem, c ) ? removeClass : addClass;&#xD;&#xA;      fn( elem, c );&#xD;&#xA;    }&#xD;&#xA;    var classie = {&#xD;&#xA;      // full names&#xD;&#xA;      hasClass: hasClass,&#xD;&#xA;      addClass: addClass,&#xD;&#xA;      removeClass: removeClass,&#xD;&#xA;      toggleClass: toggleClass,&#xD;&#xA;      // short names&#xD;&#xA;      has: hasClass,&#xD;&#xA;      add: addClass,&#xD;&#xA;      remove: removeClass,&#xD;&#xA;      toggle: toggleClass&#xD;&#xA;    };&#xD;&#xA;    // transport&#xD;&#xA;    if ( typeof define === 'function' && define.amd ) {&#xD;&#xA;      // AMD&#xD;&#xA;      define( classie );&#xD;&#xA;    } else {&#xD;&#xA;      // browser global&#xD;&#xA;      window.classie = classie;&#xD;&#xA;    }&#xD;&#xA;    })( window );&#xD;&#xA;    /** Second JS Script : modalEffects.js **/&#xD;&#xA;    /**&#xD;&#xA;     * modalEffects.js v1.0.0&#xD;&#xA;     * http://www.codrops.com&#xD;&#xA;     *&#xD;&#xA;     * Licensed under the MIT license.&#xD;&#xA;     * http://www.opensource.org/licenses/mit-license.php&#xD;&#xA;     * &#xD;&#xA;     * Copyright 2013, Codrops&#xD;&#xA;     * http://www.codrops.com&#xD;&#xA;     */&#xD;&#xA;    var ModalEffects = (function() {&#xD;&#xA;    	function init() {&#xD;&#xA;    		var overlay = document.querySelector( '.md-overlay' );&#xD;&#xA;    		[].slice.call( document.querySelectorAll( '.md-trigger' ) ).forEach( function( el, i ) {&#xD;&#xA;    			var modal = document.querySelector( '#' + el.getAttribute( 'data-modal' ) ),&#xD;&#xA;    				close = modal.querySelector( '.md-close' );&#xD;&#xA;    			function removeModal( hasPerspective ) {&#xD;&#xA;    				classie.remove( modal, 'md-show' );&#xD;&#xA;    				if( hasPerspective ) {&#xD;&#xA;    					classie.remove( document.documentElement, 'md-perspective' );&#xD;&#xA;    				}&#xD;&#xA;    			}&#xD;&#xA;    			function removeModalHandler() {&#xD;&#xA;    				removeModal( classie.has( el, 'md-setperspective' ) ); &#xD;&#xA;    			}&#xD;&#xA;    			el.addEventListener( 'click', function( ev ) {&#xD;&#xA;    				classie.add( modal, 'md-show' );&#xD;&#xA;    				overlay.removeEventListener( 'click', removeModalHandler );&#xD;&#xA;    				overlay.addEventListener( 'click', removeModalHandler );&#xD;&#xA;    				if( classie.has( el, 'md-setperspective' ) ) {&#xD;&#xA;    					setTimeout( function() {&#xD;&#xA;    						classie.add( document.documentElement, 'md-perspective' );&#xD;&#xA;    					}, 25 );&#xD;&#xA;    				}&#xD;&#xA;    			});&#xD;&#xA;    			close.addEventListener( 'click', function( ev ) {&#xD;&#xA;    				ev.stopPropagation();&#xD;&#xA;    				removeModalHandler();&#xD;&#xA;    			});&#xD;&#xA;    		} );&#xD;&#xA;    	}&#xD;&#xA;    	init();&#xD;&#xA;    })();