    import React from 'react';&#xD;&#xA;    import { Dimensions } from 'react-native';&#xD;&#xA;    import { Icon } from 'react-native-elements';&#xD;&#xA;    import { DrawerNavigator, StackNavigator, addNavigationHelpers } from 'react-navigation';&#xD;&#xA;    //redux related imports&#xD;&#xA;    import { createStore, combineReducers } from 'redux';&#xD;&#xA;    import { Provider, connect } from 'react-redux';&#xD;&#xA;    import Attendance from './containers/pages/Attendance';&#xD;&#xA;    import Fees from './containers/pages/Fees';&#xD;&#xA;    import Exams from './containers/pages/Exams';&#xD;&#xA;    import InitializeUser from './containers/pages/InitializeUser';&#xD;&#xA;    import Landing from './Landing';&#xD;&#xA;    import Login from './containers/pages/Login';&#xD;&#xA;    import Search from './containers/pages/Search';&#xD;&#xA;    import Staff from './containers/pages/Staff';&#xD;&#xA;    import Stats from './containers/pages/Stats';&#xD;&#xA;    import Students from './containers/pages/Students';&#xD;&#xA;    import Verification from './containers/pages/verify';&#xD;&#xA;    import ProfileDetail from './components/pages/ProfileDetail';&#xD;&#xA;    import FeesDetail from './containers/pages/FeesDetails';&#xD;&#xA;    import MainReport from './containers/pages/Reports/Main_Report';&#xD;&#xA;    import AcademicDetails from './containers/pages/Reports/Student_Academic_Details';&#xD;&#xA;    import { Constants } from './config';&#xD;&#xA;    import ResultsLanding from './containers/pages/Reports/ResultsLanding';&#xD;&#xA;    import { CustomDrawerContentComponent } from '../src/components/base/SideMenu';&#xD;&#xA;    const screenWidth = Dimensions.get('window').width;&#xD;&#xA;    const MainPages = DrawerNavigator({&#xD;&#xA;      StudentsPage: {&#xD;&#xA;        path: '/Students',&#xD;&#xA;        screen: Students&#xD;&#xA;      },&#xD;&#xA;      SearchPage: {&#xD;&#xA;        path: '/Seacrh',&#xD;&#xA;        screen: Search&#xD;&#xA;      },&#xD;&#xA;      Staff: {&#xD;&#xA;        path: '/Staff',&#xD;&#xA;        screen: Staff&#xD;&#xA;      },&#xD;&#xA;      Fees: {&#xD;&#xA;        path: '/Fees',&#xD;&#xA;        screen: Fees&#xD;&#xA;      },&#xD;&#xA;      Stats: {&#xD;&#xA;        path: '/Stats',&#xD;&#xA;        screen: Stats&#xD;&#xA;      },&#xD;&#xA;      Results: {&#xD;&#xA;        screen: ResultsLanding,&#xD;&#xA;        navigationOptions: {&#xD;&#xA;          tintColor: 'red',&#xD;&#xA;          flex: 1,&#xD;&#xA;          drawerIcon: ({ tintColor }) => (&#xD;&#xA;            <Icon&#xD;&#xA;              name="content-paste"&#xD;&#xA;              color={tintColor}&#xD;&#xA;            />&#xD;&#xA;          )&#xD;&#xA;        }&#xD;&#xA;      },&#xD;&#xA;      Attendance:&#xD;&#xA;      {&#xD;&#xA;        path: '/Attendance',&#xD;&#xA;        screen: Attendance&#xD;&#xA;      },&#xD;&#xA;    },&#xD;&#xA;      {&#xD;&#xA;        initialRouteName: 'StudentsPage',&#xD;&#xA;        contentOptions: {&#xD;&#xA;          activeTintColor: Constants.ui.THEME,&#xD;&#xA;          activeBackgroundColor: 'rgba(0,0,0,0.1)',&#xD;&#xA;          inactiveTintColor: 'rgba(0,0,0,0.6)',&#xD;&#xA;          labelStyle: {&#xD;&#xA;            fontSize: 12,&#xD;&#xA;            marginLeft: 10,&#xD;&#xA;          },&#xD;&#xA;        },&#xD;&#xA;        drawerWidth: screenWidth > 320 ? 300 : 250,&#xD;&#xA;        contentComponent: CustomDrawerContentComponent&#xD;&#xA;      });&#xD;&#xA;    export const Navigator = StackNavigator({&#xD;&#xA;      LandingPage: {&#xD;&#xA;        screen: Landing,&#xD;&#xA;        navigationOptions: {&#xD;&#xA;          header: null&#xD;&#xA;        }&#xD;&#xA;      },&#xD;&#xA;      LoginPage: {&#xD;&#xA;        screen: Login,&#xD;&#xA;        navigationOptions: {&#xD;&#xA;          header: null&#xD;&#xA;        },&#xD;&#xA;      },&#xD;&#xA;      ProfileDetailPage: {&#xD;&#xA;        screen: ProfileDetail,&#xD;&#xA;        headerMode: 'screen',&#xD;&#xA;        navigationOptions: {&#xD;&#xA;          header: null&#xD;&#xA;        }&#xD;&#xA;      },&#xD;&#xA;      FeesDetailPage:&#xD;&#xA;      {&#xD;&#xA;        screen: FeesDetail,&#xD;&#xA;        navigationOptions: {&#xD;&#xA;          header: null&#xD;&#xA;        },&#xD;&#xA;      },&#xD;&#xA;      VerifyPage: {&#xD;&#xA;        screen: Verification,&#xD;&#xA;        navigationOptions: {&#xD;&#xA;          header: null&#xD;&#xA;        },&#xD;&#xA;      },&#xD;&#xA;      InitUserPage: {&#xD;&#xA;        screen: InitializeUser,&#xD;&#xA;        navigationOptions: {&#xD;&#xA;          header: null&#xD;&#xA;        },&#xD;&#xA;      },&#xD;&#xA;      MainPages: {&#xD;&#xA;        screen: MainPages,&#xD;&#xA;        navigationOptions: {&#xD;&#xA;          header: null&#xD;&#xA;        }&#xD;&#xA;      },&#xD;&#xA;      MainReportPage: {&#xD;&#xA;        screen: MainReport,&#xD;&#xA;        navigationOptions: {&#xD;&#xA;          header: null&#xD;&#xA;        }&#xD;&#xA;      },&#xD;&#xA;      ExamsMainPage: {&#xD;&#xA;        screen: Exams,&#xD;&#xA;        navigationOptions: {&#xD;&#xA;          header: null&#xD;&#xA;        }&#xD;&#xA;      },&#xD;&#xA;      AcademicDetailsPage: {&#xD;&#xA;        screen: AcademicDetails,&#xD;&#xA;        navigationOptions: {&#xD;&#xA;          header: null&#xD;&#xA;        }&#xD;&#xA;      },&#xD;&#xA;    });  &#xD;&#xA;    const initialState = MainPages.router.getStateForAction(&#xD;&#xA;      MainPages.router.getActionForPathAndParams('StudentsPage'));  &#xD;&#xA;    const navReducer = (state = initialState, action) => {&#xD;&#xA;      const nextState = MainPages.router.getStateForAction(action, state);&#xD;&#xA;      return nextState || state;&#xD;&#xA;    }; &#xD;&#xA;    const appReducer = combineReducers({&#xD;&#xA;      nav: navReducer&#xD;&#xA;    });&#xD;&#xA;    class App extends React.Component {&#xD;&#xA;      componentWillReceiveProps(nextProps) {&#xD;&#xA;        console.warn('nextProps: ', JSON.stringify(nextProps, null, 4));&#xD;&#xA;      }&#xD;&#xA;      render() {&#xD;&#xA;        return (&#xD;&#xA;          <MainPages &#xD;&#xA;            navigation={addNavigationHelpers({&#xD;&#xA;            dispatch: this.props.dispatch,&#xD;&#xA;            state: this.props.nav,&#xD;&#xA;          })} />&#xD;&#xA;        );&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;    const mapStateToProps = (state) => ({&#xD;&#xA;      nav: state.nav&#xD;&#xA;    });&#xD;&#xA;    const AppWithNavigationState = connect(mapStateToProps)(App);&#xD;&#xA;    const store = createStore(appReducer);&#xD;&#xA;    class Root extends React.Component {&#xD;&#xA;      render() {&#xD;&#xA;        return (&#xD;&#xA;          <Provider store={store}>&#xD;&#xA;            <AppWithNavigationState />&#xD;&#xA;          </Provider>&#xD;&#xA;        );&#xD;&#xA;      }&#xD;&#xA;    }