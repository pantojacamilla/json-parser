    const puppeteer = require('puppeteer');&#xD;&#xA;    function run() {&#xD;&#xA;        return new Promise(async (resolve, reject) => {&#xD;&#xA;            try {&#xD;&#xA;                const browser = await puppeteer.launch();&#xD;&#xA;                const page = await browser.newPage();&#xD;&#xA;                const urls = ["https://www.marksandspencer.com/high-neck-long-sleeve-blouse/p/p60260040?image=SD_01_T43_5168_HD_X_EC_90&color=LIGHTDENIM&prevPage=plp", "https://www.marksandspencer.com/pure-cotton-printed-short-sleeve-t-shirt/p/p60263529?image=SD_01_T41_8030Z_Z4_X_EC_90&color=WHITEMIX&prevPage=plp"];&#xD;&#xA;                &#xD;&#xA;                  for (let i = 0; i < urls.length; i++) {&#xD;&#xA;                    const url = urls[i];&#xD;&#xA;                    await page.goto(url);&#xD;&#xA;                    let products = await page.evaluate(() => {&#xD;&#xA;                        let product = document.querySelector('h1[itemprop=name]').innerText;&#xD;&#xA;                        let results = [];&#xD;&#xA;                        let items = document.querySelectorAll('[data-ttip-id=sizeGridTooltip] tbody tr td label');&#xD;&#xA;                        items.forEach((element) => {&#xD;&#xA;                            let size = element.getAttribute('for');&#xD;&#xA;                            let stockLevel = "";&#xD;&#xA;                            let nearest_td = element.closest('td');&#xD;&#xA;                            if (nearest_td.classList.contains('low-stock')) {&#xD;&#xA;                                stockLevel = "Low stock"&#xD;&#xA;                            } else if (nearest_td.classList.contains('out-of-stock')) {&#xD;&#xA;                                stockLevel = "Out of stock"&#xD;&#xA;                            } else {&#xD;&#xA;                                stockLevel = "In stock"&#xD;&#xA;                            }&#xD;&#xA;                            results.push({&#xD;&#xA;                                product: product,&#xD;&#xA;                                size: size,&#xD;&#xA;                                stock: stockLevel&#xD;&#xA;                            })&#xD;&#xA;                        });&#xD;&#xA;                        return results&#xD;&#xA;                    })&#xD;&#xA;                    browser.close();&#xD;&#xA;                    return resolve(products);&#xD;&#xA;                }&#xD;&#xA;                &#xD;&#xA;            } catch (e) {&#xD;&#xA;                return reject(e);&#xD;&#xA;            }&#xD;&#xA;        })&#xD;&#xA;    }&#xD;&#xA;    run().then(console.log).catch(console.error);