    function find_closest_marker( address ) {&#xD;&#xA;        var lat, lng, pos;&#xD;&#xA;        var closestMarker = -1;&#xD;&#xA;        var closestDistance = Number.MAX_VALUE;&#xD;&#xA;        geocoder.geocode( { 'address': address}, function(results, status) {&#xD;&#xA;          // and this is function which processes response&#xD;&#xA;          if (status == google.maps.GeocoderStatus.OK) {&#xD;&#xA;            lat = results[0].geometry.location.lat();&#xD;&#xA;            lng = results[0].geometry.location.lng();&#xD;&#xA;            pos = new google.maps.LatLng(lat, lng);&#xD;&#xA;              for( i=0;i<markers.length; i++ ) {&#xD;&#xA;                  var distance = google.maps.geometry.spherical.computeDistanceBetween(markers[i].getPosition(), pos);&#xD;&#xA;                  if ( distance < closestDistance ) {&#xD;&#xA;                      closestMarker = i;&#xD;&#xA;                      closestDistance = distance;&#xD;&#xA;                  }&#xD;&#xA;              }&#xD;&#xA;            }&#xD;&#xA;              lat = markers[closestMarker].position.lat();&#xD;&#xA;              lng = markers[closestMarker].position.lng();&#xD;&#xA;              pos = new google.maps.LatLng(lat, lng);&#xD;&#xA;              return pos;&#xD;&#xA;        });&#xD;&#xA;    }&#xD;&#xA;    function calcRoute(lat, lg) {&#xD;&#xA;      var start, end;&#xD;&#xA;      &#xD;&#xA;      start = document.getElementById('start').value;&#xD;&#xA;      if (!lat) {&#xD;&#xA;        end = find_closest_marker(start);&#xD;&#xA;      }&#xD;&#xA;      else {&#xD;&#xA;        end = lat + ',' + lg;&#xD;&#xA;      }&#xD;&#xA;      var request = {&#xD;&#xA;        origin: start,&#xD;&#xA;        destination: end,&#xD;&#xA;        travelMode: google.maps.TravelMode.DRIVING&#xD;&#xA;      };&#xD;&#xA;      directionsService.route(request, function(response, status) {&#xD;&#xA;        if (status == google.maps.DirectionsStatus.OK) {&#xD;&#xA;          directionsDisplay.setDirections(response);&#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;    }