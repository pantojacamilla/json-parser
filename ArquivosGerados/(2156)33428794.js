    /*!&#xD;&#xA;    Name: Instagram Lite&#xD;&#xA;    Dependencies: jQuery&#xD;&#xA;    Author: Michael Lynch&#xD;&#xA;    Author URL: http://michaelynch.com&#xD;&#xA;    Date Created: January 14, 2014&#xD;&#xA;    Licensed under the MIT license&#xD;&#xA;    */&#xD;&#xA;    ;(function($) {&#xD;&#xA;        $.fn.instagramLite = function(options) {&#xD;&#xA;        &#xD;&#xA;        	// return if no element was bound&#xD;&#xA;    		// so chained events can continue&#xD;&#xA;    		if(!this.length) { &#xD;&#xA;    			return this; &#xD;&#xA;    		}&#xD;&#xA;            &#xD;&#xA;            // define plugin&#xD;&#xA;            plugin = this;&#xD;&#xA;            &#xD;&#xA;            // define default parameters&#xD;&#xA;            plugin.defaults = {&#xD;&#xA;                username: null,&#xD;&#xA;                clientID: null,&#xD;&#xA;                limit: null,&#xD;&#xA;                list: true,&#xD;&#xA;                videos: false,&#xD;&#xA;                urls: false,&#xD;&#xA;                captions: false,&#xD;&#xA;                date: false,&#xD;&#xA;                likes: false,&#xD;&#xA;                comments_count: false,&#xD;&#xA;                max_id: null,&#xD;&#xA;                load_more: null,&#xD;&#xA;                error: function() {},&#xD;&#xA;                success: function() {}&#xD;&#xA;            }&#xD;&#xA;            &#xD;&#xA;            // vars&#xD;&#xA;            var s = $.extend({}, plugin.defaults, options),&#xD;&#xA;            	el = $(this);&#xD;&#xA;            var getMaxId = function(items) {&#xD;&#xA;    	    &#xD;&#xA;    	    	// return id of last item&#xD;&#xA;    	    	return items[items.length-1].id;&#xD;&#xA;    	    };&#xD;&#xA;    	    &#xD;&#xA;    	    var formatCaption = function(caption) {&#xD;&#xA;    	    &#xD;&#xA;    	    	var words = caption.split(' '),&#xD;&#xA;    	    		newCaption = '';&#xD;&#xA;    	    	&#xD;&#xA;    	    	for(var i = 0; i < words.length; i++) {&#xD;&#xA;    	    		&#xD;&#xA;    	    		var word;&#xD;&#xA;    		    	&#xD;&#xA;    		    	if(words[i][0] == '@') {&#xD;&#xA;    			    	var a = '<a href="http://twitter.com/'+words[i].replace('@', '').toLowerCase()+'" target="_blank">'+words[i]+'</a>';&#xD;&#xA;    			    	word = a;&#xD;&#xA;    			    } else if(words[i][0] == '#') {&#xD;&#xA;    			    	var a = '<a href="http://twitter.com/hashtag/'+words[i].replace('#', '').toLowerCase()+'" target="_blank">'+words[i]+'</a>';&#xD;&#xA;    			    	word = a;&#xD;&#xA;    		    	} else {&#xD;&#xA;    			    	word = words[i]&#xD;&#xA;    		    	}&#xD;&#xA;    	&#xD;&#xA;    		    	newCaption += word + ' ';&#xD;&#xA;    	    	}&#xD;&#xA;    	    &#xD;&#xA;    	    	return newCaption;&#xD;&#xA;    		    &#xD;&#xA;    	    };&#xD;&#xA;    	    &#xD;&#xA;    	    var loadContent = function() {&#xD;&#xA;    	&#xD;&#xA;    	    	// if client ID and username were provided&#xD;&#xA;    	        if(s.clientID && s.username) {&#xD;&#xA;    	        &#xD;&#xA;    		        // for each element&#xD;&#xA;    		        el.each(function() {&#xD;&#xA;    		        &#xD;&#xA;    		        	var el = $(this);&#xD;&#xA;    		        &#xD;&#xA;    		        	// search the user&#xD;&#xA;    		        	// to get user ID&#xD;&#xA;    		        	$.ajax({&#xD;&#xA;    			        	type: 'GET',&#xD;&#xA;    			        	url: 'https://api.instagram.com/v1/users/search?q='+s.username+'&client_id='+s.clientID+'&callback=?',&#xD;&#xA;    			        	dataType: 'jsonp',&#xD;&#xA;    			        	success: function(data) {&#xD;&#xA;    		&#xD;&#xA;    			        		if(data.data.length) {&#xD;&#xA;    				        		&#xD;&#xA;    			        			// define user namespace&#xD;&#xA;    				        		var thisUser = data.data[0];&#xD;&#xA;    				        		&#xD;&#xA;    			        			// construct API endpoint&#xD;&#xA;    								var url = 'https://api.instagram.com/v1/users/'+thisUser.id+'/media/recent/?client_id='+s.clientID+'&count='+s.limit+'&callback=?';&#xD;&#xA;    								&#xD;&#xA;    								// concat max id if max id is set&#xD;&#xA;    								url += (s.max_id) ? '&max_id='+s.max_id : '';&#xD;&#xA;    			&#xD;&#xA;    			        			$.ajax({&#xD;&#xA;    						        	type: 'GET',&#xD;&#xA;    						        	url: url,&#xD;&#xA;    						        	dataType: 'jsonp',&#xD;&#xA;    						        	success: function(data) {&#xD;&#xA;    						        		&#xD;&#xA;    						        		// if success status&#xD;&#xA;    						        		if(data.meta.code === 200 && data.data.length) {&#xD;&#xA;    											&#xD;&#xA;    							        		// for each piece of media returned&#xD;&#xA;    							        		for(var i = 0; i < data.data.length; i++) {&#xD;&#xA;    							        		&#xD;&#xA;    							        			// define media namespace&#xD;&#xA;    							        			var thisMedia = data.data[i],&#xD;&#xA;    							        				item;&#xD;&#xA;    							        			&#xD;&#xA;    							        			// if media type is image or videos is set to false&#xD;&#xA;    							        			if(thisMedia.type === 'image' || !s.videos) {&#xD;&#xA;    							        			&#xD;&#xA;    								        			// construct image&#xD;&#xA;    								        			item = '<img class="il-photo__img" src="'+thisMedia.images.standard_resolution.url+'" alt="Instagram Image" data-filter="'+thisMedia.filter+'" />';&#xD;&#xA;    								        			// if url setting is true&#xD;&#xA;    								        			if(s.urls) {&#xD;&#xA;    								        			&#xD;&#xA;    								        				item = '<a href="'+thisMedia.link+'" target="_blank">'+item+'</a>';&#xD;&#xA;    									        			&#xD;&#xA;    								        			}&#xD;&#xA;    								        			&#xD;&#xA;    								        			if(s.captions || s.date || s.likes || s.comments_count) {&#xD;&#xA;    									        			item += '<div class="il-photo__meta">';&#xD;&#xA;    								        			}&#xD;&#xA;    								        			&#xD;&#xA;    								        			// if caption setting is true&#xD;&#xA;    								        			if(s.captions && thisMedia.caption) {&#xD;&#xA;    								        			&#xD;&#xA;    								        				item += '<div class="il-photo__caption" data-caption-id="'+thisMedia.caption.id+'">'+formatCaption(thisMedia.caption.text)+'</div>';&#xD;&#xA;    									        			&#xD;&#xA;    								        			}&#xD;&#xA;    								        			&#xD;&#xA;    								        			// if date setting is true&#xD;&#xA;    								        			if(s.date) {&#xD;&#xA;    								        			&#xD;&#xA;    								        				var date = new Date(thisMedia.created_time * 1000),&#xD;&#xA;    								        					day = date.getDate(),&#xD;&#xA;    															month = date.getMonth() + 1,&#xD;&#xA;    															year = date.getFullYear(),&#xD;&#xA;    															hours = date.getHours(),&#xD;&#xA;    															minutes = date.getMinutes(),&#xD;&#xA;    															seconds = date.getSeconds();&#xD;&#xA;    															&#xD;&#xA;    														date = month +'/'+ day +'/'+ year;&#xD;&#xA;    								        			&#xD;&#xA;    								        				item += '<div class="il-photo__date">'+date+'</div>';&#xD;&#xA;    									        			&#xD;&#xA;    								        			}&#xD;&#xA;    								        			&#xD;&#xA;    								        			// if likes setting is true&#xD;&#xA;    								        			if(s.likes) {&#xD;&#xA;    								        			&#xD;&#xA;    								        				item += '<div class="il-photo__likes">'+thisMedia.likes.count+'</div>';&#xD;&#xA;    									        			&#xD;&#xA;    								        			}&#xD;&#xA;    								        			&#xD;&#xA;    								        			// if caption setting is true&#xD;&#xA;    								        			if(s.comments_count && thisMedia.comments) {&#xD;&#xA;    								        			&#xD;&#xA;    								        				item += '<div class="il-photo__comments">'+thisMedia.comments.count+'</div>';&#xD;&#xA;    									        			&#xD;&#xA;    								        			}&#xD;&#xA;    								        			&#xD;&#xA;    								        			if(s.captions || s.date || s.likes || s.comments_count) {&#xD;&#xA;    									        			item += '</div>';&#xD;&#xA;    								        			}&#xD;&#xA;    							        			}&#xD;&#xA;    							        			&#xD;&#xA;    							        			if(thisMedia.type === 'video' && s.videos) {&#xD;&#xA;    							        				&#xD;&#xA;    							        				if(thisMedia.videos) {&#xD;&#xA;    							        				&#xD;&#xA;    							        					var src;&#xD;&#xA;    							        				&#xD;&#xA;    							        					if(thisMedia.videos.standard_resolution) {&#xD;&#xA;    							        					&#xD;&#xA;    							        						src = thisMedia.videos.standard_resolution.url;&#xD;&#xA;    								        					&#xD;&#xA;    							        					} else if(thisMedia.videos.low_resolution) {&#xD;&#xA;    							        					&#xD;&#xA;    							        						src = thisMedia.videos.low_resolution.url;&#xD;&#xA;    								        					&#xD;&#xA;    							        					} else if(thisMedia.videos.low_bandwidth) {&#xD;&#xA;    							        					&#xD;&#xA;    							        						src = thisMedia.videos.low_bandwidth.url;&#xD;&#xA;    								        					&#xD;&#xA;    							        					}&#xD;&#xA;    							        					&#xD;&#xA;    							        					item = '<video poster="'+thisMedia.images.standard_resolution.url+'" controls>';&#xD;&#xA;    							        					&#xD;&#xA;    							        					item += '<source src="'+src+'" type="video/mp4;"></source>';&#xD;&#xA;    							        					&#xD;&#xA;    							        					item += '</video>';&#xD;&#xA;    								        				&#xD;&#xA;    							        				}&#xD;&#xA;    							        			}&#xD;&#xA;    							        			&#xD;&#xA;    							        			// if list setting is true&#xD;&#xA;    							        			if(s.list && item) {&#xD;&#xA;    							        			&#xD;&#xA;    							        				// redefine item with wrapping list item&#xD;&#xA;    							        				item = '<li class="il-item" data-instagram-id="'+thisMedia.id+'">'+item+'</li>';&#xD;&#xA;    							        			}&#xD;&#xA;    							        			// append image / video&#xD;&#xA;    							        			if(item !== '') {&#xD;&#xA;    							        				el.append(item);&#xD;&#xA;    							        			}&#xD;&#xA;    							        		}&#xD;&#xA;    							        		&#xD;&#xA;    							        		// set new max id&#xD;&#xA;    							        		s.max_id = getMaxId(data.data);&#xD;&#xA;    							        		&#xD;&#xA;    							        		// execute success callback&#xD;&#xA;    							        		s.success.call(this);&#xD;&#xA;    						        		&#xD;&#xA;    						        		} else {&#xD;&#xA;    							        		&#xD;&#xA;    							        		// execute error callback&#xD;&#xA;    							        		s.error.call(this, data.meta.code, data.meta.error_message);&#xD;&#xA;    							        		&#xD;&#xA;    						        		}&#xD;&#xA;    						        	&#xD;&#xA;    						        	},&#xD;&#xA;    						        	error: function() {&#xD;&#xA;    						        	&#xD;&#xA;    						        		// recent media ajax request failed&#xD;&#xA;    						        		// execute error callback&#xD;&#xA;    						        		s.error.call(this);&#xD;&#xA;    						        	}&#xD;&#xA;    						        });&#xD;&#xA;    	&#xD;&#xA;    			        		} else {&#xD;&#xA;    			        		&#xD;&#xA;    			        			// error finding username&#xD;&#xA;    			        			// execute error callback&#xD;&#xA;    								s.error.call(this);&#xD;&#xA;    				        		&#xD;&#xA;    			        		}&#xD;&#xA;    			        	},&#xD;&#xA;    			        	error: function() {&#xD;&#xA;    			        	&#xD;&#xA;    			        		// search username ajax request failed&#xD;&#xA;    			        		// execute error callback&#xD;&#xA;    							s.error.call(this);&#xD;&#xA;    				        	&#xD;&#xA;    			        	}&#xD;&#xA;    		        	});&#xD;&#xA;    		        &#xD;&#xA;    		        });&#xD;&#xA;    	        &#xD;&#xA;    	        } else {&#xD;&#xA;    	        &#xD;&#xA;    	        	// username or client ID were not provided&#xD;&#xA;    			    // execute error callback&#xD;&#xA;    				s.error.call(this);&#xD;&#xA;    	        };&#xD;&#xA;    	    }&#xD;&#xA;    	    &#xD;&#xA;    	    // bind load more click event&#xD;&#xA;            if(s.load_more){&#xD;&#xA;            	$(s.load_more).on('click', function(e) {&#xD;&#xA;    	        	e.preventDefault();&#xD;&#xA;    	        	loadContent();&#xD;&#xA;    	        });&#xD;&#xA;            }&#xD;&#xA;    	    &#xD;&#xA;    	    // init&#xD;&#xA;            loadContent(); &#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;    })(jQuery);