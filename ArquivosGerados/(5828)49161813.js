    ProcessDatabase.prototype.addTestCaseToSet = function (data) {&#xD;&#xA;        return new Promise((resolve, reject) => {&#xD;&#xA;            console.log('in addTestCaseToSet', data);&#xD;&#xA;            var dataValues = {&#xD;&#xA;                data: [],&#xD;&#xA;                tcvalues: []&#xD;&#xA;            }&#xD;&#xA;            dataValues.data = data;&#xD;&#xA;            //console.log('dataValues.data', dataValues.data);&#xD;&#xA;            rallyApi.getTestCase(dataValues.data.TestCaseId).then((values) => {&#xD;&#xA;                dataValues.tcvalues = values;&#xD;&#xA;                //console.log('dataValues = ',dataValues);&#xD;&#xA;                resolve(dataValues);&#xD;&#xA;            }, err => { reject('… failed finding testCase ' + dataValues.data.TestCaseId, err); });&#xD;&#xA;        }).then(function (dataValues) {&#xD;&#xA;            var module = this;&#xD;&#xA;            var addToSet = [];&#xD;&#xA;            const promise = new Promise((resolve, reject) => {&#xD;&#xA;                rallyApi.addTestCaseToSet(dataValues.tcvalues.ObjectID, dataValues.tcvalues.Ref, dataValues.data.TsObjectId, dataValues.data.TsRef).then((results) => {&#xD;&#xA;                    addToSet = results;&#xD;&#xA;                    resolve(addToSet);&#xD;&#xA;                }, (err) => { reject(err); });&#xD;&#xA;            });&#xD;&#xA;            results.push(promise.then(() => {&#xD;&#xA;                addResults.push(addToSet);&#xD;&#xA;            },&#xD;&#xA;                err => { console.log('… failed', err); throw err; }&#xD;&#xA;            ));&#xD;&#xA;            return Promise.all(results).then(() => addResults);&#xD;&#xA;        })&#xD;&#xA;    }