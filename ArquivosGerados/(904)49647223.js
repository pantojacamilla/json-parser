    function overflowingAncestor(el) {&#xD;&#xA;        var elems = [];&#xD;&#xA;        var rootScrollHeight = root.scrollHeight;&#xD;&#xA;        do {&#xD;&#xA;            var cached = cache[uniqueID(el)];&#xD;&#xA;            if (cached) {&#xD;&#xA;                return setCache(elems, cached);&#xD;&#xA;            }&#xD;&#xA;            elems.push(el);&#xD;&#xA;            if (rootScrollHeight === el.scrollHeight) {&#xD;&#xA;                if (!isFrame || root.clientHeight + 10 < rootScrollHeight) {&#xD;&#xA;                    return setCache(elems, document.body);&#xD;&#xA;                }&#xD;&#xA;            } else if (el.clientHeight + 10 < el.scrollHeight) {&#xD;&#xA;                overflow = getComputedStyle(el, "").getPropertyValue("overflow-y");&#xD;&#xA;                if (overflow === "scroll" || overflow === "auto") {&#xD;&#xA;                    return setCache(elems, el);&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;        } while (el = el.parentNode);  //<--- Error&#xD;&#xA;    }