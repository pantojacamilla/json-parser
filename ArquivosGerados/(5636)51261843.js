    var Base64 = {&#xD;&#xA;    	_keyStr : "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",&#xD;&#xA;    	encode : function(e) {&#xD;&#xA;    		var t = "";&#xD;&#xA;    		var n, r, i, s, o, u, a;&#xD;&#xA;    		var f = 0;&#xD;&#xA;    		e = Base64._utf8_encode(e);&#xD;&#xA;    		while (f < e.length) {&#xD;&#xA;    			n = e.charCodeAt(f++);&#xD;&#xA;    			r = e.charCodeAt(f++);&#xD;&#xA;    			i = e.charCodeAt(f++);&#xD;&#xA;    			s = n >> 2;&#xD;&#xA;    			o = (n & 3) << 4 | r >> 4;&#xD;&#xA;    			u = (r & 15) << 2 | i >> 6;&#xD;&#xA;    			a = i & 63;&#xD;&#xA;    			if (isNaN(r)) {&#xD;&#xA;    				u = a = 64&#xD;&#xA;    			} else if (isNaN(i)) {&#xD;&#xA;    				a = 64&#xD;&#xA;    			}&#xD;&#xA;    			t = t + this._keyStr.charAt(s) + this._keyStr.charAt(o)&#xD;&#xA;    					+ this._keyStr.charAt(u) + this._keyStr.charAt(a)&#xD;&#xA;    		}&#xD;&#xA;    		return t&#xD;&#xA;    	},&#xD;&#xA;    	decode : function(e) {&#xD;&#xA;    		var t = "";&#xD;&#xA;    		var n, r, i;&#xD;&#xA;    		var s, o, u, a;&#xD;&#xA;    		var f = 0;&#xD;&#xA;    		e = e.replace(/[^A-Za-z0-9+/=]/g, "");&#xD;&#xA;    		while (f < e.length) {&#xD;&#xA;    			s = this._keyStr.indexOf(e.charAt(f++));&#xD;&#xA;    			o = this._keyStr.indexOf(e.charAt(f++));&#xD;&#xA;    			u = this._keyStr.indexOf(e.charAt(f++));&#xD;&#xA;    			a = this._keyStr.indexOf(e.charAt(f++));&#xD;&#xA;    			n = s << 2 | o >> 4;&#xD;&#xA;    			r = (o & 15) << 4 | u >> 2;&#xD;&#xA;    			i = (u & 3) << 6 | a;&#xD;&#xA;    			t = t + String.fromCharCode(n);&#xD;&#xA;    			if (u != 64) {&#xD;&#xA;    				t = t + String.fromCharCode(r)&#xD;&#xA;    			}&#xD;&#xA;    			if (a != 64) {&#xD;&#xA;    				t = t + String.fromCharCode(i)&#xD;&#xA;    			}&#xD;&#xA;    		}&#xD;&#xA;    		t = Base64._utf8_decode(t);&#xD;&#xA;    		return t&#xD;&#xA;    	},&#xD;&#xA;    	_utf8_encode : function(e) {&#xD;&#xA;    		e = e.replace(/rn/g, "n");&#xD;&#xA;    		var t = "";&#xD;&#xA;    		for (var n = 0; n < e.length; n++) {&#xD;&#xA;    			var r = e.charCodeAt(n);&#xD;&#xA;    			if (r < 128) {&#xD;&#xA;    				t += String.fromCharCode(r)&#xD;&#xA;    			} else if (r > 127 && r < 2048) {&#xD;&#xA;    				t += String.fromCharCode(r >> 6 | 192);&#xD;&#xA;    				t += String.fromCharCode(r & 63 | 128)&#xD;&#xA;    			} else {&#xD;&#xA;    				t += String.fromCharCode(r >> 12 | 224);&#xD;&#xA;    				t += String.fromCharCode(r >> 6 & 63 | 128);&#xD;&#xA;    				t += String.fromCharCode(r & 63 | 128)&#xD;&#xA;    			}&#xD;&#xA;    		}&#xD;&#xA;    		return t&#xD;&#xA;    	},&#xD;&#xA;    	_utf8_decode : function(e) {&#xD;&#xA;    		var t = "";&#xD;&#xA;    		var n = 0;&#xD;&#xA;    		var r = c1 = c2 = 0;&#xD;&#xA;    		while (n < e.length) {&#xD;&#xA;    			r = e.charCodeAt(n);&#xD;&#xA;    			if (r < 128) {&#xD;&#xA;    				t += String.fromCharCode(r);&#xD;&#xA;    				n++&#xD;&#xA;    			} else if (r > 191 && r < 224) {&#xD;&#xA;    				c2 = e.charCodeAt(n + 1);&#xD;&#xA;    				t += String.fromCharCode((r & 31) << 6 | c2 & 63);&#xD;&#xA;    				n += 2&#xD;&#xA;    			} else {&#xD;&#xA;    				c2 = e.charCodeAt(n + 1);&#xD;&#xA;    				c3 = e.charCodeAt(n + 2);&#xD;&#xA;    				t += String.fromCharCode((r & 15) << 12 | (c2 & 63) << 6 | c3&#xD;&#xA;    						& 63);&#xD;&#xA;    				n += 3&#xD;&#xA;    			}&#xD;&#xA;    		}&#xD;&#xA;    		return t&#xD;&#xA;    	}&#xD;&#xA;    }&#xD;&#xA;    var str = "background:url(/drona-courses/player_assets/skin_0/DRONA_default_skinRightCorner.png) ;"&#xD;&#xA;    var encoded = Base64.encode(str);&#xD;&#xA;    //console.log(encoded);&#xD;&#xA;    var decoded = Base64.decode(encoded);&#xD;&#xA;    console.log(str,"......Input");&#xD;&#xA;    console.log(decoded,".....Output");&#xD;&#xA; 