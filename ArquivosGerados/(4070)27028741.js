    var download = function(file){&#xD;&#xA;        var deferred = q.defer();&#xD;&#xA;        var i = 1;&#xD;&#xA;        var ftpGet = function(){&#xD;&#xA;            var number = i++;&#xD;&#xA;            toString(number);&#xD;&#xA;            filename = file+number+'.csv';&#xD;&#xA;            ftp.get(filename, filename, function(hadErr){&#xD;&#xA;                if (hadErr){&#xD;&#xA;                    console.error('There was an error retrieving ' + filename);&#xD;&#xA;                }else{&#xD;&#xA;                    console.log(filename + ' downloaded');&#xD;&#xA;                    if(i <= 5){&#xD;&#xA;                        ftpGet();&#xD;&#xA;                    }else{&#xD;&#xA;                        deferred.resolve();&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;            });&#xD;&#xA;        }&#xD;&#xA;        ftpGet();  &#xD;&#xA;        return deferred.promise;&#xD;&#xA;    }&#xD;&#xA;    var updateSchedule = function(school, school_id){&#xD;&#xA;        var deferred = q.defer();&#xD;&#xA;        console.log('');&#xD;&#xA;        connectionpool.getConnection(function(err, connection){&#xD;&#xA;            if(err){&#xD;&#xA;                console.error('CONNECTION error: ', err);&#xD;&#xA;            }else{&#xD;&#xA;                connection.query('DELETE FROM schedule WHERE school_id = "'+school_id+'"', function(err, rows){&#xD;&#xA;                    if (err) console.error(err);&#xD;&#xA;                    var path = './'+school+'_export1.csv';&#xD;&#xA;                    var reader = csv.createCsvFileReader(path, {'separator': ',','quote': '"','excape': '"','comment': ''});&#xD;&#xA;                    reader.addListener('data',function(data){&#xD;&#xA;                        connection.query('INSERT INTO schedule SET section_id = "'+data[0]+'", student_id = "'+data[1]+'", course_number = "'+data[2]+'", period = "'+data[3]+'", teacher_id = "'+data[4]+'", school_id = "'+school_id+'"', function(err, rows){&#xD;&#xA;                            if (err) console.error(err);&#xD;&#xA;                            deferred.resolve();&#xD;&#xA;                        }); &#xD;&#xA;                    });&#xD;&#xA;                });&#xD;&#xA;                connection.release();&#xD;&#xA;                console.log(school+' schedule updating...');&#xD;&#xA;            }&#xD;&#xA;        });&#xD;&#xA;        return deferred.promise;&#xD;&#xA;    }