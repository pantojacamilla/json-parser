    var uuid = require('uuid')&#xD;&#xA;    var utils = require('util')&#xD;&#xA;    var esbuilder = require('bodybuilder')&#xD;&#xA;    var Elasticsearch = require('elasticsearch')&#xD;&#xA;    var client = Elasticsearch.Client({&#xD;&#xA;    	"host": "localhost:9200",&#xD;&#xA;    	"log": "info",&#xD;&#xA;    	"apiVersion": "5.0",&#xD;&#xA;    	"requestTimeout": 1000&#xD;&#xA;    })&#xD;&#xA;    function createIndex (index, structure) {&#xD;&#xA;    	return client.indices.create({ index: index, body: structure })&#xD;&#xA;    }&#xD;&#xA;    function deleteIndex (index) {&#xD;&#xA;    	return client.indices.delete({ index: index })&#xD;&#xA;    }&#xD;&#xA;    function now () {&#xD;&#xA;    	return parseInt(Date.now() / 1000)&#xD;&#xA;    }&#xD;&#xA;    function search (index_name, type, key, ttl) {&#xD;&#xA;    	var a = now() - ttl&#xD;&#xA;    	var query = esbuilder()&#xD;&#xA;    		.filter('term', 'cachekey', key)&#xD;&#xA;    		.filter('range', 'created', { gt: a })&#xD;&#xA;    		.build()&#xD;&#xA;    	var data = {&#xD;&#xA;    		index: index_name,&#xD;&#xA;    		type: type,&#xD;&#xA;    		body: query&#xD;&#xA;    	}&#xD;&#xA;    	console.log("\r\n#search():", utils.inspect(data, { depth: null }))&#xD;&#xA;    	return client.search(data)&#xD;&#xA;    }&#xD;&#xA;    function save (index_name, type, key, value) {&#xD;&#xA;    	var data = {&#xD;&#xA;    		index: index_name,&#xD;&#xA;    		type: type,&#xD;&#xA;    		body: {&#xD;&#xA;    			created: now(),&#xD;&#xA;    			cachekey: key,&#xD;&#xA;    			result: value&#xD;&#xA;    		}&#xD;&#xA;    	}&#xD;&#xA;    	console.log("\r\n#save():", utils.inspect(data, { depth: null }))&#xD;&#xA;    	&#xD;&#xA;    	return client.index(data)&#xD;&#xA;    }&#xD;&#xA;    console.log("start")&#xD;&#xA;    var index_name = 'whywhywhy'&#xD;&#xA;    var structure = {&#xD;&#xA;    	mappings: {&#xD;&#xA;    		darkside: {&#xD;&#xA;    			properties: {&#xD;&#xA;    				created: {&#xD;&#xA;    					type: 'date'&#xD;&#xA;    				},&#xD;&#xA;    				cachekey: {&#xD;&#xA;    					type: 'string'&#xD;&#xA;    				},&#xD;&#xA;    				result: {&#xD;&#xA;    					type: 'object',&#xD;&#xA;    					enabled: false&#xD;&#xA;    				}&#xD;&#xA;    			}&#xD;&#xA;    		}&#xD;&#xA;    	}&#xD;&#xA;    }&#xD;&#xA;    var type_name = 'darkside'&#xD;&#xA;    var ttl = 3600 // 5 minutes&#xD;&#xA;    var val = { name: 'John', occupation: 'plumber' }&#xD;&#xA;    var key = uuid.v4()&#xD;&#xA;    createIndex(index_name, structure).then(function (result) {&#xD;&#xA;    	console.log("\r\nIndex created: ", utils.inspect(result))&#xD;&#xA;    	return save(index_name, type_name, key, val).then(function (result) {&#xD;&#xA;    		console.log("\r\nData saved: ", utils.inspect(result))&#xD;&#xA;    		console.log("\r\nWaiting for 10 seconds")&#xD;&#xA;    		setTimeout(function () {&#xD;&#xA;    			return search(index_name, type_name, key, ttl).then(function (result) {&#xD;&#xA;    				console.log("\r\nGot this: ", utils.inspect(result))&#xD;&#xA;    				setTimeout(function () {&#xD;&#xA;    					return deleteIndex(index_name).then(function (result) {&#xD;&#xA;    						console.log("\r\nClean up, index deleted: ", utils.inspect(result))&#xD;&#xA;    					})&#xD;&#xA;    				}, 1500)&#xD;&#xA;    			})&#xD;&#xA;    		}, 10000)&#xD;&#xA;    	})&#xD;&#xA;    }).catch(function (err) {&#xD;&#xA;    	console.log("\r\nSome fucker failed: ", err)&#xD;&#xA;    })