    using System;&#xD;&#xA;    using System.Data;&#xD;&#xA;    using System.Data.SqlClient;&#xD;&#xA;    using System.Net;&#xD;&#xA;    using System.Web;&#xD;&#xA;    using System.Xml.Serialization;&#xD;&#xA;    &#xD;&#xA;    namespace WebApplication1&#xD;&#xA;    {&#xD;&#xA;        /// <summary>&#xD;&#xA;        /// Handler for SqlException : XML parsing: illegal xml character Example&#xD;&#xA;        /// </summary>&#xD;&#xA;        public class purpose : IHttpHandler&#xD;&#xA;        {&#xD;&#xA;            private readonly string ConnStr = "Data Source=.;Initial Catalog=Moovis;Persist Security Info=True;User ID=sa;Password=1234"; // please change it to an suitable Database&#xD;&#xA;    &#xD;&#xA;            public void ProcessRequest(HttpContext context)&#xD;&#xA;            {&#xD;&#xA;                context.Response.ContentType = "text/plain";&#xD;&#xA;                Purpose translationPurpose = new Purpose();&#xD;&#xA;                string guidLines = context.Request.Form["guidLines"];&#xD;&#xA;                translationPurpose.GuidLines = WebUtility.HtmlEncode(guidLines); // another try to avoid SQL's illegal xml Character with no success&#xD;&#xA;                Order o = new Order { Details = new Details() };&#xD;&#xA;                o.Details.Purpose = translationPurpose;&#xD;&#xA;                bool ok = Update(o);&#xD;&#xA;                if (ok)&#xD;&#xA;                    context.Response.Write("Good update");&#xD;&#xA;                else&#xD;&#xA;                    context.Response.Write("Bad update");&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            private bool Update(Order o)&#xD;&#xA;            {&#xD;&#xA;                SqlCommand cmd = new SqlCommand("UPDATE [ORDER] SET Details = @Details WHERE ID=@Id");&#xD;&#xA;                cmd.Parameters.Add("@Id", SqlDbType.Int).Value = 115383; // Example&#xD;&#xA;                cmd.Parameters.Add("@Details", SqlDbType.Xml).Value = Serialize(typeof(Details), o.Details);&#xD;&#xA;                cmd.Connection = new SqlConnection(ConnStr);&#xD;&#xA;                cmd.Connection.Open();&#xD;&#xA;                int r = cmd.ExecuteNonQuery(); // Occasionally ERROR <- <-&#xD;&#xA;                cmd.Connection.Close();&#xD;&#xA;                if (r > 0)&#xD;&#xA;                    return true;&#xD;&#xA;                else&#xD;&#xA;                    return false;&#xD;&#xA;            } &#xD;&#xA;    &#xD;&#xA;            public string Serialize(Type argType, object argObject)&#xD;&#xA;            {&#xD;&#xA;                XmlSerializer ser = new XmlSerializer(argType);&#xD;&#xA;                System.Text.StringBuilder sb = new System.Text.StringBuilder();&#xD;&#xA;                using (System.IO.StringWriter writer = new System.IO.StringWriter(sb))&#xD;&#xA;                    ser.Serialize(writer, argObject);&#xD;&#xA;                return sb.ToString();&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            public bool IsReusable&#xD;&#xA;            {&#xD;&#xA;                get&#xD;&#xA;                {&#xD;&#xA;                    return false;&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    }