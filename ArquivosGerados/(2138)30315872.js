    package id.wanda.smkkkristenimmanuelii;&#xD;&#xA;    import java.io.BufferedReader;&#xD;&#xA;    import java.io.IOException;&#xD;&#xA;    import java.io.InputStream;&#xD;&#xA;    import java.io.InputStreamReader;&#xD;&#xA;    import java.io.UnsupportedEncodingException;&#xD;&#xA;    import java.util.List;&#xD;&#xA;    import org.apache.http.HttpEntity;&#xD;&#xA;    import org.apache.http.HttpResponse;&#xD;&#xA;    import org.apache.http.NameValuePair;&#xD;&#xA;    import org.apache.http.client.ClientProtocolException;&#xD;&#xA;    import org.apache.http.client.entity.UrlEncodedFormEntity;&#xD;&#xA;    import org.apache.http.client.methods.HttpGet;&#xD;&#xA;    import org.apache.http.client.methods.HttpPost;&#xD;&#xA;    import org.apache.http.client.utils.URLEncodedUtils;&#xD;&#xA;    import org.apache.http.impl.client.DefaultHttpClient;&#xD;&#xA;    import org.json.JSONException;&#xD;&#xA;    import org.json.JSONObject;&#xD;&#xA;    import android.util.Log;&#xD;&#xA;    public class JSONParser {&#xD;&#xA;    	static InputStream is = null;&#xD;&#xA;        static JSONObject jObj = null;&#xD;&#xA;        static String json = "";&#xD;&#xA;     &#xD;&#xA;        // constructor&#xD;&#xA;        public JSONParser() {&#xD;&#xA;     &#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        &#xD;&#xA;        public JSONObject getJSONFromUrl(final String url) {&#xD;&#xA;            // Making HTTP request&#xD;&#xA;            try {&#xD;&#xA;                // Construct the client and the HTTP request.&#xD;&#xA;                DefaultHttpClient httpClient = new DefaultHttpClient();&#xD;&#xA;                HttpPost httpPost = new HttpPost(url);&#xD;&#xA;                // Execute the POST request and store the response locally.&#xD;&#xA;                HttpResponse httpResponse = httpClient.execute(httpPost);&#xD;&#xA;                // Extract data from the response.&#xD;&#xA;                HttpEntity httpEntity = httpResponse.getEntity();&#xD;&#xA;                // Open an inputStream with the data content.&#xD;&#xA;                is = httpEntity.getContent();&#xD;&#xA;            } catch (UnsupportedEncodingException e) {&#xD;&#xA;                e.printStackTrace();&#xD;&#xA;            } catch (ClientProtocolException e) {&#xD;&#xA;                e.printStackTrace();&#xD;&#xA;            } catch (IOException e) {&#xD;&#xA;                e.printStackTrace();&#xD;&#xA;            }&#xD;&#xA;            try {&#xD;&#xA;                // Create a BufferedReader to parse through the inputStream.&#xD;&#xA;                BufferedReader reader = new BufferedReader(new InputStreamReader(&#xD;&#xA;                        is, "iso-8859-1"), 8);&#xD;&#xA;                // Declare a string builder to help with the parsing.&#xD;&#xA;                StringBuilder sb = new StringBuilder();&#xD;&#xA;                // Declare a string to store the JSON object data in string form.&#xD;&#xA;                String line = null;&#xD;&#xA;                &#xD;&#xA;                // Build the string until null.&#xD;&#xA;                while ((line = reader.readLine()) != null) {&#xD;&#xA;                    sb.append(line + "\n");&#xD;&#xA;                }&#xD;&#xA;                &#xD;&#xA;                // Close the input stream.&#xD;&#xA;                is.close();&#xD;&#xA;                // Convert the string builder data to an actual string.&#xD;&#xA;                json = sb.toString();&#xD;&#xA;            } catch (Exception e) {&#xD;&#xA;                Log.e("Buffer Error", "Error converting result " + e.toString());&#xD;&#xA;            }&#xD;&#xA;            // Try to parse the string to a JSON object&#xD;&#xA;            try {&#xD;&#xA;                jObj = new JSONObject(json);&#xD;&#xA;            } catch (JSONException e) {&#xD;&#xA;                Log.e("JSON Parser", "Error parsing data " + e.toString());&#xD;&#xA;            }&#xD;&#xA;            // Return the JSON Object.&#xD;&#xA;            return jObj;&#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;     &#xD;&#xA;        // function get json from url&#xD;&#xA;        // by making HTTP POST or GET mehtod&#xD;&#xA;        public JSONObject makeHttpRequest(String url, String method,&#xD;&#xA;                List<NameValuePair> params) {&#xD;&#xA;     &#xD;&#xA;            // Making HTTP request&#xD;&#xA;            try {&#xD;&#xA;     &#xD;&#xA;                // check for request method&#xD;&#xA;                if(method == "POST"){&#xD;&#xA;                    // request method is POST&#xD;&#xA;                    // defaultHttpClient&#xD;&#xA;                    DefaultHttpClient httpClient = new DefaultHttpClient();&#xD;&#xA;                    HttpPost httpPost = new HttpPost(url);&#xD;&#xA;                    httpPost.setEntity(new UrlEncodedFormEntity(params));&#xD;&#xA;     &#xD;&#xA;                    HttpResponse httpResponse = httpClient.execute(httpPost);&#xD;&#xA;                    HttpEntity httpEntity = httpResponse.getEntity();&#xD;&#xA;                    is = httpEntity.getContent();&#xD;&#xA;     &#xD;&#xA;                }else if(method == "GET"){&#xD;&#xA;                    // request method is GET&#xD;&#xA;                    DefaultHttpClient httpClient = new DefaultHttpClient();&#xD;&#xA;                    String paramString = URLEncodedUtils.format(params, "utf-8");&#xD;&#xA;                    url += "?" + paramString;&#xD;&#xA;                    HttpGet httpGet = new HttpGet(url);&#xD;&#xA;     &#xD;&#xA;                    HttpResponse httpResponse = httpClient.execute(httpGet);&#xD;&#xA;                    HttpEntity httpEntity = httpResponse.getEntity();&#xD;&#xA;                    is = httpEntity.getContent();&#xD;&#xA;                }           &#xD;&#xA;     &#xD;&#xA;            } catch (UnsupportedEncodingException e) {&#xD;&#xA;                e.printStackTrace();&#xD;&#xA;            } catch (ClientProtocolException e) {&#xD;&#xA;                e.printStackTrace();&#xD;&#xA;            } catch (IOException e) {&#xD;&#xA;                e.printStackTrace();&#xD;&#xA;            }&#xD;&#xA;     &#xD;&#xA;            try {&#xD;&#xA;                BufferedReader reader = new BufferedReader(new InputStreamReader(&#xD;&#xA;                        is, "iso-8859-1"), 8);&#xD;&#xA;                StringBuilder sb = new StringBuilder();&#xD;&#xA;                String line = null;&#xD;&#xA;                while ((line = reader.readLine()) != null) {&#xD;&#xA;                    sb.append(line + "\n");&#xD;&#xA;                }&#xD;&#xA;                is.close();&#xD;&#xA;                json = sb.toString();&#xD;&#xA;            } catch (Exception e) {&#xD;&#xA;                Log.e("Buffer Error", "Error converting result " + e.toString());&#xD;&#xA;            }&#xD;&#xA;     &#xD;&#xA;            // try parse the string to a JSON object&#xD;&#xA;            try {&#xD;&#xA;                jObj = new JSONObject(json);&#xD;&#xA;            } catch (JSONException e) {&#xD;&#xA;                Log.e("JSON Parser", "Error parsing data " + e.toString());&#xD;&#xA;            }&#xD;&#xA;     &#xD;&#xA;            // return JSON String&#xD;&#xA;            return jObj;&#xD;&#xA;     &#xD;&#xA;        }&#xD;&#xA;    }