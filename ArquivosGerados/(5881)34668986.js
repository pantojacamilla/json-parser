    $(document).ready(function() {&#xD;&#xA;     $.ajaxSetup ({&#xD;&#xA;         cache: false&#xD;&#xA;     });&#xD;&#xA;          // Check on keydown&#xD;&#xA;         $('.inputs').keyup(function (e) {&#xD;&#xA;        		if (e.keyCode == 13) {&#xD;&#xA;               var value = $(this).val();&#xD;&#xA;               var ajax_load = "<p>LOADING<span class=\"blink\">_</span></p>";&#xD;&#xA;               &#xD;&#xA;               var loadGlossary = "https://unilogue.github.io/commands/glossary.asp";&#xD;&#xA;               var errorLine = $("<p><span class=\"cmd\">&#62;&nbsp;UNKNOWN COMMAND</span></p><br>");&#xD;&#xA;               var newLine = $('.inputs').clone(true).val('');&#xD;&#xA;               &#xD;&#xA;               var glossary = $("<div id=\"div3\"></div>");&#xD;&#xA;              // Tiny jQuery Plugin&#xD;&#xA;              // by Chris Goodchild&#xD;&#xA;              $.fn.exists = function(callback) {&#xD;&#xA;                var args = [].slice.call(arguments, 1);&#xD;&#xA;                if (this.length) {&#xD;&#xA;                  callback.call(this, args);&#xD;&#xA;                }&#xD;&#xA;                return this;&#xD;&#xA;              };&#xD;&#xA;              // Usage&#xD;&#xA;              &#xD;&#xA;              $(glossary).exists(function() {&#xD;&#xA;                this.append('<p><span class=\"cmd\">&#62;&nbsp;[g]lossary is already open!</span></p><br>');&#xD;&#xA;              });&#xD;&#xA;                if (value == 'g') { // If input value is div3&#xD;&#xA;                  $('.container').append(glossary);&#xD;&#xA;                  $("#div3").html(ajax_load).load(loadGlossary);&#xD;&#xA;                  $('.container').append("<p>&#62;&nbsp;</p>").append(newLine);&#xD;&#xA;                  $(this).prop('disabled', true);&#xD;&#xA;                  $(this).removeClass('inputs');&#xD;&#xA;                  $('.inputs').replaceWith(newLine);&#xD;&#xA;                  $('.inputs:first').focus();&#xD;&#xA;                } else if (value != '') { // If input value is wrong&#xD;&#xA;                  $('.container').append(errorLine);&#xD;&#xA;                  $('.container').append("<p>&#62;&nbsp;</p>").append(newLine);&#xD;&#xA;                  $(this).prop('disabled', true);&#xD;&#xA;                  $(this).removeClass('inputs');&#xD;&#xA;                  $('.inputs').replaceWith(newLine);&#xD;&#xA;                  $('.inputs:first').focus();&#xD;&#xA;                }&#xD;&#xA;              }&#xD;&#xA;            });&#xD;&#xA;             });&#xD;&#xA;        });