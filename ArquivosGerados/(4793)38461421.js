    // karma.config.js:&#xD;&#xA;    module.exports = function (config) {&#xD;&#xA;       config.set({&#xD;&#xA;          webpack: configureWebpack()&#xD;&#xA;       });&#xD;&#xA;       function configureWebpack() {&#xD;&#xA;          var config = require('./webpack.config.js')&#xD;&#xA;          config.entry = undefined; // karma will pass  argument for entry&#xD;&#xA;          return config;&#xD;&#xA;       }&#xD;&#xA;    };&#xD;&#xA;    // webpack.config.js:&#xD;&#xA;    var _ = require('lodash');&#xD;&#xA;    var path = require('path');&#xD;&#xA;    var sprintf = require('sprintf-js').sprintf;&#xD;&#xA;    var webpack = require('webpack');&#xD;&#xA;    var HtmlWebpackPlugin = require('html-webpack-plugin');&#xD;&#xA;    module.exports = {&#xD;&#xA;    	entry: {&#xD;&#xA;    		app: ['./app/index.js'],&#xD;&#xA;    		vendor: ['./app/vendor.js']&#xD;&#xA;    	},&#xD;&#xA;    	output: {&#xD;&#xA;    		path: path.join(__dirname, 'dist'),&#xD;&#xA;    		filename: 'js/[name].js'&#xD;&#xA;    	},&#xD;&#xA;    	plugins: [&#xD;&#xA;    		new webpack.ContextReplacementPlugin(/moment[\/\\]locale$/, /nl/),&#xD;&#xA;    		new webpack.ProvidePlugin({&#xD;&#xA;    			jQuery: 'jquery',&#xD;&#xA;    			$: 'jquery',&#xD;&#xA;    			'window.jQuery': 'jquery'&#xD;&#xA;    		}),&#xD;&#xA;    		new HtmlWebpackPlugin({&#xD;&#xA;    			template: './app/index.html',&#xD;&#xA;    			inject: 'body',&#xD;&#xA;    			minify: false,&#xD;&#xA;    			favicon: './app/favicon.ico'&#xD;&#xA;    		}),&#xD;&#xA;    		new webpack.optimize.CommonsChunkPlugin('vendor', 'js/vendor.js'),&#xD;&#xA;    		new webpack.SourceMapDevToolPlugin({&#xD;&#xA;    			filename: '[file].map',&#xD;&#xA;    			exclude: /vendor/&#xD;&#xA;    		})&#xD;&#xA;    	],&#xD;&#xA;    	resolve: {&#xD;&#xA;    		extensions: ['', '.js'],&#xD;&#xA;    		alias: {&#xD;&#xA;    			app: path.join(__dirname, 'app'),&#xD;&#xA;    			jquery: 'jquery/dist/jquery.min.js'&#xD;&#xA;    		}&#xD;&#xA;    	},&#xD;&#xA;    	module: {&#xD;&#xA;    		preLoaders: [&#xD;&#xA;    			{&#xD;&#xA;    				test: /\.js$/,&#xD;&#xA;    				loader: 'eslint',&#xD;&#xA;    				exclude: /node_modules/&#xD;&#xA;    			}&#xD;&#xA;    		],&#xD;&#xA;    		loaders: [&#xD;&#xA;    			{&#xD;&#xA;    				test: /\.js$/,&#xD;&#xA;    				loader: 'ng-annotate-loader!babel-loader',&#xD;&#xA;    				include: path.join(__dirname, 'app'),&#xD;&#xA;    				exclude: path.join(__dirname, 'node_modules')&#xD;&#xA;    			},&#xD;&#xA;    			{&#xD;&#xA;    				test: /\.json$/,&#xD;&#xA;    				loader: 'json-loader'&#xD;&#xA;    			},&#xD;&#xA;    			{&#xD;&#xA;    				test: /\.html$/,&#xD;&#xA;    				loader: sprintf('ngtemplate-loader?relativeTo=%s/!html-loader', (path.resolve(__dirname, './')))&#xD;&#xA;    			},&#xD;&#xA;    			{&#xD;&#xA;    				test: /\.styl$/,&#xD;&#xA;    				loader: 'style-loader!css-loader!stylus-loader'&#xD;&#xA;    			},&#xD;&#xA;    			{&#xD;&#xA;    				test: /\.css$/,&#xD;&#xA;    				loader: 'style-loader?insertAt=top!css-loader'&#xD;&#xA;    			},&#xD;&#xA;    			{&#xD;&#xA;    				test: /\.woff(2)?(\?v=[0-9]\.[0-9]\.[0-9])?$/,&#xD;&#xA;    				loader: 'url-loader?name=fonts/[name].[ext]&limit=10000&mimetype=application/font-woff'&#xD;&#xA;    			},&#xD;&#xA;    			{&#xD;&#xA;    				test: /\.(ttf|eot|svg)(\?v=[0-9]\.[0-9]\.[0-9])?$/,&#xD;&#xA;    				loader: 'file-loader?name=fonts/[name].[ext]'&#xD;&#xA;    			},&#xD;&#xA;    			{&#xD;&#xA;    				test: /\.(jpe?g|png|gif)$/i,&#xD;&#xA;    				loader: 'file-loader?name=images/[name].[ext]'&#xD;&#xA;    			}&#xD;&#xA;    		]&#xD;&#xA;    	},&#xD;&#xA;    	resolveLoader: {&#xD;&#xA;    		root: path.join(__dirname, 'node_modules')&#xD;&#xA;    	},&#xD;&#xA;    	eslint: {&#xD;&#xA;    		configFile: '.eslintrc',&#xD;&#xA;    		failOnWarning: false,&#xD;&#xA;    		failOnError: true&#xD;&#xA;    	},&#xD;&#xA;    	devServer: {&#xD;&#xA;    		proxy: {&#xD;&#xA;    			'/api*': {&#xD;&#xA;    				target: {&#xD;&#xA;    					"host": "localhost",&#xD;&#xA;    					"protocol": 'http:',&#xD;&#xA;    					"port": 9100&#xD;&#xA;    				},&#xD;&#xA;    				secure: false&#xD;&#xA;    			}&#xD;&#xA;    		}&#xD;&#xA;    	}&#xD;&#xA;    };