        import { AngularFirestore } from 'angularfire2/firestore';&#xD;&#xA;        import { Observable, of } from 'rxjs';&#xD;&#xA;        import { map,  } from 'rxjs/operators';&#xD;&#xA;        import { Injectable } from '@angular/core';&#xD;&#xA;        import { Project } from '../../models/project';&#xD;&#xA;        import { HttpClient } from '@angular/common/http';&#xD;&#xA;        import { Post } from '../post';&#xD;&#xA;        &#xD;&#xA;        &#xD;&#xA;        &#xD;&#xA;        &#xD;&#xA;        @Injectable()&#xD;&#xA;        &#xD;&#xA;        export class ProjectService {&#xD;&#xA;        &#xD;&#xA;            ProjectListRef: Observable<any[]>;&#xD;&#xA;            featuredProjectList: Observable<any[]>;&#xD;&#xA;            posts: Array<Post>;&#xD;&#xA;       &#xD;&#xA;        &#xD;&#xA;            constructor( private database: AngularFirestore, private http: HttpClient) {&#xD;&#xA;                // Link For All Projects Page&#xD;&#xA;                const allProjectsListLink = this.database.collection<Project>('projects', ref => ref.orderBy('company_name'));&#xD;&#xA;        &#xD;&#xA;        &#xD;&#xA;        &#xD;&#xA;                // Link For Featured Project Page&#xD;&#xA;                const featuredProjectsListLink = this.database.collection<Project>('projects', ref => ref.limit(5));&#xD;&#xA;        &#xD;&#xA;        &#xD;&#xA;        &#xD;&#xA;    this.ProjectListRef = allProjectsListLink.snapshotChanges()&#xD;&#xA;                // using map pipe&#xD;&#xA;                .pipe(map( actions => {&#xD;&#xA;                    return actions.map(a => {&#xD;&#xA;                        // Get Document Data&#xD;&#xA;                        const data = a.payload.doc.data() as Project;&#xD;&#xA;                        // Get Document Id&#xD;&#xA;                        const id = a.payload.doc.id;&#xD;&#xA;                        return {id, ...data};&#xD;&#xA;                    });&#xD;&#xA;                }));&#xD;&#xA;        &#xD;&#xA;          this.featuredProjectList = featuredProjectsListLink.snapshotChanges()&#xD;&#xA;          // using map pipe&#xD;&#xA;          .pipe(map( actions => {&#xD;&#xA;          return actions.map(a => {&#xD;&#xA;          // Get Document Data&#xD;&#xA;          const data = a.payload.doc.data() as Project;&#xD;&#xA;          // Get Document Id&#xD;&#xA;          const id = a.payload.doc.id;&#xD;&#xA;          return {id, ...data};&#xD;&#xA;          });&#xD;&#xA;          }));&#xD;&#xA;          }&#xD;&#xA;            getAllProjects() {&#xD;&#xA;                return this.ProjectListRef;&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            getFeaturedProjects() {&#xD;&#xA;                return this.featuredProjectList;&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            getProject(id: string) {&#xD;&#xA;                console.log(id);&#xD;&#xA;                return this.database.collection('projects').doc(id)&#xD;&#xA;                .ref.get().then( doc => doc.data() );&#xD;&#xA;              }&#xD;&#xA;        &#xD;&#xA;        }