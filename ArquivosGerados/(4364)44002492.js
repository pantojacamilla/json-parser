    function initialize() {&#xD;&#xA;      var defer = $q.defer();&#xD;&#xA;      var deferTimer = $q.defer();&#xD;&#xA;    &#xD;&#xA;      var cancelTimeout = $timeout(function() {&#xD;&#xA;        if (defer !== null) {&#xD;&#xA;          ctrlr.setProcessingParameters('XXX');&#xD;&#xA;          defer = ctrlr.openProgressBar();&#xD;&#xA;          deferTimer.resolve();&#xD;&#xA;        }&#xD;&#xA;      }, 1000);&#xD;&#xA;    &#xD;&#xA;      deferTimer.promise.then(function() {&#xD;&#xA;        var cancelTimeout2 = $timeout(function() {&#xD;&#xA;          if (defer !== null) {&#xD;&#xA;            defer.resolve();&#xD;&#xA;            ctrlr.setProcessingParameters('Please Wait...');&#xD;&#xA;            defer = ctrlr.openProgressBar();&#xD;&#xA;          }&#xD;&#xA;        }, 4000);&#xD;&#xA;      });&#xD;&#xA;    &#xD;&#xA;      //Process Backend service n resolbve defer....&#xD;&#xA;    &#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    // cancel the $timeout service&#xD;&#xA;    $rootScope.$on('$destroy', function() {&#xD;&#xA;      logger.log("cancelTimeout..timer..");&#xD;&#xA;      if (cancelTimeout) {&#xD;&#xA;        $timeout.cancel(cancelTimeoutProcess);&#xD;&#xA;        cancelTimeout = null;&#xD;&#xA;      }&#xD;&#xA;    });&#xD;&#xA;    &#xD;&#xA;    // cancel the $timeout service&#xD;&#xA;    $rootScope.$on('$destroy', function() {&#xD;&#xA;      logger.log("cancelTimeout2..timer..")&#xD;&#xA;      if (cancelTimeout2) {&#xD;&#xA;        $timeout.cancel(cancelTimeout2);&#xD;&#xA;        cancelTimeout2 = null;&#xD;&#xA;      }&#xD;&#xA;    });