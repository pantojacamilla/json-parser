    handleAddIngredient =(ingTitle, receiptId)=>{&#xD;&#xA;        const ingred = this.addIngredient(ingTitle)&#xD;&#xA;        const receipts = this.state.receipts.map(receipt=>{&#xD;&#xA;            if(receipt.id === receiptId){&#xD;&#xA;                return Object.assign({},receipt,{&#xD;&#xA;                    ingredients: [...receipt.ingredients,ingred]&#xD;&#xA;                })&#xD;&#xA;            }else{&#xD;&#xA;                return receipt&#xD;&#xA;            }&#xD;&#xA;        })&#xD;&#xA;        this.setState({receipts})&#xD;&#xA;    }&#xD;&#xA;    addIngredient = (ingTitle)=>{&#xD;&#xA;        return {&#xD;&#xA;            id: this.generateId(),&#xD;&#xA;            title: ingTitle,&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;    generateId = ()=>{&#xD;&#xA;        return '_' + Math.random().toString(36).substr(2, 9);&#xD;&#xA;    }&#xD;&#xA;    render(){&#xD;&#xA;        return(&#xD;&#xA;            <div>&#xD;&#xA;                <Header />&#xD;&#xA;                <ReceiptList &#xD;&#xA;                    receipts={this.state.receipts}&#xD;&#xA;                    onFormUpdate={this.handleUpdateForm}&#xD;&#xA;                    onDeleteReceipt={this.handleDeleteReceipt}&#xD;&#xA;                    onAddIngredient={this.handleAddIngredient}&#xD;&#xA;                />&#xD;&#xA;                <ToggleReceipt &#xD;&#xA;                    onFormSubmit={this.handleSubmitForm}&#xD;&#xA;                    onAddIngredient={this.handleAddIngredient}&#xD;&#xA;                />&#xD;&#xA;            </div>&#xD;&#xA;        )&#xD;&#xA;    }