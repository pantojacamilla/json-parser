    interface viewModel {&#xD;&#xA;      max: number;&#xD;&#xA;      min: number;&#xD;&#xA;      rand: number;&#xD;&#xA;    }&#xD;&#xA;    class Dice {&#xD;&#xA;      private max: number;&#xD;&#xA;      private min: number;&#xD;&#xA;      constructor(max: number) {&#xD;&#xA;        this.max = max;&#xD;&#xA;        this.min = 1;&#xD;&#xA;      }&#xD;&#xA;      get _max(): number {&#xD;&#xA;        return this.max;&#xD;&#xA;      }&#xD;&#xA;      get _min(): number {&#xD;&#xA;        return this.min;&#xD;&#xA;      }&#xD;&#xA;      set _max(max: number) {&#xD;&#xA;        this.max = max;&#xD;&#xA;      }&#xD;&#xA;      set _min(min: number) {&#xD;&#xA;        this.min = min;&#xD;&#xA;      }&#xD;&#xA;      roll() {&#xD;&#xA;        return Math.floor(Math.random() * this.max) + this.min;&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;    class Display {&#xD;&#xA;      private max: string;&#xD;&#xA;      private min: string;&#xD;&#xA;      private rand: string;&#xD;&#xA;      constructor(vm: viewModel) {&#xD;&#xA;        this.max = vm.max.toString();&#xD;&#xA;        this.min = vm.min.toString();&#xD;&#xA;        this.rand = vm.rand.toString();&#xD;&#xA;      }&#xD;&#xA;      update() {&#xD;&#xA;        document.getElementById("random").innerText = this.rand;&#xD;&#xA;        if (this.min !== undefined) {&#xD;&#xA;          document.getElementById("min").innerText = this.min;&#xD;&#xA;        }&#xD;&#xA;        if (this.max !== undefined) {&#xD;&#xA;          document.getElementById("max").innerText = this.max;&#xD;&#xA;        }&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;    window.onload = () => {&#xD;&#xA;      let ukDice = new Dice(99);&#xD;&#xA;      let viewModel: viewModel;&#xD;&#xA;      viewModel.max = ukDice._max;&#xD;&#xA;      viewModel.min = ukDice._min;&#xD;&#xA;      viewModel.rand = ukDice.roll();&#xD;&#xA;      let output = new Display(viewModel);&#xD;&#xA;      output.update();&#xD;&#xA;    }