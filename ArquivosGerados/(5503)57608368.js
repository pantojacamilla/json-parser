    //start job schedule &#xD;&#xA;    function nth(d)  { if (d > 3 && d < 21) return 'th';  switch (d % 10) { case 1:  return "st"; case 2:  return "nd"; case 3:  return "rd"; default: return "th"; } }&#xD;&#xA;    function dateToYMD(date) { var strArray=['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']; var d = date.getDate(); var m = strArray[date.getMonth()]; var y = date.getFullYear(); return '' + (d <= 9 ? '0' + d : d) + '-' + m + '-' + y; }&#xD;&#xA;    Date.prototype.addDays = function(days) { var date = new Date(this.valueOf()); date.setDate(date.getDate() + days); return date; }&#xD;&#xA;    function pad(str) { return (" "+str).slice(-2) }&#xD;&#xA;    //var cnt = 0;&#xD;&#xA;    var dataSet = [];&#xD;&#xA;    function printNextPeriod(startDate, endDate, periodInDays,cnt) {&#xD;&#xA;      var numWorkDays = 0;&#xD;&#xA;      var currentDate = new Date(startDate);&#xD;&#xA;      var premises = "Innovation Building in DMC";&#xD;&#xA;      var Time = "Day";&#xD;&#xA;      var typeoftreatment = "Residual-spray / Dust / bait & Traps"&#xD;&#xA;      while (numWorkDays < periodInDays && currentDate <= endDate) {&#xD;&#xA;        currentDate = currentDate.addDays(1);&#xD;&#xA;        // Skips friday&#xD;&#xA;        if (currentDate.getDay() !== 5) {&#xD;&#xA;          numWorkDays++;&#xD;&#xA;        }&#xD;&#xA;        if (numWorkDays == periodInDays) {&#xD;&#xA;          numWorkDays = 0;&#xD;&#xA;          cnt++;&#xD;&#xA;          let date = dateToYMD(currentDate);&#xD;&#xA;          let pos = holidays.indexOf(date);&#xD;&#xA;          if (pos != -1) {&#xD;&#xA;            console.log("replace",date,"with",instead[pos])&#xD;&#xA;            date = instead[pos];&#xD;&#xA;          }  &#xD;&#xA;          let treatment = pad(cnt) + nth(cnt) + (cnt == 1 ? " Basic" : " Control") + " Treatment"&#xD;&#xA;          dataSet.push([premises, typeoftreatment, treatment, date, Time])&#xD;&#xA;        }&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;    	var holidays = [];//assign holidays days here&#xD;&#xA;    	var instead = [];&#xD;&#xA;    	holidays.forEach((hol,i) => {&#xD;&#xA;    	  let d = new Date(hol);&#xD;&#xA;    	  let date = d.getDate() + 1&#xD;&#xA;    	  d.setDate(date); // next day (could be Weekend);&#xD;&#xA;    	  while (d.getDay() === 5) {&#xD;&#xA;    		date++;&#xD;&#xA;    		d.setDate(date); // is any day not friday ok?&#xD;&#xA;    	  }&#xD;&#xA;    	  instead.push(dateToYMD(d))&#xD;&#xA;    	  holidays[i] = dateToYMD(new Date(hol))&#xD;&#xA;    	})&#xD;&#xA;    $('.jobshepest').on('shown.bs.modal', function (e) {				&#xD;&#xA;    				$('.examplejobshecdule').DataTable({&#xD;&#xA;                destroy: true,&#xD;&#xA;    			data: dataSet,&#xD;&#xA;    			columns: [&#xD;&#xA;    			{ title: "Premises" },&#xD;&#xA;    			{ title: "Type of treatment" },&#xD;&#xA;    			{ title: "Frequency" },&#xD;&#xA;    			{ title: "Date" },&#xD;&#xA;    			{title: "Time"}],&#xD;&#xA;    			order: [[2, "asc"]],&#xD;&#xA;    			columnDefs: [&#xD;&#xA;                { width: "23%", targets: 3 }&#xD;&#xA;            ]&#xD;&#xA;    		  });&#xD;&#xA;    			&#xD;&#xA;    		});