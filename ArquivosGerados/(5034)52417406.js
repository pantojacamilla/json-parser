     processMessages(container: FormGroup): { [key: string]: string } {&#xD;&#xA;            let messages = {};&#xD;&#xA;            for (let controlKey in container.controls) {&#xD;&#xA;                if (container.controls.hasOwnProperty(controlKey)) {&#xD;&#xA;                    let c = container.controls[controlKey];&#xD;&#xA;                    // If it is a FormGroup, process its child controls.&#xD;&#xA;                    if (c instanceof FormGroup) {&#xD;&#xA;                        let childMessages = this.processMessages(c);&#xD;&#xA;                        Object.assign(messages, childMessages);&#xD;&#xA;                    } else {&#xD;&#xA;                        // Only validate if there are validation messages for the control&#xD;&#xA;                        if (this.validationMessages[controlKey]) {&#xD;&#xA;                            messages[controlKey] = '';&#xD;&#xA;                            if ((c.dirty || c.touched) &&&#xD;&#xA;                                c.errors) {&#xD;&#xA;                                for (let messageKey in c.errors) {&#xD;&#xA;                                    if (c.errors.hasOwnProperty(messageKey) &&&#xD;&#xA;                                        this.validationMessages[controlKey][messageKey]) {&#xD;&#xA;                                        messages[controlKey] += this.validationMessages[controlKey][messageKey];&#xD;&#xA;                                    }&#xD;&#xA;                                }&#xD;&#xA;                            }&#xD;&#xA;                        }&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;            return messages;&#xD;&#xA;        }&#xD;&#xA;   