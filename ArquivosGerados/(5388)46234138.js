    var vector = new ol.layer.Vector({&#xD;&#xA;        source: new ol.source.Vector({&#xD;&#xA;            style: new ol.style.Style({&#xD;&#xA;                fill: new ol.style.Fill({&#xD;&#xA;                    color: 'rgba(191, 109, 198, 0.2)'&#xD;&#xA;                }),&#xD;&#xA;                stroke: new ol.style.Stroke({&#xD;&#xA;                    color: '#212dd1',&#xD;&#xA;                    width: 2&#xD;&#xA;                }),&#xD;&#xA;                image: new ol.style.Circle({&#xD;&#xA;                    radius: 7,&#xD;&#xA;                    fill: new ol.style.Fill({&#xD;&#xA;                        color: '#ffcc33'&#xD;&#xA;                    })&#xD;&#xA;                })&#xD;&#xA;            })&#xD;&#xA;        })&#xD;&#xA;    });&#xD;&#xA;    var map = new ol.Map({&#xD;&#xA;        layers: [&#xD;&#xA;            new ol.layer.Tile({&#xD;&#xA;                source: new ol.source.OSM()&#xD;&#xA;            }),&#xD;&#xA;            vector&#xD;&#xA;        ],&#xD;&#xA;        target: 'map',&#xD;&#xA;        view: new ol.View({&#xD;&#xA;            center: [-11000000, 4600000],&#xD;&#xA;            zoom: 4&#xD;&#xA;        })&#xD;&#xA;    });&#xD;&#xA;    map.on('pointermove', function(e) {&#xD;&#xA;        if (e.dragging) return;&#xD;&#xA;        var&#xD;&#xA;            pixel = map.getEventPixel(e.originalEvent),&#xD;&#xA;            hit = map.hasFeatureAtPixel(pixel);&#xD;&#xA;        map.getTargetElement().style.cursor = hit ? 'pointer' : '';&#xD;&#xA;    });&#xD;&#xA;    var button = $('#pan').button('toggle');&#xD;&#xA;    var interaction;&#xD;&#xA;    var features;&#xD;&#xA;    $('div.btn-group button').on('click', function(event) {&#xD;&#xA;        var id = event.target.id;&#xD;&#xA;        var features;&#xD;&#xA;        button.button('toggle');&#xD;&#xA;        button = $('#' + id).button('toggle');&#xD;&#xA;        map.removeInteraction(interaction);&#xD;&#xA;        switch (id) {&#xD;&#xA;            case "select":&#xD;&#xA;                interaction = new ol.interaction.Select();&#xD;&#xA;                map.addInteraction(interaction);&#xD;&#xA;                features = interaction.getFeatures();&#xD;&#xA;                var dragBoxInteraction = new ol.interaction.DragBox({&#xD;&#xA;                    condition: ol.events.condition.platformModifierKeyOnly,&#xD;&#xA;                    style: new ol.style.Style({&#xD;&#xA;                        stroke: new ol.style.Stroke({&#xD;&#xA;                            color: [12, 25, 25, 4]&#xD;&#xA;                        })&#xD;&#xA;                    })&#xD;&#xA;                });&#xD;&#xA;                dragBoxInteraction.on('boxend', function(event) {&#xD;&#xA;                    var selectedFeatures = interaction.getFeatures();&#xD;&#xA;                    selectedFeatures.clear();&#xD;&#xA;                    var extent = dragBoxInteraction.getGeometry().getExtent();&#xD;&#xA;                    vector.getSource().forEachFeatureIntersectingExtent(extent, function(feature) {&#xD;&#xA;                        selectedFeatures.push(feature);&#xD;&#xA;                    });&#xD;&#xA;                });&#xD;&#xA;                map.addInteraction(dragBoxInteraction);&#xD;&#xA;                break;&#xD;&#xA;            case "point":&#xD;&#xA;                interaction = new ol.interaction.Draw({&#xD;&#xA;                    type: 'Point',&#xD;&#xA;                    source: vector.getSource()&#xD;&#xA;                });&#xD;&#xA;                map.addInteraction(interaction);&#xD;&#xA;                break;&#xD;&#xA;            case "line":&#xD;&#xA;                interaction = new ol.interaction.Draw({&#xD;&#xA;                    type: 'LineString',&#xD;&#xA;                    source: vector.getSource()&#xD;&#xA;                });&#xD;&#xA;                map.addInteraction(interaction);&#xD;&#xA;                break;&#xD;&#xA;            case "polygon":&#xD;&#xA;                interaction = new ol.interaction.Draw({&#xD;&#xA;                    type: 'Polygon',&#xD;&#xA;                    source: vector.getSource()&#xD;&#xA;                });&#xD;&#xA;                map.addInteraction(interaction);&#xD;&#xA;                break;&#xD;&#xA;            case "modify":&#xD;&#xA;                interaction = new ol.interaction.Modify({&#xD;&#xA;                    features: new ol.Collection(vector.getSource().getFeatures())&#xD;&#xA;                });&#xD;&#xA;                map.addInteraction(interaction);&#xD;&#xA;                break;&#xD;&#xA;            case "delete":&#xD;&#xA;                selectedFeatures .getSource().removeFeature(features);  &#xD;&#xA;                break;&#xD;&#xA;            default:&#xD;&#xA;                break;&#xD;&#xA;        }&#xD;&#xA;        var snap = new ol.interaction.Snap({&#xD;&#xA;            source: vector.getSource()&#xD;&#xA;        });&#xD;&#xA;        map.addInteraction(snap);&#xD;&#xA;    });