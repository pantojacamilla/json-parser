    const tools = {&#xD;&#xA;    	distance: (p1, p2) => Math.sqrt((p1.x - p2.x) * (p1.x - p2.x) + (p1.y - p2.y) * (p1.y - p2.y)),&#xD;&#xA;    	rftv: (p1, p2) => Math.atan2(p2.y - p1.y, p2.x - p1.x)&#xD;&#xA;    };&#xD;&#xA;    this.fuel = 200;&#xD;&#xA;    this.x = 100;&#xD;&#xA;    this.y = 50;&#xD;&#xA;    this.rad = 0; // radian angle between current and destination&#xD;&#xA;    this.speed = 100; // 100 pixels per second&#xD;&#xA;    this.consumption = 10; // 10 liters of fuel per 100 pixels&#xD;&#xA;    this.destination = {&#xD;&#xA;    	x: 220,&#xD;&#xA;    	y: 140&#xD;&#xA;    };&#xD;&#xA;    /*&#xD;&#xA;    Based on above&#xD;&#xA;    distance : 150&#xD;&#xA;    time : ( distance / speed ) => 150 / 100 => 1.5s&#xD;&#xA;    fuel : ( distance / consumption ) => 150 / 10 => 15 liters&#xD;&#xA;    So to summary, between two points we have 150 pixels of distance,&#xD;&#xA;    this trip should take 1.5s and burn 15 liters of fuel&#xD;&#xA;    */&#xD;&#xA;    this.now = undefined;&#xD;&#xA;    this.delta = undefined;&#xD;&#xA;    this.then = Date.now();&#xD;&#xA;    this.setDelta = function() {&#xD;&#xA;    	this.now = Date.now();&#xD;&#xA;    	this.delta = (this.now - this.then) / 1000;&#xD;&#xA;    	this.then = this.now;&#xD;&#xA;    };&#xD;&#xA;    this.update = function() {&#xD;&#xA;    	this.rad = tools.rftv(&#xD;&#xA;    		{ x: this.x, y: this.y },&#xD;&#xA;    		{ x: this.destination.x, y: this.destination.y }&#xD;&#xA;    	);&#xD;&#xA;      &#xD;&#xA;      let step = this.speed * this.delta;&#xD;&#xA;    	this.x += Math.cos(this.rad) * step;&#xD;&#xA;    	this.y += Math.sin(this.rad) * step;&#xD;&#xA;    	this.fuel -= step / this.consumption;&#xD;&#xA;    };&#xD;&#xA;    this.move = function() {&#xD;&#xA;    	this.distance = tools.distance(&#xD;&#xA;    		{ x: this.x, y: this.y },&#xD;&#xA;    		{ x: this.destination.x, y: this.destination.y }&#xD;&#xA;    	);&#xD;&#xA;    	&#xD;&#xA;    	if ( Math.floor( this.distance ) === 0 ) {&#xD;&#xA;    		clearInterval(tsid);&#xD;&#xA;    		console.log('done', this.x, this.y, this.fuel, this.distance, '[ ' + (Date.now() - startedAt) + ' ]');&#xD;&#xA;    	} else {&#xD;&#xA;    		this.setDelta();&#xD;&#xA;    		this.update();&#xD;&#xA;    		console.log('going', this.x, this.y, this.fuel, this.distance, '[ ' + (Date.now() - startedAt) + ' ]');&#xD;&#xA;    	}&#xD;&#xA;    };&#xD;&#xA;    let tsid;&#xD;&#xA;    let startedAt = Date.now();&#xD;&#xA;    tsid = setInterval(function() {&#xD;&#xA;    	this.move();&#xD;&#xA;    }, 10);