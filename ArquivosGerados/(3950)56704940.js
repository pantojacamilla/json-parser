                 // Get a reference to the <path>&#xD;&#xA;    var path = document.querySelector('#pathRecrut');&#xD;&#xA;    // Get length of path... ~577px in this case&#xD;&#xA;    var pathLength = path.getTotalLength();&#xD;&#xA;    // Make very long dashes (the length of the path itself)&#xD;&#xA;    path.style.strokeDasharray = pathLength + ' ' + pathLength;&#xD;&#xA;    // Offset the dashes so the it appears hidden entirely&#xD;&#xA;    path.style.strokeDashoffset = pathLength;&#xD;&#xA;    // Jake Archibald says so&#xD;&#xA;    // https://jakearchibald.com/2013/animated-line-drawing-svg/&#xD;&#xA;    path.getBoundingClientRect();&#xD;&#xA;    // When the page scrolls...&#xD;&#xA;    window.addEventListener("scroll", function(e) {&#xD;&#xA;     &#xD;&#xA;      // What % down is it? &#xD;&#xA;      // https://stackoverflow.com/questions/2387136/cross-browser-method-to-determine-vertical-scroll-percentage-in-javascript/2387222#2387222&#xD;&#xA;      // Had to try three or four differnet methods here. Kind of a cross-browser nightmare.&#xD;&#xA;      var scrollPercentage = (document.documentElement.scrollTop + document.body.scrollTop) / (document.documentElement.scrollHeight - document.documentElement.clientHeight);&#xD;&#xA;        &#xD;&#xA;      // Length to offset the dashes&#xD;&#xA;      var drawLength = pathLength * scrollPercentage;&#xD;&#xA;      &#xD;&#xA;      // Draw in reverse&#xD;&#xA;      path.style.strokeDashoffset = pathLength - drawLength;&#xD;&#xA;        &#xD;&#xA;      // When complete, remove the dash array, otherwise shape isn't quite sharp&#xD;&#xA;     // Accounts for fuzzy math&#xD;&#xA;      if (scrollPercentage >= 0.99) {&#xD;&#xA;        path.style.strokeDasharray = "none";&#xD;&#xA;        &#xD;&#xA;      } else {&#xD;&#xA;        path.style.strokeDasharray = pathLength + ' ' + pathLength;&#xD;&#xA;      }&#xD;&#xA;      &#xD;&#xA;    });