    // get the exact total number of items&#xD;&#xA;    function getCount() {&#xD;&#xA;        return $.get({&#xD;&#xA;            url: '/sites/_api/items/count',&#xD;&#xA;            contentType: "application/json;odata=verbose",&#xD;&#xA;            headers: { "Accept": "application/json;odata=verbose" }&#xD;&#xA;        });&#xD;&#xA;    }&#xD;&#xA;    getCount().done(function (result) {&#xD;&#xA;        var promises = []; // store promises&#xD;&#xA;        var total = result.d.ItemCount; // total number of items&#xD;&#xA;        var batch = 500; // number of items to fetch for each request&#xD;&#xA;        var count = Math.ceil(total / batch); // number of request needed&#xD;&#xA;        for (var i = 0; i < count; i++) {&#xD;&#xA;            var skip = batch * i; // number of item already fetched&#xD;&#xA;            var top = batch * (i + 1) > total ? (total % batch) : batch; // number of item to fetch&#xD;&#xA;            var p = $.getJSON("/sites/_api/items?$select=" + fieldname + "&$skip=" + skip + "&$top=" + top); // get promise&#xD;&#xA;            promises.push(p); // store promise in dedicated array&#xD;&#xA;        }&#xD;&#xA;        // join all promises and handle all results at once&#xD;&#xA;        Rx.Observable.forkJoin(promises).subscribe(function (result) {&#xD;&#xA;            console.log(result); //[object, object, object, object, object]&#xD;&#xA;        });&#xD;&#xA;    });