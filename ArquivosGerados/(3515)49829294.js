    //  Declaring my object&#xD;&#xA;    var Field = {&#xD;&#xA;        /**&#xD;&#xA;         * @type {Object}&#xD;&#xA;         */&#xD;&#xA;        collection: {},&#xD;&#xA;        /**&#xD;&#xA;         * collect&#xD;&#xA;         * Push the | indexName: value | into collection object.&#xD;&#xA;         *&#xD;&#xA;         * @param {object} obj&#xD;&#xA;         */&#xD;&#xA;        collect: function (obj) {&#xD;&#xA;            //console.log(obj);&#xD;&#xA;            var indexNames = Object.keys(obj);&#xD;&#xA;            var selectors = Object.values(obj);&#xD;&#xA;            for (var i=0; i<indexNames.length; i++) {&#xD;&#xA;                var el = document.querySelectorAll(selectors[i]);&#xD;&#xA;                this.collection[indexNames[i]] = this.fldValue(el);&#xD;&#xA;            }&#xD;&#xA;        },&#xD;&#xA;        /**&#xD;&#xA;         * fldValue&#xD;&#xA;         * Get the value of the injected object after having recognized its tagName and type.&#xD;&#xA;         *&#xD;&#xA;         * @param {object} HTMLObject&#xD;&#xA;         * @returns {*}&#xD;&#xA;         */&#xD;&#xA;        fldValue: function (HTMLObject) {&#xD;&#xA;            HTMLObject = HTMLObject[0];&#xD;&#xA;            switch (HTMLObject.tagName) {&#xD;&#xA;                case "INPUT":&#xD;&#xA;                    switch (HTMLObject.type) {&#xD;&#xA;                        case "text":&#xD;&#xA;                        case "password":&#xD;&#xA;                        case "hidden":&#xD;&#xA;                            return HTMLObject.value;&#xD;&#xA;                        case "checkbox":&#xD;&#xA;                            return HTMLObject.checked;&#xD;&#xA;                        default:&#xD;&#xA;                            throw "Unknown input type: ".concat(HTMLObject.type);&#xD;&#xA;                    }&#xD;&#xA;                case "DIV":&#xD;&#xA;                case "P":&#xD;&#xA;                case "SPAN":&#xD;&#xA;                case "H1":&#xD;&#xA;                case "H2":&#xD;&#xA;                case "H3":&#xD;&#xA;                case "H4":&#xD;&#xA;                case "H5":&#xD;&#xA;                case "H6":&#xD;&#xA;                    return HTMLObject.textContent;&#xD;&#xA;                default:&#xD;&#xA;                    throw "Unknown element tagName: ".concat(HTMLObject.tagName);&#xD;&#xA;            }&#xD;&#xA;        },&#xD;&#xA;        /**&#xD;&#xA;         *&#xD;&#xA;         * @param {string} className&#xD;&#xA;         * @returns {*}&#xD;&#xA;         */&#xD;&#xA;        reset: function (className) {&#xD;&#xA;            var elements = document.getElementsByClassName(className);&#xD;&#xA;            for (var i=0; i<elements.length; i++) {&#xD;&#xA;                var el = elements[i];&#xD;&#xA;                switch (el.tagName) {&#xD;&#xA;                    case "INPUT":&#xD;&#xA;                        switch (el.type) {&#xD;&#xA;                            case "text":&#xD;&#xA;                            case "password":&#xD;&#xA;                            case "hidden":&#xD;&#xA;                                el.value = '';&#xD;&#xA;                                break;&#xD;&#xA;                            case "checkbox":&#xD;&#xA;                                el.checked = false;&#xD;&#xA;                                break;&#xD;&#xA;                            default:&#xD;&#xA;                                throw "Unknown input type: ".concat(el.type);&#xD;&#xA;                        }&#xD;&#xA;                        break;&#xD;&#xA;                    case "DIV":&#xD;&#xA;                    case "P":&#xD;&#xA;                    case "SPAN":&#xD;&#xA;                    case "H1":&#xD;&#xA;                    case "H2":&#xD;&#xA;                    case "H3":&#xD;&#xA;                    case "H4":&#xD;&#xA;                    case "H5":&#xD;&#xA;                    case "H6":&#xD;&#xA;                        el.innerHTML = '';&#xD;&#xA;                        break;&#xD;&#xA;                    default:&#xD;&#xA;                        throw "Unknown element: ".concat(el.tagName);&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;        },&#xD;&#xA;        get getCollection() {&#xD;&#xA;            return this.collection;&#xD;&#xA;        }&#xD;&#xA;    };&#xD;&#xA;    //  --------------------&#xD;&#xA;    //  Object instantiation&#xD;&#xA;      var a = Object.create(Field);&#xD;&#xA;      var b = Object.create(Field);&#xD;&#xA;      &#xD;&#xA;              document.getElementById('send')&#xD;&#xA;                .addEventListener('click', function (ev) {&#xD;&#xA;                    a.collect({&#xD;&#xA;                        name: '[name="name"]',&#xD;&#xA;                        password: '.password',&#xD;&#xA;                        title: '.title',&#xD;&#xA;                        description: '.container',&#xD;&#xA;                        note: '#paragraph',&#xD;&#xA;                        chk_1: '[name="chk1"]',&#xD;&#xA;                        chk_2: '[name="chk2"]'&#xD;&#xA;                    });&#xD;&#xA;                    b.collect({&#xD;&#xA;                        asd: '.title'&#xD;&#xA;                    });&#xD;&#xA;                    &#xD;&#xA;                    // !! They should be different but they're actually the same object !!&#xD;&#xA;                    console.log(a.getCollection);&#xD;&#xA;                    console.log(b.getCollection);&#xD;&#xA;                });&#xD;&#xA;            document.getElementById('reset')&#xD;&#xA;                .addEventListener('click', function (ev) {&#xD;&#xA;                    a.reset('reset');&#xD;&#xA;                });