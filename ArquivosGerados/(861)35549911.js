    //dataset&#xD;&#xA;    var data = [&#xD;&#xA;                {"inTime":"2013-04-24T00:00:00-05:00","outTime":"2013-04-24T00:00:00-05:00"},&#xD;&#xA;                {"inTime":"2013-04-24T00:00:00-05:00","outTime":"2013-04-24T00:00:00-05:00"},&#xD;&#xA;                {"inTime":"2013-04-24T00:00:00-05:00","outTime":"2013-04-24T00:00:00-05:00"},&#xD;&#xA;                {"inTime":"2013-04-24T00:00:00-05:00","outTime":"2013-04-24T00:00:00-05:00"},&#xD;&#xA;                {"inTime":"2013-04-24T00:00:00-05:00","outTime":"2013-04-24T00:00:00-05:00"},&#xD;&#xA;                {"inTime":"2013-04-24T00:00:00-05:00","outTime":"2013-04-24T00:00:00-05:00"},&#xD;&#xA;                {"inTime":"2013-04-24T00:00:00-05:00","outTime":"2013-04-24T00:00:00-05:00"},&#xD;&#xA;                {"inTime":"2013-04-24T00:00:00-05:00","outTime":"2013-04-24T00:00:00-05:00"},&#xD;&#xA;            ];&#xD;&#xA;            var margin = {top: 40, right: 40, bottom: 40, left:40},&#xD;&#xA;                width = 600,&#xD;&#xA;                height = 500;&#xD;&#xA;            var padding = 100;&#xD;&#xA;            &#xD;&#xA;            //Define Left Y axis&#xD;&#xA;            var y = d3.time.scale()&#xD;&#xA;            .domain([new Date(data[0].inTime), d3.time.day.offset(new Date(data[data.length - 1].inTime), 1)])&#xD;&#xA;            .rangeRound([0, width - margin.left - margin.right]);&#xD;&#xA;            //Define Right Y axis&#xD;&#xA;    		var y1 =  d3.time.scale()&#xD;&#xA;            .domain([new Date(data[1].inTime), d3.time.day.offset(new Date(data[data.length - 1].outTime), 1)])&#xD;&#xA;            .rangeRound([0, width - margin.left - margin.right]);&#xD;&#xA;           &#xD;&#xA;    		//Left Yaxis attributes&#xD;&#xA;            var yAxis = d3.svg.axis()&#xD;&#xA;                .scale(y)&#xD;&#xA;                .orient('left')&#xD;&#xA;                .tickFormat(d3.time.format('%m/%d %H:%M'))&#xD;&#xA;                .tickSize(8)&#xD;&#xA;                .tickPadding(8);&#xD;&#xA;    		//Right Yaxis attributes       &#xD;&#xA;            var yAxisRight = d3.svg.axis()&#xD;&#xA;            .scale(y1)&#xD;&#xA;            .orient('right')&#xD;&#xA;            .tickFormat(d3.time.format('%m/%d %H:%M'))&#xD;&#xA;            .tickSize(8)&#xD;&#xA;            .tickPadding(8);&#xD;&#xA;                &#xD;&#xA;            //Create chart&#xD;&#xA;    		var svg = d3.select('body').append('svg')&#xD;&#xA;                .attr('class', 'chart')&#xD;&#xA;                .attr('width', width)&#xD;&#xA;                .attr('height', height)&#xD;&#xA;                .append('g')&#xD;&#xA;                .attr('transform', 'translate(' + margin.left + ', ' + margin.top + ')');&#xD;&#xA;      &#xD;&#xA;    		//Add left Yaxis to group&#xD;&#xA;            svg.append('g')&#xD;&#xA;              .attr('class', 'y axis')&#xD;&#xA;              .attr('transform', 'translate(100,   5)')&#xD;&#xA;              .call(yAxis);&#xD;&#xA;              &#xD;&#xA;    		//Add right Yaxis to group&#xD;&#xA;            svg.append('g')&#xD;&#xA;            .attr('class', 'x axis')&#xD;&#xA;            .attr('transform', 'translate(400,   1)')&#xD;&#xA;            .call(yAxisRight);&#xD;&#xA;           &#xD;&#xA;    		&#xD;&#xA;    		&#xD;&#xA;    		var parse = d3.time.format('%m/%d %H:%M');&#xD;&#xA;    		&#xD;&#xA;    		&#xD;&#xA;    		&#xD;&#xA;           //Function to add a line between two ticks&#xD;&#xA;            function addLine(t1, t2){&#xD;&#xA;                var ticks = {};&#xD;&#xA;                console.log("print ", d3.selectAll('.tick text').each(function(d) { &#xD;&#xA;                    ticks[d3.select(this).text()] = this;&#xD;&#xA;                }));&#xD;&#xA;                     	&#xD;&#xA;                d3.selectAll('.tick text').each(function(d) { &#xD;&#xA;                    ticks[d3.select(this).text()] = this;&#xD;&#xA;                });&#xD;&#xA;                &#xD;&#xA;                console.log("ticks are",ticks);&#xD;&#xA;                console.log("ticks[t1] is",ticks[t1]);&#xD;&#xA;                console.log("t1 is",t1);&#xD;&#xA;                &#xD;&#xA;                var pos1 = ticks[t1].getBoundingClientRect();&#xD;&#xA;                var pos2 = ticks[t2].getBoundingClientRect();&#xD;&#xA;                &#xD;&#xA;                console.log("pos1 is",pos1);&#xD;&#xA;                console.log("pos2 is",pos2);&#xD;&#xA;                &#xD;&#xA;                svg.append('line')&#xD;&#xA;               	  .attr('x1', pos1.top - pos1.width)&#xD;&#xA;                  .attr('y1', pos1.top + 5)&#xD;&#xA;                  .attr('x2', pos2.left - 5)&#xD;&#xA;                  .attr('y2', pos2.top + 5)&#xD;&#xA;               	  .style('stroke','black');&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            //On click event for ticks&#xD;&#xA;            svg.selectAll(".y.axis .tick")&#xD;&#xA;            .on("click", function(d) { &#xD;&#xA;            	var parse = d3.time.format('%m/%d %H:%M');&#xD;&#xA;            	var d1=parse(d);&#xD;&#xA;            	console.log("d1 is",d1);&#xD;&#xA;            	svg.selectAll(".x.axis .tick")&#xD;&#xA;            	.on("click", function(d){&#xD;&#xA;            		var d2=parse(d);&#xD;&#xA;            		console.log("d2 is : ",d2);&#xD;&#xA;            		addLine(d1,d2);&#xD;&#xA;            		console.log("inner d",d);&#xD;&#xA;            	})&#xD;&#xA;            	&#xD;&#xA;            	console.log(d);});&#xD;&#xA;            &#xD;&#xA;            &#xD;&#xA;    /*         svg.selectAll(".x.axis .tick")&#xD;&#xA;            .on("click", function(d){&#xD;&#xA;            	&#xD;&#xA;            	console.log("Right y axis d ",d);&#xD;&#xA;            }); */&#xD;&#xA;            &#xD;&#xA;            &#xD;&#xA;    		  var ticks = svg.selectAll(".tick");&#xD;&#xA;    	        ticks.each(function() { d3.select(this).append("circle").attr("r", 5); });&#xD;&#xA;    	        ticks.selectAll("line").remove();   &#xD;&#xA;          