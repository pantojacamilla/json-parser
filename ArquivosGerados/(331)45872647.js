    var data =[&#xD;&#xA;    {&#xD;&#xA;        'timescale': '2015', &#xD;&#xA;        'Not': 31, &#xD;&#xA;        'Nearly': 59, &#xD;&#xA;        'Standard': 81,&#xD;&#xA;        'Exceed':100&#xD;&#xA;      },&#xD;&#xA;      {&#xD;&#xA;        'timescale': '2016', &#xD;&#xA;      'Not': 28, &#xD;&#xA;        'Nearly': 55, &#xD;&#xA;        'Standard': 78,&#xD;&#xA;        'Exceed':100&#xD;&#xA;      },&#xD;&#xA;      {&#xD;&#xA;        'timescale': '2017', &#xD;&#xA;      'Not': 25, &#xD;&#xA;        'Nearly': 51, &#xD;&#xA;        'Standard': 75,&#xD;&#xA;        'Exceed':100&#xD;&#xA;      },&#xD;&#xA;      {&#xD;&#xA;        'timescale': '2018', &#xD;&#xA;     'Not': "null", &#xD;&#xA;        'Nearly': "null", &#xD;&#xA;        'Standard': "null",&#xD;&#xA;        'Exceed':"null"&#xD;&#xA;      },&#xD;&#xA;      {&#xD;&#xA;        'timescale': '2019', &#xD;&#xA;     'Not': 41, &#xD;&#xA;        'Nearly': 67, &#xD;&#xA;        'Standard': 90,&#xD;&#xA;        'Exceed':100&#xD;&#xA;      },&#xD;&#xA;      {&#xD;&#xA;        'timescale': '2020', &#xD;&#xA;    'Not': 36, &#xD;&#xA;        'Nearly': 61, &#xD;&#xA;        'Standard': 86,&#xD;&#xA;        'Exceed':100&#xD;&#xA;      },&#xD;&#xA;      {&#xD;&#xA;        'timescale': '2021', &#xD;&#xA;    'Not': 31, &#xD;&#xA;        'Nearly': 55, &#xD;&#xA;        'Standard': 82,&#xD;&#xA;        'Exceed':100&#xD;&#xA;      }&#xD;&#xA;    ];&#xD;&#xA;    //d3.csv("test.csv", function(error,data){&#xD;&#xA;      console.log(data);&#xD;&#xA;    // set the dimensions and margins of the graph&#xD;&#xA;    var margin = { top: 20, right: 80, bottom: 30, left: 50 },  &#xD;&#xA;        svg = d3.select('svg'),&#xD;&#xA;        width = +svg.attr('width') - margin.left - margin.right,&#xD;&#xA;        height = +svg.attr('height') - margin.top - margin.bottom;&#xD;&#xA;    var g = svg.append("g")&#xD;&#xA;      .attr("transform", "translate(" + margin.left + "," + margin.top + ")");&#xD;&#xA;    // set the ranges&#xD;&#xA;    var x = d3.scaleBand().rangeRound([0, width]).padding(1),&#xD;&#xA;        y = d3.scaleLinear().rangeRound([height, 0]),&#xD;&#xA;        z = d3.scaleOrdinal(["#BBB84B","#789952","#50DB51","#2D602A"]);&#xD;&#xA;    // define the line&#xD;&#xA;    var line = d3.line()&#xD;&#xA;    .defined(function (d) { &#xD;&#xA;          return !isNaN(d.total); &#xD;&#xA;        })&#xD;&#xA;      .x(function(d) { return x(d.timescale); })&#xD;&#xA;      .y(function(d) { return y(d.total); });&#xD;&#xA;    // scale the range of the data&#xD;&#xA;    z.domain(d3.keys(data[0]).filter(function(key) {&#xD;&#xA;      return key !== "timescale";&#xD;&#xA;    }));&#xD;&#xA;    var trends = z.domain().map(function(name) {&#xD;&#xA;      return {&#xD;&#xA;        name: name,&#xD;&#xA;        values: data.map(function(d) {&#xD;&#xA;          return {&#xD;&#xA;            timescale: d.timescale,&#xD;&#xA;            total: +d[name]&#xD;&#xA;          };&#xD;&#xA;        })&#xD;&#xA;      };&#xD;&#xA;    });&#xD;&#xA;    x.domain(data.map(function(d) { return d.timescale; }));&#xD;&#xA;    y.domain([0, d3.max(trends, function(c) {&#xD;&#xA;      return d3.max(c.values, function(v) {&#xD;&#xA;        return v.total;&#xD;&#xA;      });&#xD;&#xA;    })]);&#xD;&#xA;    // Draw the line&#xD;&#xA;    var trend = g.selectAll(".trend")&#xD;&#xA;      .data(trends)&#xD;&#xA;      .enter()&#xD;&#xA;      .append("g")&#xD;&#xA;      .attr("class", "trend");&#xD;&#xA;    trend.append("path")&#xD;&#xA;      .attr("class", "line")&#xD;&#xA;      .attr("d", function(d) { return line(d.values); })&#xD;&#xA;      .style("stroke", function(d) { return z(d.name); });&#xD;&#xA;    // Draw the empty value for every point&#xD;&#xA;    var points = g.selectAll('.points')&#xD;&#xA;      .data(trends)&#xD;&#xA;      .enter()&#xD;&#xA;      .append('g')&#xD;&#xA;      .attr('class', 'points')&#xD;&#xA;      .append('text');&#xD;&#xA;    // Draw the circle&#xD;&#xA;    trend&#xD;&#xA;      .style("fill", "#FFF")&#xD;&#xA;      .style("stroke", function(d) { return z(d.name); })&#xD;&#xA;      .selectAll("circle.line")&#xD;&#xA;      .data(function(d){return d.values} )&#xD;&#xA;      .enter()&#xD;&#xA;      .append("circle")&#xD;&#xA;      .filter(function(d) { return d.timescale !== "2018" })&#xD;&#xA;      .attr("r", 5)&#xD;&#xA;      .style("stroke-width", 3)&#xD;&#xA;      .attr("cx", function(d) { return x(d.timescale); })&#xD;&#xA;      .attr("cy", function(d) { return y(d.total); });&#xD;&#xA;      &#xD;&#xA;    // Draw the axis&#xD;&#xA;    g.append("g")&#xD;&#xA;      .attr("class", "axis axis-x")&#xD;&#xA;      .attr("transform", "translate(0, " + height + ")")&#xD;&#xA;      .call(d3.axisBottom(x));&#xD;&#xA;    g.append("g")&#xD;&#xA;      .attr("class", "axis axis-y")&#xD;&#xA;      .call(d3.axisLeft(y).ticks(6));&#xD;&#xA;    var focus = g.append('g')&#xD;&#xA;      .attr('class','focus')&#xD;&#xA;      .style('display', 'none');&#xD;&#xA;    focus.append('line')&#xD;&#xA;      .attr('class', 'x-hover-line hover-line')&#xD;&#xA;      .attr('y1' , 0)&#xD;&#xA;      .attr('y2', height)&#xD;&#xA;      .style('stroke',"black");&#xD;&#xA;    svg.append('rect')&#xD;&#xA;      .attr("transform", "translate(" + margin.left + "," + margin.top + ")")&#xD;&#xA;      .attr("class", "overlay")&#xD;&#xA;      .attr("width", width)&#xD;&#xA;      .attr("height", height)&#xD;&#xA;      .on("mouseover", mouseover)&#xD;&#xA;      .on("mouseout", mouseout)&#xD;&#xA;      .on("mousemove", mousemove);&#xD;&#xA;    // var timeScales = data.map(function(name) { return x(name.timescale); });&#xD;&#xA;    // console.log(timeScales);&#xD;&#xA;    var timeScales = [106,209,312,415,518,621,724];&#xD;&#xA;    // d3.select('.focus')&#xD;&#xA;    //       .attr("x1",415)&#xD;&#xA;    //       .attr("y1",0)&#xD;&#xA;    //       .attr("x2",415)&#xD;&#xA;    //       .attr("y2",height)&#xD;&#xA;    //       .style("display","none");&#xD;&#xA;    function mouseover() {&#xD;&#xA;      &#xD;&#xA;      focus.style("display", null);&#xD;&#xA;      d3.selectAll('.points text').style("display", null);&#xD;&#xA;    }&#xD;&#xA;    function mouseout() {&#xD;&#xA;      focus.style("display", "none");&#xD;&#xA;      d3.selectAll('.points text').style("display", "none");&#xD;&#xA;    }&#xD;&#xA;    function mousemove() {&#xD;&#xA;      var i = d3.bisect(timeScales, d3.mouse(this)[0], 1);&#xD;&#xA;      var di = data[i-1];&#xD;&#xA;      focus.attr("transform", "translate(" + x(di.timescale) + ",0)");&#xD;&#xA;      d3.selectAll('.points text')&#xD;&#xA;        .attr('x', function(d) { return x(di.timescale) + 5; })&#xD;&#xA;        .attr('y', function(d) { return y(d.values[i-1].total)-5; })&#xD;&#xA;        .text(function(d) { return d.values[i-1].total; })&#xD;&#xA;        .style('fill', function(d) { return z(d.name); });&#xD;&#xA;    }