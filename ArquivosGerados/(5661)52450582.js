    public class CustomerRepository : IRepository&#xD;&#xA;    {&#xD;&#xA;           public CustomerRepository(Context context)&#xD;&#xA;           {&#xD;&#xA;           }&#xD;&#xA;    }&#xD;&#xA;    public class AgentRepository : IRepository&#xD;&#xA;    {&#xD;&#xA;           public AgentRepository(Context context)&#xD;&#xA;           {&#xD;&#xA;           }&#xD;&#xA;    }&#xD;&#xA;    public class ToDoFacade : IFacade&#xD;&#xA;    {&#xD;&#xA;    	public ToDoFacade(IRepository agentRepository, IRepository customerRepository)&#xD;&#xA;    	{&#xD;&#xA;    	}&#xD;&#xA;    }&#xD;&#xA;    // IoC registration&#xD;&#xA;    public class Registry&#xD;&#xA;    {&#xD;&#xA;        public Registry()&#xD;&#xA;        {&#xD;&#xA;    	var builder = new ContainerBuilder();&#xD;&#xA;    	builder.RegisterType&lt;AgentRepository&gt;().As&lt;IRepository&gt;().PreserveExistingDefaults();&#xD;&#xA;    	builder.RegisterType&lt;CustomerRepository&gt;().Named&lt;IRepository&gt;("Customer");&#xD;&#xA;// How can I continoue here?&#xD;&#xA;    	builder.RegisterType&lt;ToDoFacade&gt;().As&lt;IFacade&gt;().UsingConstructor(...);&#xD;&#xA;        }&#xD;&#xA;    }