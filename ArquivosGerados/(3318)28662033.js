    import java.awt.*; &#xD;&#xA;    import java.awt.event.*;&#xD;&#xA;    import javax.swing.*;&#xD;&#xA;    import javax.swing.text.*;&#xD;&#xA;     &#xD;&#xA;    public class TextFieldUnicode {&#xD;&#xA;        private JTextPane textPane;&#xD;&#xA;        private JTextField textField;&#xD;&#xA;        private Document doc;&#xD;&#xA;        private Highlighter hilit = new DefaultHighlighter();&#xD;&#xA;        private Highlighter.HighlightPainter painter =  new DefaultHighlighter.DefaultHighlightPainter(Color.GREEN);&#xD;&#xA;        private TextFieldUnicode() throws BadLocationException {&#xD;&#xA;        	this.textPane = new JTextPane();&#xD;&#xA;        	this.textField = new JTextField();&#xD;&#xA;        	this.doc = new DefaultStyledDocument();    	&#xD;&#xA;       	&#xD;&#xA;        	generateSomeText();    	&#xD;&#xA;        	addTextFieldListener();  &#xD;&#xA;        	createAndShowGUI(textField);&#xD;&#xA;        } //end of constructor&#xD;&#xA;         &#xD;&#xA;        private void generateSomeText() throws BadLocationException {&#xD;&#xA;        	for(int i=0;i<=50000;i++) {&#xD;&#xA;        		doc.insertString(doc.getLength(), "hello world, hello stackoverflow, here is some generated text "+i+"\n", null);&#xD;&#xA;        	}&#xD;&#xA;        	textPane.setDocument(doc);&#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        //here, the text will be highlighter after a search query is inserted&#xD;&#xA;        private void addTextFieldListener() {&#xD;&#xA;        	&#xD;&#xA;        	textField.addActionListener( new ActionListener() {			&#xD;&#xA;    			@Override&#xD;&#xA;    			public void actionPerformed(ActionEvent arg0) {&#xD;&#xA;    				float start = System.nanoTime(); //start meausuring time&#xD;&#xA;    				&#xD;&#xA;    		    	textPane.setHighlighter(hilit);    	&#xD;&#xA;    				String query = textField.getText();&#xD;&#xA;    				String text = textPane.getText();&#xD;&#xA;    	    		text = text.replaceAll("[\n]+", "");&#xD;&#xA;    				&#xD;&#xA;    				if(text != null) {					&#xD;&#xA;    					int index = text.indexOf(query); //get index of word						&#xD;&#xA;    					int len = query.length(); 		 //get length of word&#xD;&#xA;    					while ( index >= 0 ) {&#xD;&#xA;    						try {&#xD;&#xA;    							textPane.getHighlighter().addHighlight(index, index+len, painter);&#xD;&#xA;    						} catch (BadLocationException e) {&#xD;&#xA;    							e.printStackTrace();&#xD;&#xA;    						}   &#xD;&#xA;    							index = text.indexOf(query, (index+len));&#xD;&#xA;    					}        &#xD;&#xA;    				}&#xD;&#xA;    				float stop = System.nanoTime(); //stop meausuring time&#xD;&#xA;    				System.out.println("time="+(stop-start)/1000000000+"s");&#xD;&#xA;    			}&#xD;&#xA;    		});&#xD;&#xA;        }&#xD;&#xA;     &#xD;&#xA;       private void createAndShowGUI(JTextField textField) {&#xD;&#xA;            //Create and set up the window.&#xD;&#xA;            JFrame frame = new JFrame("TextFieldDemo");&#xD;&#xA;            frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);&#xD;&#xA;            frame.add(textField, BorderLayout.NORTH);&#xD;&#xA;            frame.add(new JScrollPane(textPane), BorderLayout.CENTER);    &#xD;&#xA;            frame.setSize(new Dimension(600, 600));&#xD;&#xA;            frame.setVisible(true);&#xD;&#xA;        }&#xD;&#xA;     &#xD;&#xA;        public static void main(String[] args) throws BadLocationException {&#xD;&#xA;        	new TextFieldUnicode();&#xD;&#xA;        }&#xD;&#xA;    }