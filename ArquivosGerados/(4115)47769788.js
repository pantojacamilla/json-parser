    import { createReducer, createActions } from 'reduxsauce'&#xD;&#xA;    import Immutable from 'seamless-immutable'&#xD;&#xA;    // Categories types&#xD;&#xA;    const { Types, Creators } = createActions({&#xD;&#xA;        categoriesRequest: null,&#xD;&#xA;        categoriesSucceed: ['payload'],&#xD;&#xA;        categoriesFailed: null&#xD;&#xA;    })&#xD;&#xA;    export const ReactRestoTypes = Types&#xD;&#xA;    export default Creators&#xD;&#xA;    // Initial state&#xD;&#xA;    export const INITIAL_STATE = Immutable({&#xD;&#xA;        payload: null,&#xD;&#xA;        errorMessage: null,&#xD;&#xA;        fetchCategories: false&#xD;&#xA;    })&#xD;&#xA;    // Reducers&#xD;&#xA;    export const categoriesRequest = (state) => &#xD;&#xA;        state.merge({ fetchCategories: true })&#xD;&#xA;    export const categoriesSucceed = (state, action) => {&#xD;&#xA;        const { payload } = action&#xD;&#xA;        return state.merge({ fetchCategories: false, errorMessage: null, payload})&#xD;&#xA;    }&#xD;&#xA;    export const categoriesFailed = (state) =>&#xD;&#xA;        state.merge({ fetchCategories: false, errorMessage: true})&#xD;&#xA;    export const reducer = createReducer(INITIAL_STATE, {&#xD;&#xA;        [Types.CATEGORIES_REQUEST]: categoriesRequest,&#xD;&#xA;        [Types.CATEGORIES_SUCCEED]: categoriesSucceed,&#xD;&#xA;        [Types.CATEGORIES_FAILED]: categoriesFailed&#xD;&#xA;    })