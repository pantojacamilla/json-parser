     var data = [&#xD;&#xA;                    {&#xD;&#xA;                        "component": "div",&#xD;&#xA;                        "attributes": {&#xD;&#xA;                        "id": "grid00",&#xD;&#xA;                        "className": "grid"&#xD;&#xA;                        },&#xD;&#xA;                        "parent": "header"&#xD;&#xA;                    },&#xD;&#xA;                    {&#xD;&#xA;                        "component": "div",&#xD;&#xA;                        "attributes": {&#xD;&#xA;                        "id": "row00",&#xD;&#xA;                        "className": "row"&#xD;&#xA;                        },&#xD;&#xA;                        "parent": "grid00"&#xD;&#xA;                    },&#xD;&#xA;                    {&#xD;&#xA;                        "component": "div",&#xD;&#xA;                        "attributes": {&#xD;&#xA;                        "id": "pivot00",&#xD;&#xA;                        "className": "ms-Pivot ms-Pivot--large ms-Pivot--tabs tab-content"&#xD;&#xA;                        },&#xD;&#xA;                        "parent": "row00"&#xD;&#xA;                    },&#xD;&#xA;                    {&#xD;&#xA;                        "component": "ul",&#xD;&#xA;                        "attributes": {&#xD;&#xA;                        "id": "pivotLinks00",&#xD;&#xA;                        "className": "ms-Pivot-links nav-pills"&#xD;&#xA;                        },&#xD;&#xA;                        "parent": "pivot00"&#xD;&#xA;                    }&#xD;&#xA;                ]&#xD;&#xA;    &#xD;&#xA;    const ProcessObject = (props) => { 	&#xD;&#xA;          props.data.map(data => <Node {...data}/>)&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    function Node(props){&#xD;&#xA;      return (&#xD;&#xA;          React.createElement(`${props.component}`,{id: props.attributes.id},`this is ${props.attributes.id}`, document.getElementById(props.parent))&#xD;&#xA;      );&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    class App extends React.Component {&#xD;&#xA;     	render() {&#xD;&#xA;      	return (&#xD;&#xA;        	<div>&#xD;&#xA;        	  <div className="header">Header</div>&#xD;&#xA;            <ProcessObject data={data}/>&#xD;&#xA;        	</div>&#xD;&#xA;        );&#xD;&#xA;      }	&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    ReactDOM.render(&#xD;&#xA;      <App/>, document.getElementById('mountNode')&#xD;&#xA;    );