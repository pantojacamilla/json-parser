    var data = {&#xD;&#xA;      "headers":["Plat","Chan","Group","Random","Cat","Random","Random","num","num2"],&#xD;&#xA;      "rows":[  &#xD;&#xA;    	["plat1","chan1","group1","a","cat1","a","a",26,1000],&#xD;&#xA;    	["plat1","chan2","group1","a","cat2","a","a",70,14],&#xD;&#xA;    	["plat1","chan1","group1","a","cat1","a","a",14,1000],&#xD;&#xA;    	["plat1","chan1","group2","a","cat1","a","a",50,2000],&#xD;&#xA;    	["plat1","chan1","group2","a","cat2","a","a",30,2000],&#xD;&#xA;    	["plat1","chan1","group2","a","cat1","a","a",30,2000]&#xD;&#xA;      ]&#xD;&#xA;    };&#xD;&#xA;    function transformData(rows) {&#xD;&#xA;      const &#xD;&#xA;        rowMap = new Map(),&#xD;&#xA;        result = [];&#xD;&#xA;        &#xD;&#xA;      // Iterate over the rows.&#xD;&#xA;      rows.forEach(row => {&#xD;&#xA;        const&#xD;&#xA;          // Create a key, it is the first elements joined together.&#xD;&#xA;          key = row.slice(0,4).join();&#xD;&#xA;          &#xD;&#xA;        // Check if the Map has the generated key...&#xD;&#xA;        if (rowMap.has(key)) {&#xD;&#xA;          // The map has the key, we need to add up the values&#xD;&#xA;          const&#xD;&#xA;            // Get the value for the current key.&#xD;&#xA;            storedRow = rowMap.get(key);&#xD;&#xA;            // Add the value of the current row to the row in the map.&#xD;&#xA;            storedRow[7] += row[7];&#xD;&#xA;    		storedRow[8] += row[8];&#xD;&#xA;        } else {&#xD;&#xA;          // The key doens't exist yet, add the row to the map.&#xD;&#xA;          rowMap.set(key, row);&#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;      &#xD;&#xA;      // Iterate over all the entries in the map and push each value with the&#xD;&#xA;      // summed up value into the array.&#xD;&#xA;      rowMap.forEach(value => {&#xD;&#xA;        result.push(value);&#xD;&#xA;      });&#xD;&#xA;        &#xD;&#xA;    	//First table - group1 for Views&#xD;&#xA;    	var table1 = '<div class="row"><div class="col-lg-6" style="background-color: #e90649; width: 117px;">&nbsp;</div><div class="col-lg-6" style="max-width: 100px; padding-left: 10px; font-size: 2vw;">group1<br/><br/><span style="font-size: 1vw;">Cat1</span></div><div class="col-lg-6"><div class="container"><table><thead><tr><th>Plat</th><th>Chan</th><th>Group</th><th>Num</th></tr></thead><tbody>';&#xD;&#xA;    	&#xD;&#xA;    	for (i = 0; i < result.length; i++) &#xD;&#xA;    	{&#xD;&#xA;    		platformJSON = JSON.stringify(result[i][0]);&#xD;&#xA;    		objJSON = JSON.stringify(data.rows[i][2]);&#xD;&#xA;    		rateJSON = JSON.stringify(data.rows[i][4]);&#xD;&#xA;    		if(platformJSON.match(/plat1/) && objJSON.match(/group1/) && rateJSON.match(/cat1/))&#xD;&#xA;    		{&#xD;&#xA;    			table1 +="<tr><td>" + result[i][0] + "</td><td>" + result[i][1] +"</td><td>" + result[i][2] + "</td><td>" + result[i][7] + "</td><td>" + "</td></tr>";&#xD;&#xA;    		}&#xD;&#xA;    	}&#xD;&#xA;    	&#xD;&#xA;    	table1 += '</tbody></table></div></div></div>';&#xD;&#xA;    	$("#three").html(table1);&#xD;&#xA;      // Return the array.&#xD;&#xA;      return result;&#xD;&#xA;    	 &#xD;&#xA;    }&#xD;&#xA;    data.rows = transformData(data.rows);&#xD;&#xA;    const&#xD;&#xA;      generateHTML = createTable(data);&#xD;&#xA;    $("#one").html(generateHTML);