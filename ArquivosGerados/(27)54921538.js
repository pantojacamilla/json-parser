      ● Story adds based on mocked backend response&#xD;&#xA;    expect(received).toEqual(expected)&#xD;&#xA;    Expected value to equal:&#xD;&#xA;      1&#xD;&#xA;    Received:&#xD;&#xA;      0&#xD;&#xA;      92 |   // Test with idToken&#xD;&#xA;      93 |   await storyApp.instance().addStory(story)&#xD;&#xA;    > 94 |   expect(storyApp.state().data.length).toEqual(1)&#xD;&#xA;         |                                        ^&#xD;&#xA;      95 | })&#xD;&#xA;      96 | &#xD;&#xA;      97 | test('Story deletes based on mocked backend response', async () => {&#xD;&#xA;      at Object.toEqual (__tests__/App.test.js:94:40)&#xD;&#xA;      at tryCatch (node_modules/regenerator-runtime/runtime.js:62:40)&#xD;&#xA;      at Generator.invoke [as _invoke] (node_modules/regenerator-runtime/runtime.js:288:22)&#xD;&#xA;      at Generator.prototype.(anonymous function) [as next] (node_modules/regenerator-runtime/runtime.js:114:21)&#xD;&#xA;      at asyncGeneratorStep (__tests__/App.test.js:25:103)&#xD;&#xA;      at _next (__tests__/App.test.js:27:194)