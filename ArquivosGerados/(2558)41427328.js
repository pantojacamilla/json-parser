    // generate Dates&#xD;&#xA;    Calendar calendar = Calendar.getInstance();&#xD;&#xA;    Date d1 = calendar.getTime();&#xD;&#xA;    calendar.add(Calendar.DATE, 1);&#xD;&#xA;    Date d2 = calendar.getTime();&#xD;&#xA;    calendar.add(Calendar.DATE, 1);&#xD;&#xA;    Date d3 = calendar.getTime();&#xD;&#xA;    GraphView graph = (GraphView) findViewById(R.id.graph);&#xD;&#xA;    // you can directly pass Date objects to DataPoint-Constructor&#xD;&#xA;    // this will convert the Date to double via Date#getTime()&#xD;&#xA;    LineGraphSeries<DataPoint> series = new LineGraphSeries<>(new DataPoint[] {&#xD;&#xA;        new DataPoint(d1, 1),&#xD;&#xA;        new DataPoint(d2, 5),&#xD;&#xA;        new DataPoint(d3, 3)&#xD;&#xA;    });&#xD;&#xA;    graph.addSeries(series);&#xD;&#xA;    // set date label formatter&#xD;&#xA;    graph.getGridLabelRenderer().setLabelFormatter(new DateAsXAxisLabelFormatter(getActivity()));&#xD;&#xA;    graph.getGridLabelRenderer().setNumHorizontalLabels(3); // only 4 because of the space&#xD;&#xA;    // set manual x bounds to have nice steps&#xD;&#xA;    graph.getViewport().setMinX(d1.getTime());&#xD;&#xA;    graph.getViewport().setMaxX(d3.getTime());&#xD;&#xA;    graph.getViewport().setXAxisBoundsManual(true);&#xD;&#xA;    // as we use dates as labels, the human rounding to nice readable numbers&#xD;&#xA;    // is not necessary&#xD;&#xA;    graph.getGridLabelRenderer().setHumanRounding(false);