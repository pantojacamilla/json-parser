    $(function() {&#xD;&#xA;      $('input[type="checkbox"]').change(checkboxChanged);&#xD;&#xA;      function checkboxChanged() {&#xD;&#xA;        var $this = $(this),&#xD;&#xA;            checked = $this.prop("checked"),&#xD;&#xA;            container = $this.parent(),&#xD;&#xA;            siblings = container.siblings();&#xD;&#xA;        container.find('input[type="checkbox"]')&#xD;&#xA;        .prop({&#xD;&#xA;            indeterminate: false,&#xD;&#xA;            checked: checked&#xD;&#xA;        })&#xD;&#xA;        .siblings('label')&#xD;&#xA;        .removeClass('custom-checked custom-unchecked custom-indeterminate')&#xD;&#xA;        .addClass(checked ? 'custom-checked' : 'custom-unchecked');&#xD;&#xA;        checkSiblings(container, checked);&#xD;&#xA;      }&#xD;&#xA;      function checkSiblings($el, checked) {&#xD;&#xA;        var parent = $el.parent().parent(),&#xD;&#xA;            all = true,&#xD;&#xA;            indeterminate = false;&#xD;&#xA;        $el.siblings().each(function() {&#xD;&#xA;          return all = ($(this).children('input[type="checkbox"]').prop("checked") === checked);&#xD;&#xA;        });&#xD;&#xA;        if (all && checked) {&#xD;&#xA;          parent.children('input[type="checkbox"]')&#xD;&#xA;          .prop({&#xD;&#xA;              indeterminate: false,&#xD;&#xA;              checked: checked&#xD;&#xA;          })&#xD;&#xA;          .siblings('label')&#xD;&#xA;          .removeClass('custom-checked custom-unchecked custom-indeterminate')&#xD;&#xA;          .addClass(checked ? 'custom-checked' : 'custom-unchecked');&#xD;&#xA;          checkSiblings(parent, checked);&#xD;&#xA;        } &#xD;&#xA;        else if (all && !checked) {&#xD;&#xA;          indeterminate = parent.find('input[type="checkbox"]:checked').length > 0;&#xD;&#xA;          parent.children('input[type="checkbox"]')&#xD;&#xA;          .prop("checked", checked)&#xD;&#xA;          .prop("indeterminate", indeterminate)&#xD;&#xA;          .siblings('label')&#xD;&#xA;          .removeClass('custom-checked custom-unchecked custom-indeterminate')&#xD;&#xA;          .addClass(indeterminate ? 'custom-indeterminate' : (checked ? 'custom-checked' : 'custom-unchecked'));&#xD;&#xA;          checkSiblings(parent, checked);&#xD;&#xA;        } &#xD;&#xA;        else {&#xD;&#xA;          $el.parents("li").children('input[type="checkbox"]')&#xD;&#xA;          .prop({&#xD;&#xA;              indeterminate: true,&#xD;&#xA;              checked: false&#xD;&#xA;          })&#xD;&#xA;          .siblings('label')&#xD;&#xA;          .removeClass('custom-checked custom-unchecked custom-indeterminate')&#xD;&#xA;          .addClass('custom-indeterminate');&#xD;&#xA;        }&#xD;&#xA;      }&#xD;&#xA;    });