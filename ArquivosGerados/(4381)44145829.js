    import android.os.Message;&#xD;&#xA;    import android.util.Log;&#xD;&#xA;    import java.io.IOException;&#xD;&#xA;    import java.net.DatagramPacket;&#xD;&#xA;    import java.net.DatagramSocket;&#xD;&#xA;    import java.net.InetAddress;&#xD;&#xA;    import java.net.SocketException;&#xD;&#xA;    import java.net.UnknownHostException;&#xD;&#xA;    import android.app.Activity;&#xD;&#xA;    import android.content.Context;&#xD;&#xA;    import android.os.Message;&#xD;&#xA;    import android.util.Log;&#xD;&#xA;    import android.widget.Toast;&#xD;&#xA;    import android.os.Handler;&#xD;&#xA;    public class UdpClientThread extends Thread{&#xD;&#xA;        String dstAddress;&#xD;&#xA;        int dstPort;&#xD;&#xA;        private boolean running;&#xD;&#xA;        MainActivity.UdpClientHandler handler;&#xD;&#xA;        DatagramSocket socket;&#xD;&#xA;        InetAddress address;&#xD;&#xA;        public UdpClientThread(String addr, int port, MainActivity.UdpClientHandler handler) {&#xD;&#xA;            super();&#xD;&#xA;            dstAddress = addr;&#xD;&#xA;            dstPort = port;&#xD;&#xA;            this.handler = handler;&#xD;&#xA;        }&#xD;&#xA;        public void setRunning(boolean running){&#xD;&#xA;            this.running = running;&#xD;&#xA;        }&#xD;&#xA;        private void sendState(String state){&#xD;&#xA;            handler.sendMessage(&#xD;&#xA;                    Message.obtain(handler,&#xD;&#xA;                            MainActivity.UdpClientHandler.UPDATE_STATE, state));&#xD;&#xA;        }&#xD;&#xA;        @Override&#xD;&#xA;        public void run() {&#xD;&#xA;            sendState("connecting...");&#xD;&#xA;            running = true;&#xD;&#xA;            try {&#xD;&#xA;                socket = new DatagramSocket();&#xD;&#xA;                address = InetAddress.getByName(dstAddress);&#xD;&#xA;                // send request&#xD;&#xA;                byte[] buf = new byte[256];&#xD;&#xA;                DatagramPacket packet =&#xD;&#xA;                        new DatagramPacket(buf, buf.length, address, dstPort);&#xD;&#xA;                socket.send(packet);&#xD;&#xA;                sendState("connected");&#xD;&#xA;                // get response&#xD;&#xA;                packet = new DatagramPacket(buf, buf.length);&#xD;&#xA;                socket.receive(packet);&#xD;&#xA;                String line = new String(packet.getData(), 0, packet.getLength());&#xD;&#xA;                handler.sendMessage(&#xD;&#xA;                        Message.obtain(handler, MainActivity.UdpClientHandler.UPDATE_MSG, line));&#xD;&#xA;            } catch (SocketException e) {&#xD;&#xA;                e.printStackTrace();&#xD;&#xA;            } catch (UnknownHostException e) {&#xD;&#xA;                e.printStackTrace();&#xD;&#xA;            } catch (IOException e) {&#xD;&#xA;                e.printStackTrace();&#xD;&#xA;            } finally {&#xD;&#xA;                if(socket != null){&#xD;&#xA;                    socket.close();&#xD;&#xA;                    handler.sendEmptyMessage(MainActivity.UdpClientHandler.UPDATE_END);&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    }