    package com.example.testexternaldatabase;&#xD;&#xA;    import java.util.ArrayList;&#xD;&#xA;    import java.util.List;&#xD;&#xA;    import org.apache.http.NameValuePair;&#xD;&#xA;    import org.apache.http.message.BasicNameValuePair;&#xD;&#xA;    import org.json.JSONArray;&#xD;&#xA;    import org.json.JSONException;&#xD;&#xA;    import org.json.JSONObject;&#xD;&#xA;    import android.app.Activity;&#xD;&#xA;    import android.app.ProgressDialog;&#xD;&#xA;    import android.content.Intent;&#xD;&#xA;    import android.os.AsyncTask;&#xD;&#xA;    import android.os.Bundle;&#xD;&#xA;    import android.util.Log;&#xD;&#xA;    import android.view.View;&#xD;&#xA;    import android.widget.*;&#xD;&#xA;    public class EditTicketActivity extends Activity {&#xD;&#xA;    	EditText txtSubject;&#xD;&#xA;    	EditText txtType;&#xD;&#xA;    	EditText txtDesc;&#xD;&#xA;    	Button btnSave;&#xD;&#xA;    	Button btnDelete;&#xD;&#xA;    	String pid;&#xD;&#xA;    	// Progress Dialog&#xD;&#xA;    	private ProgressDialog pDialog;&#xD;&#xA;    	// JSON parser class&#xD;&#xA;    	JSONParser jsonParser = new JSONParser();&#xD;&#xA;    	static GetIPAddress getIPaddress = new GetIPAddress();&#xD;&#xA;    		&#xD;&#xA;    	// single product url&#xD;&#xA;    	private static String url_product_details = getIPaddress.getIP()+"get_message_details.php";;&#xD;&#xA;    	// url to update product&#xD;&#xA;    	private static String url_update_product = getIPaddress.getIP()+"update_message.php";&#xD;&#xA;    	&#xD;&#xA;    	// url to delete product&#xD;&#xA;    	private static String url_delete_product = getIPaddress.getIP()+"delete_message.php";&#xD;&#xA;    	// JSON Node names&#xD;&#xA;    	private static final String TAG_SUCCESS = "success";&#xD;&#xA;    	private static final String TAG_PRODUCT = "message";&#xD;&#xA;    	private static final String TAG_PID = "message_id";&#xD;&#xA;    	private static final String TAG_NAME = "subject";&#xD;&#xA;    	private static final String TAG_PRICE = "type";&#xD;&#xA;    	private static final String TAG_DESCRIPTION = "description";&#xD;&#xA;    	@Override&#xD;&#xA;    	public void onCreate(Bundle savedInstanceState) {&#xD;&#xA;    		super.onCreate(savedInstanceState);&#xD;&#xA;    		setContentView(R.layout.edit_ticket);&#xD;&#xA;    		//url_product_details = getIPaddress.getIP()+"get_message_details.php";&#xD;&#xA;    		//url_update_product = getIPaddress.getIP()+"update_message.php";&#xD;&#xA;    		//url_delete_product = getIPaddress.getIP()+"delete_message.php";&#xD;&#xA;    		&#xD;&#xA;    		// save button&#xD;&#xA;    		btnSave = (Button)findViewById(R.id.editticket_save);&#xD;&#xA;    		btnDelete = (Button)findViewById(R.id.editticket_delete);&#xD;&#xA;    		// getting product details from intent&#xD;&#xA;    		Intent i = getIntent();&#xD;&#xA;    		&#xD;&#xA;    		// getting product id (pid) from intent&#xD;&#xA;    		pid = i.getStringExtra(TAG_PID);&#xD;&#xA;    		// Getting complete product details in background thread&#xD;&#xA;    		new GetProductDetails().execute();&#xD;&#xA;    		// save button click event&#xD;&#xA;    		btnSave.setOnClickListener(new View.OnClickListener() {&#xD;&#xA;    			@Override&#xD;&#xA;    			public void onClick(View arg0) {&#xD;&#xA;    				// starting background task to update product&#xD;&#xA;    				new SaveProductDetails().execute();&#xD;&#xA;    			}&#xD;&#xA;    		});&#xD;&#xA;    		// Delete button click event&#xD;&#xA;    		btnDelete.setOnClickListener(new View.OnClickListener() {&#xD;&#xA;    			@Override&#xD;&#xA;    			public void onClick(View arg0) {&#xD;&#xA;    				// deleting product in background thread&#xD;&#xA;    				new DeleteProduct().execute();&#xD;&#xA;    			}&#xD;&#xA;    		});&#xD;&#xA;    	}&#xD;&#xA;    	/**&#xD;&#xA;    	 * Background Async Task to Get complete product details&#xD;&#xA;    	 * */&#xD;&#xA;    	class GetProductDetails extends AsyncTask<String, String, String> {&#xD;&#xA;    		/**&#xD;&#xA;    		 * Before starting background thread Show Progress Dialog&#xD;&#xA;    		 * */&#xD;&#xA;    		@Override&#xD;&#xA;    		protected void onPreExecute() {&#xD;&#xA;    			super.onPreExecute();&#xD;&#xA;    			pDialog = new ProgressDialog(EditTicketActivity.this);&#xD;&#xA;    			pDialog.setMessage("Loading Tickets. Please wait...");&#xD;&#xA;    			pDialog.setIndeterminate(false);&#xD;&#xA;    			pDialog.setCancelable(true);&#xD;&#xA;    			pDialog.show();&#xD;&#xA;    		}&#xD;&#xA;    		/**&#xD;&#xA;    		 * Getting product details in background thread&#xD;&#xA;    		 * */&#xD;&#xA;    		protected String doInBackground(String... params) {&#xD;&#xA;    			// updating UI from Background Thread&#xD;&#xA;    			runOnUiThread(new Runnable() {&#xD;&#xA;    				public void run() {&#xD;&#xA;    					// Check for success tag&#xD;&#xA;    					int success;&#xD;&#xA;    					try {&#xD;&#xA;    						// Building Parameters&#xD;&#xA;    						List<NameValuePair> params = new ArrayList<NameValuePair>();&#xD;&#xA;    						params.add(new BasicNameValuePair("pid", pid));&#xD;&#xA;    						// getting product details by making HTTP request&#xD;&#xA;    						// Note that product details url will use GET request&#xD;&#xA;    						JSONObject json = jsonParser.makeHttpRequest(&#xD;&#xA;    								url_product_details, "GET", params);&#xD;&#xA;    						// check your log for json response&#xD;&#xA;    						Log.d("Single Product Details", json.toString());&#xD;&#xA;    						&#xD;&#xA;    						// json success tag&#xD;&#xA;    						success = json.getInt(TAG_SUCCESS);&#xD;&#xA;    						if (success == 1) {&#xD;&#xA;    							// successfully received product details&#xD;&#xA;    							JSONArray messageObj = json&#xD;&#xA;    									.getJSONArray(TAG_PRODUCT); // JSON Array&#xD;&#xA;    							&#xD;&#xA;    							// get first product object from JSON Array&#xD;&#xA;    							JSONObject message = messageObj.getJSONObject(0);&#xD;&#xA;    							// product with this pid found&#xD;&#xA;    							// Edit Text&#xD;&#xA;    							txtSubject = (EditText) findViewById(R.id.editticket_subject);&#xD;&#xA;    							txtType = (EditText) findViewById(R.id.editticket_type);&#xD;&#xA;    							txtDesc = (EditText) findViewById(R.id.editticket_description);&#xD;&#xA;    							// display product data in EditText&#xD;&#xA;    							txtSubject.setText(message.getString(TAG_NAME));&#xD;&#xA;    							txtType.setText(message.getString(TAG_PRICE));&#xD;&#xA;    							txtDesc.setText(message.getString(TAG_DESCRIPTION));&#xD;&#xA;    						}else{&#xD;&#xA;    							// product with pid not found&#xD;&#xA;    						}&#xD;&#xA;    					} catch (JSONException e) {&#xD;&#xA;    						e.printStackTrace();&#xD;&#xA;    					}&#xD;&#xA;    				}&#xD;&#xA;    			});&#xD;&#xA;    			return null;&#xD;&#xA;    		}&#xD;&#xA;    		/**&#xD;&#xA;    		 * After completing background task Dismiss the progress dialog&#xD;&#xA;    		 * **/&#xD;&#xA;    		protected void onPostExecute(String file_url) {&#xD;&#xA;    			// dismiss the dialog once got all details&#xD;&#xA;    			pDialog.dismiss();&#xD;&#xA;    		}&#xD;&#xA;    	}&#xD;&#xA;    	/**&#xD;&#xA;    	 * Background Async Task to  Save product Details&#xD;&#xA;    	 * */&#xD;&#xA;    	class SaveProductDetails extends AsyncTask<String, String, String> {&#xD;&#xA;    		/**&#xD;&#xA;    		 * Before starting background thread Show Progress Dialog&#xD;&#xA;    		 * */&#xD;&#xA;    		@Override&#xD;&#xA;    		protected void onPreExecute() {&#xD;&#xA;    			super.onPreExecute();&#xD;&#xA;    			pDialog = new ProgressDialog(EditTicketActivity.this);&#xD;&#xA;    			pDialog.setMessage("Saving product ...");&#xD;&#xA;    			pDialog.setIndeterminate(false);&#xD;&#xA;    			pDialog.setCancelable(true);&#xD;&#xA;    			pDialog.show();&#xD;&#xA;    		}&#xD;&#xA;    		/**&#xD;&#xA;    		 * Saving product&#xD;&#xA;    		 * */&#xD;&#xA;    		protected String doInBackground(String... args) {&#xD;&#xA;    			// getting updated data from EditTexts&#xD;&#xA;    			String subject = txtSubject.getText().toString();&#xD;&#xA;    			String type = txtType.getText().toString();&#xD;&#xA;    			String description = txtDesc.getText().toString();&#xD;&#xA;    			// Building Parameters&#xD;&#xA;    			List<NameValuePair> params = new ArrayList<NameValuePair>();&#xD;&#xA;    			params.add(new BasicNameValuePair(TAG_PID, pid));&#xD;&#xA;    			params.add(new BasicNameValuePair(TAG_NAME, subject));&#xD;&#xA;    			params.add(new BasicNameValuePair(TAG_PRICE, type));&#xD;&#xA;    			params.add(new BasicNameValuePair(TAG_DESCRIPTION, description));&#xD;&#xA;    			// sending modified data through http request&#xD;&#xA;    			// Notice that update product url accepts POST method&#xD;&#xA;    			JSONObject json = jsonParser.makeHttpRequest(url_update_product,&#xD;&#xA;    					"POST", params);&#xD;&#xA;    			// check json success tag&#xD;&#xA;    			try {&#xD;&#xA;    				int success = json.getInt(TAG_SUCCESS);&#xD;&#xA;    				&#xD;&#xA;    				if (success == 1) {&#xD;&#xA;    					// successfully updated&#xD;&#xA;    					Intent i = getIntent();&#xD;&#xA;    					// send result code 100 to notify about product update&#xD;&#xA;    					setResult(100, i);&#xD;&#xA;    					finish();&#xD;&#xA;    				} else {&#xD;&#xA;    					// failed to update product&#xD;&#xA;    				}&#xD;&#xA;    			} catch (JSONException e) {&#xD;&#xA;    				e.printStackTrace();&#xD;&#xA;    			}&#xD;&#xA;    			return null;&#xD;&#xA;    		}&#xD;&#xA;    		/**&#xD;&#xA;    		 * After completing background task Dismiss the progress dialog&#xD;&#xA;    		 * **/&#xD;&#xA;    		protected void onPostExecute(String file_url) {&#xD;&#xA;    			// dismiss the dialog once product uupdated&#xD;&#xA;    			pDialog.dismiss();&#xD;&#xA;    		}&#xD;&#xA;    	}&#xD;&#xA;    	/*****************************************************************&#xD;&#xA;    	 * Background Async Task to Delete Product&#xD;&#xA;    	 * */&#xD;&#xA;    	class DeleteProduct extends AsyncTask<String, String, String> {&#xD;&#xA;    		/**&#xD;&#xA;    		 * Before starting background thread Show Progress Dialog&#xD;&#xA;    		 * */&#xD;&#xA;    		@Override&#xD;&#xA;    		protected void onPreExecute() {&#xD;&#xA;    			super.onPreExecute();&#xD;&#xA;    			pDialog = new ProgressDialog(EditTicketActivity.this);&#xD;&#xA;    			pDialog.setMessage("Deleting Product...");&#xD;&#xA;    			pDialog.setIndeterminate(false);&#xD;&#xA;    			pDialog.setCancelable(true);&#xD;&#xA;    			pDialog.show();&#xD;&#xA;    		}&#xD;&#xA;    		/**&#xD;&#xA;    		 * Deleting product&#xD;&#xA;    		 * */&#xD;&#xA;    		protected String doInBackground(String... args) {&#xD;&#xA;    			// Check for success tag&#xD;&#xA;    			int success;&#xD;&#xA;    			try {&#xD;&#xA;    				// Building Parameters&#xD;&#xA;    				List<NameValuePair> params = new ArrayList<NameValuePair>();&#xD;&#xA;    				params.add(new BasicNameValuePair("pid", pid));&#xD;&#xA;    				// getting product details by making HTTP request&#xD;&#xA;    				JSONObject json = jsonParser.makeHttpRequest(&#xD;&#xA;    						url_delete_product, "POST", params);&#xD;&#xA;    				// check your log for json response&#xD;&#xA;    				Log.d("Delete Product", json.toString());&#xD;&#xA;    				&#xD;&#xA;    				// json success tag&#xD;&#xA;    				success = json.getInt(TAG_SUCCESS);&#xD;&#xA;    				if (success == 1) {&#xD;&#xA;    					// product successfully deleted&#xD;&#xA;    					// notify previous activity by sending code 100&#xD;&#xA;    					Intent i = getIntent();&#xD;&#xA;    					// send result code 100 to notify about product deletion&#xD;&#xA;    					setResult(100, i);&#xD;&#xA;    					finish();&#xD;&#xA;    				}&#xD;&#xA;    			} catch (JSONException e) {&#xD;&#xA;    				e.printStackTrace();&#xD;&#xA;    			}&#xD;&#xA;    			return null;&#xD;&#xA;    		}&#xD;&#xA;    		/**&#xD;&#xA;    		 * After completing background task Dismiss the progress dialog&#xD;&#xA;    		 * **/&#xD;&#xA;    		protected void onPostExecute(String file_url) {&#xD;&#xA;    			// dismiss the dialog once product deleted&#xD;&#xA;    			pDialog.dismiss();&#xD;&#xA;    		}&#xD;&#xA;    	}&#xD;&#xA;    }