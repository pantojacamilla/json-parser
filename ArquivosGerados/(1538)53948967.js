    var data_ = {&#xD;&#xA;        "webservice_status": {&#xD;&#xA;            "status": "SUCCESS",&#xD;&#xA;            "message": ""&#xD;&#xA;        },&#xD;&#xA;        "tableData": [{&#xD;&#xA;                "type_id": 553,&#xD;&#xA;                "catDesc": "First Description",&#xD;&#xA;                "myDataDesc": "First unordered list element of first description",&#xD;&#xA;                "toolTip": "First unordered list element of first description",&#xD;&#xA;                "isViewable": "N"&#xD;&#xA;            },&#xD;&#xA;            {&#xD;&#xA;                "type_id": 554,&#xD;&#xA;                "catDesc": "First Description",&#xD;&#xA;                "myDataDesc": "Second unordered list element of first description",&#xD;&#xA;                "toolTip": "Second unordered list element of first description",&#xD;&#xA;                "isViewable": "N"&#xD;&#xA;            },&#xD;&#xA;            {&#xD;&#xA;                "type_id": 220,&#xD;&#xA;                "catDesc": "Second Description",&#xD;&#xA;                "myDataDesc": "First unordered list element of second description",&#xD;&#xA;                "toolTip": "First unordered list element of second description",&#xD;&#xA;                "isViewable": "Y"&#xD;&#xA;            },&#xD;&#xA;            {&#xD;&#xA;                "type_id": 201,&#xD;&#xA;                "catDesc": "Second Description",&#xD;&#xA;                "myDataDesc": "Second unordered list element of second description",&#xD;&#xA;                "toolTip": "Second unordered list element of second description",&#xD;&#xA;                "isViewable": "Y"&#xD;&#xA;            },&#xD;&#xA;            {&#xD;&#xA;                "type_id": 202,&#xD;&#xA;                "catDesc": "Second Description",&#xD;&#xA;                "myDataDesc": "3rd unordered list element of second description",&#xD;&#xA;                "toolTip": "3rd unordered list element of second description",&#xD;&#xA;                "isViewable": "Y"&#xD;&#xA;            },&#xD;&#xA;            {&#xD;&#xA;                "type_id": 255,&#xD;&#xA;                "catDesc": "Second Description",&#xD;&#xA;                "myDataDesc": "4th unordered list element of second description",&#xD;&#xA;                "toolTip": "4th unordered list element of second description",&#xD;&#xA;                "isViewable": "Y"&#xD;&#xA;            },&#xD;&#xA;            {&#xD;&#xA;                "type_id": 250,&#xD;&#xA;                "catDesc": "Second Description",&#xD;&#xA;                "myDataDesc": "5th unordered list element of second description",&#xD;&#xA;                "toolTip": "5th unordered list element of second description",&#xD;&#xA;                "isViewable": "Y"&#xD;&#xA;            },&#xD;&#xA;            {&#xD;&#xA;                "type_id": 300,&#xD;&#xA;                "catDesc": "Third Description",&#xD;&#xA;                "myDataDesc": "1st unordered list element of third description",&#xD;&#xA;                "toolTip": "1st unordered list element of third description",&#xD;&#xA;                "isViewable": "Y"&#xD;&#xA;            },&#xD;&#xA;            {&#xD;&#xA;                "type_id": 1,&#xD;&#xA;                "catDesc": "Fourth Description",&#xD;&#xA;                "myDataDesc": "1st unordered list element of 4th description",&#xD;&#xA;                "toolTip": "1st unordered list element of 4th description",&#xD;&#xA;                "isViewable": "Y"&#xD;&#xA;            }&#xD;&#xA;        ]&#xD;&#xA;    }&#xD;&#xA;    var json = data_.tableData;&#xD;&#xA;    const data = json.reduce((result, current) => {&#xD;&#xA;        const entry = result.find(({&#xD;&#xA;            catDesc&#xD;&#xA;        }) => current.catDesc === catDesc)&#xD;&#xA;        const {&#xD;&#xA;            catDesc,&#xD;&#xA;            myDataDesc,&#xD;&#xA;            toolTip,&#xD;&#xA;            isViewable&#xD;&#xA;        } = current&#xD;&#xA;        if (entry) {&#xD;&#xA;            entry.myDataDesc.push(myDataDesc);&#xD;&#xA;            entry.toolTip.push(toolTip);&#xD;&#xA;            entry.isViewable.push(isViewable);&#xD;&#xA;        } else {&#xD;&#xA;            result.push({&#xD;&#xA;                catDesc,&#xD;&#xA;                myDataDesc: [myDataDesc],&#xD;&#xA;                toolTip: [toolTip],&#xD;&#xA;                isViewable: [isViewable]&#xD;&#xA;            })&#xD;&#xA;        }&#xD;&#xA;        return result&#xD;&#xA;    }, [])&#xD;&#xA;    console.log(data);&#xD;&#xA;    var outputtable = "";&#xD;&#xA;    for (var i = 0; i < data.length; i++) {&#xD;&#xA;        var header = "";&#xD;&#xA;        header += '<tr height="30"><td width="33%" align="left"><u><b>' + data[i].catDesc + '</b></u><br></td></tr><tr height="5px"></tr>';&#xD;&#xA;        var contents = "";&#xD;&#xA;        for (var j = 0; j < data[i].myDataDesc.length; j++) {&#xD;&#xA;            contents += '<tr><td title="' + data[i].toolTip[j] +&#xD;&#xA;                '" width="33%" style="padding-left:40px;"><ul style="list-style-type:  disc"><li>' + data[i].myDataDesc[j] + '  </li>';&#xD;&#xA;            contents += '<ul></td><td width="5%" align="left"><img src=""></td><td><input id="toHide"   class=" hideClass" value="View" type="button"></td></tr>';&#xD;&#xA;        }&#xD;&#xA;        outputtable += header + contents&#xD;&#xA;    }&#xD;&#xA;    $('#populateTable').append(outputtable);&#xD;&#xA;    for (var a = 0; a < data.length; a++) {&#xD;&#xA;        for (var b = 0; b < data[a].isViewable.length; b++) {&#xD;&#xA;            console.log(data[a].isViewable[b]);&#xD;&#xA;            if (data[a].isViewable[b] == "N") {&#xD;&#xA;                $("#toHide").hide();&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;    $('.hideClass').bind('click', function() {&#xD;&#xA;        alert("button clicked");&#xD;&#xA;        /*$('#wrapper').dialog({&#xD;&#xA;            autoOpen: false,&#xD;&#xA;            title: 'catDesc of clicked view button should be here !',&#xD;&#xA;            maxHeight: 500,&#xD;&#xA;            width: 1000,&#xD;&#xA;            height: 400,&#xD;&#xA;            modal: true,&#xD;&#xA;            buttons: {&#xD;&#xA;                "Print": function() {&#xD;&#xA;                    $(this).dialog("close");&#xD;&#xA;                },&#xD;&#xA;                Download: function() {&#xD;&#xA;                    $(this).dialog("close");&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;        });&#xD;&#xA;        $('#wrapper').dialog('open');*/&#xD;&#xA;    });