    window.addEventListener("load", draw);&#xD;&#xA;     &#xD;&#xA;     function draw() {&#xD;&#xA;      var canvas = document.getElementById("balls"), // Get canvas&#xD;&#xA;          ctx = canvas.getContext("2d"); // Context&#xD;&#xA;          &#xD;&#xA;      canvas.width = document.body.clientWidth; // Set canvas width&#xD;&#xA;      canvas.height = document.documentElement.scrollHeight; // Height&#xD;&#xA;          var cW = canvas.width, cH = canvas.height; // Save in vars&#xD;&#xA;          ctx.fillStyle = "#fff022"; // Paint background&#xD;&#xA;          ctx.fillRect(0, 0, cW, cH); // Coordinates to paint&#xD;&#xA;          var arrayOfBalls = createBalls(); // create all balls&#xD;&#xA;          setPositions(arrayOfBalls, cW, cH);&#xD;&#xA;          arrayOfBalls.forEach(ball => { // iterate balls to draw&#xD;&#xA;          ctx.beginPath(); // start the paint&#xD;&#xA;          ctx.fillStyle = ball.color;&#xD;&#xA;          ctx.arc(ball.x, ball.y, ball.radius, 0, (Math.PI/180) * 360, false); // draw the circle&#xD;&#xA;          ctx.fill(); // fill&#xD;&#xA;          ctx.closePath(); // end the paint&#xD;&#xA;          });&#xD;&#xA;     }&#xD;&#xA;     function Ball() {&#xD;&#xA;      this.x = 0; // x position of Ball&#xD;&#xA;      this.y = 0; // y position of Ball&#xD;&#xA;      this.radius = Math.floor(Math.random() * ( 30 - 10 + 1) + 10);&#xD;&#xA;      this.color = "";&#xD;&#xA;     }&#xD;&#xA;     &#xD;&#xA;     Ball.prototype.setColor = function(){&#xD;&#xA;     for(var j = 0, hex = "0123456789ABCDEF", max = hex.length,&#xD;&#xA;        random, str = ""; j <= 6; j++, random = Math.floor(Math.random() * max), str += hex[random])&#xD;&#xA;        this.color = "#" + str;&#xD;&#xA;     };&#xD;&#xA;      &#xD;&#xA;     function random(val, min) {&#xD;&#xA;      return Math.floor(Math.random() * val + min); // Random number&#xD;&#xA;     }&#xD;&#xA;     &#xD;&#xA;     function checkSeparation(value, radius, toCompare) {&#xD;&#xA;       var min = value - radius, // Min border of circle&#xD;&#xA;           max = value + radius; // Max border of circle&#xD;&#xA;           // Why ? e.g => x position of circle + this radius it will   be its right edge &#xD;&#xA;           for(; min <= max; min++) {&#xD;&#xA;           if(toCompare.includes(min)) return false;&#xD;&#xA;           /*&#xD;&#xA;           Since all the positions previously obtained, I add them to          the array, in order to have a reference when verifying the          other positions and that they do NOT collide.&#xD;&#xA;           Here I check if they collide.&#xD;&#xA;           In the range of:&#xD;&#xA;           [pos x - its radius, pos x + its radius]&#xD;&#xA;           */&#xD;&#xA;           }&#xD;&#xA;       return true;   // If they never collided, it returns true&#xD;&#xA;     }&#xD;&#xA;     &#xD;&#xA;     function createBalls() { &#xD;&#xA;      var maxBalls = 50, // number of balls&#xD;&#xA;          balls = []; // array of balls&#xD;&#xA;           &#xD;&#xA;         for(var j = 0; j < maxBalls; j++) { // create 50 balls&#xD;&#xA;         var newBall = new Ball(); // create ball &#xD;&#xA;             newBall.setColor(); // set the ball color&#xD;&#xA;             balls.push(newBall); //push the ball to the array of balls&#xD;&#xA;         }&#xD;&#xA;         return balls; // return all balls to draw later&#xD;&#xA;     }&#xD;&#xA;     &#xD;&#xA;     &#xD;&#xA;     function setPositions(balls, canvasW, canvasH) {&#xD;&#xA;      var savedPosX = [], // to save x pos of balls&#xD;&#xA;          savedPosY = []; // to save y pos of balls&#xD;&#xA;      for(var start = 0, max = balls.length; start < max; start++) {&#xD;&#xA;       var current = balls[start], // current ball&#xD;&#xA;           randomX = random(canvasW, current.radius), // get random value for x pos&#xD;&#xA;           randomY = random(canvasH, current.radius); // get random value for y pos&#xD;&#xA;           if(checkSeparation(randomX, current.radius, savedPosX)) {&#xD;&#xA;             current.x = randomX; // If it position, along with your radio does not touch another circle, I add the position&#xD;&#xA;           } else { &#xD;&#xA;             // i--; continue;&#xD;&#xA;             console.log("X: The above code causes an infinite loop");&#xD;&#xA;           }&#xD;&#xA;           if(checkSeparation(randomY, current.radius, savedPosY)) {&#xD;&#xA;             current.y = randomY;&#xD;&#xA;           } else {&#xD;&#xA;             // i--; continue;&#xD;&#xA;             console.log("Y: The above code causes an infinite loop");&#xD;&#xA;           }&#xD;&#xA;      }&#xD;&#xA;     }