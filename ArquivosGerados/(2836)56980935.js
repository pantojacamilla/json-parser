    <template lang="pug">&#xD;&#xA;      .wrapper&#xD;&#xA;        .animated.fadeIn&#xD;&#xA;          b-container(fluid='')&#xD;&#xA;            b-row.my-1&#xD;&#xA;              b-col(sm='3')&#xD;&#xA;                label(:for='`type-key`') companyName&#xD;&#xA;              b-col(sm='9')&#xD;&#xA;                b-form-select(v-model='item.bg_member_id' :options="companyList")&#xD;&#xA;              b-col(sm='3')&#xD;&#xA;                label(:for='`type-key`') code&#xD;&#xA;              b-col(sm='9')&#xD;&#xA;                b-form-input(v-model='item.code')&#xD;&#xA;            b-button(size='sm', @click='addPowerGeneratorGroup', variant="primary")&#xD;&#xA;              | Add power_generator_group&#xD;&#xA;            template(v-for='(group, group_index) in item.power_generator_groups')&#xD;&#xA;              b-card(&#xD;&#xA;                header-tag="header"&#xD;&#xA;                footer-tag="footer"&#xD;&#xA;                )&#xD;&#xA;                div(slot="header")&#xD;&#xA;                  i.fa.fa-align-justify&#xD;&#xA;                  strong power_generator_groups&#xD;&#xA;                  button.btn.btn-default.btn-sm(type='button' @click='deletePowerGeneratorGroup(group_index)')&#xD;&#xA;                    span.fa.fa-trash-o&#xD;&#xA;                div&#xD;&#xA;                b-row.my-1&#xD;&#xA;                  b-col(sm='3')&#xD;&#xA;                    label(:for='`type-key`')&#xD;&#xA;                      | code&#xD;&#xA;                  b-col(sm='9')&#xD;&#xA;                    b-form-input(v-model='group.code')&#xD;&#xA;                  b-col(sm='3')&#xD;&#xA;                    label(:for='`type-key`') group name&#xD;&#xA;                  b-col(sm='9')&#xD;&#xA;                    b-form-input(v-model='group.name')&#xD;&#xA;                  b-col(sm='3')&#xD;&#xA;                    label(:for='`type-key`') contract number&#xD;&#xA;                  b-col(sm='9')&#xD;&#xA;                    b-form-input(v-model='group.contract_number')&#xD;&#xA;                  b-container.bv-example-row(fluid='')&#xD;&#xA;                    b-button(size='sm', @click='addPowerGenerator(group_index)', variant="primary")&#xD;&#xA;                      | add power_generator&#xD;&#xA;                  b-card(&#xD;&#xA;                    header-tag="header"&#xD;&#xA;                    footer-tag="footer"&#xD;&#xA;                    )&#xD;&#xA;                    div(slot="header")&#xD;&#xA;                      i.fa.fa-align-justify&#xD;&#xA;                      strong power_generators&#xD;&#xA;                      b-table(small v-bind:item="group.power_generators" v-bind:fields="fields" fixed responsive)&#xD;&#xA;                        template(v-for="field in fields" :slot="field.key" slot-scope="contract")&#xD;&#xA;                          template(v-if="field.key == 'actions'")&#xD;&#xA;                            b-button(size='sm', @click='deletePowerGenerator(group_index, contract.index)', variant="primary")&#xD;&#xA;                              | Del&#xD;&#xA;                          template(v-else)&#xD;&#xA;                            b-form-input(:type='types[field.key]' v-model = 'contract.item[field.key]')&#xD;&#xA;            b-button(size='sm', @click='save', variant="primary")&#xD;&#xA;              | Save&#xD;&#xA;    </template>&#xD;&#xA;    <script>&#xD;&#xA;    import Vue from 'vue';&#xD;&#xA;      export default {&#xD;&#xA;        props: {&#xD;&#xA;          item: {&#xD;&#xA;            type: Object,&#xD;&#xA;            required: true,&#xD;&#xA;            default: () => {&#xD;&#xA;            }&#xD;&#xA;          },&#xD;&#xA;          companyList: Array&#xD;&#xA;        },&#xD;&#xA;        data() {&#xD;&#xA;          return {&#xD;&#xA;            companyId: null,&#xD;&#xA;            code: null,&#xD;&#xA;            name: null,&#xD;&#xA;            contract_number: null,&#xD;&#xA;            fields: [&#xD;&#xA;              {key: 'actions', label: '' },&#xD;&#xA;              {key: 'code', label: 'code', sortable: true, sortDirection: 'desc'},&#xD;&#xA;              {key: 'name', label: 'name', sortable: true, class: 'text-center'},&#xD;&#xA;              {key: 'contract_number', label: 'contractNo'},&#xD;&#xA;              {key: 'supply_max', label: 'maxunit'}&#xD;&#xA;            ],&#xD;&#xA;            types: {&#xD;&#xA;              code: 'text',&#xD;&#xA;              name: 'text',&#xD;&#xA;              contract_number: 'text',&#xD;&#xA;              supply_max: 'number'&#xD;&#xA;            },&#xD;&#xA;            items: &#xD;&#xA;            {}&#xD;&#xA;          }&#xD;&#xA;        },&#xD;&#xA;        mounted() {&#xD;&#xA;        },&#xD;&#xA;        computed: {},&#xD;&#xA;        methods: {&#xD;&#xA;        addPowerGenerator(index) {&#xD;&#xA;          console.log(index)&#xD;&#xA;          console.log(this.item)&#xD;&#xA;          const pgg = this.item.power_generator_groups[index];&#xD;&#xA;          const pgs = pgg.power_generators || Vue.set(pgg, 'power_generators', []);&#xD;&#xA;          pgs.push(&#xD;&#xA;            {&#xD;&#xA;              "code": "",&#xD;&#xA;              "name": "",&#xD;&#xA;              "contract_number": "",&#xD;&#xA;              "supply_max": "",&#xD;&#xA;            }&#xD;&#xA;          )&#xD;&#xA;        },&#xD;&#xA;        addPowerGeneratorGroup() {&#xD;&#xA;          const pggs = this.item.power_generator_groups || Vue.set(this.item, 'power_generator_groups', []);&#xD;&#xA;          pggs.push(&#xD;&#xA;            {&#xD;&#xA;              "resource_id": this.item.id,&#xD;&#xA;              "name": "",&#xD;&#xA;              "code": "",&#xD;&#xA;              "contract_number": "",&#xD;&#xA;              "power_generators": []&#xD;&#xA;            }&#xD;&#xA;          )&#xD;&#xA;        },&#xD;&#xA;          deletePowerGenerator(group_index, field_index) {&#xD;&#xA;            this.item.power_generator_groups[group_index].power_generators.splice(field_index, 1);&#xD;&#xA;          },&#xD;&#xA;          deletePowerGeneratorGroup(group_index) {&#xD;&#xA;            this.item.power_generator_groups.splice(group_index, 1);&#xD;&#xA;          },&#xD;&#xA;          save: function () {&#xD;&#xA;            this.$parent.save(this.item)&#xD;&#xA;          }&#xD;&#xA;        }&#xD;&#xA;      }&#xD;&#xA;    </script>