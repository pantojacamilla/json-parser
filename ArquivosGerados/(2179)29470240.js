    (function ( $ ) {&#xD;&#xA;     &#xD;&#xA;        $.fn.presspull = function( options ) {&#xD;&#xA;     &#xD;&#xA;            // This is the defaults settings which can be changed via the plugin call.&#xD;&#xA;            var settings = $.extend({&#xD;&#xA;                // These are the defaults.&#xD;&#xA;                template	: 	Handlebars.compile( $('#pressTemplate').html() ),&#xD;&#xA;                placeHolder : 	$("#press-grid"),&#xD;&#xA;                addMoreBtn	: 	$("a#press-show-more"),&#xD;&#xA;                segment 	: 	4,&#xD;&#xA;                dataSource 	: 	[]&#xD;&#xA;                 &#xD;&#xA;            }, options ); // end settings&#xD;&#xA;            // non mutable elements which can not be changed from the plugin call.&#xD;&#xA;            var cache = {&#xD;&#xA;            		pressArray	: new Array(),&#xD;&#xA;            		compileCount: 0,&#xD;&#xA;            		segmentItt	: 0&#xD;&#xA;            }; // end cache&#xD;&#xA;    /*============================================================================&#xD;&#xA;      â€“ Compile Source: function to build and sort the combined press.&#xD;&#xA;    ==============================================================================*/&#xD;&#xA;            function compileSource() {&#xD;&#xA;            	// check if the data source contains anything.&#xD;&#xA;            	if ( settings.dataSource.length > 0 ) { &#xD;&#xA;            		// for each json file in the data source do...&#xD;&#xA;    	        	$.each( settings.dataSource , function( k, v ) {&#xD;&#xA;    	        		// get the data &#xD;&#xA;    	        		$.get( v, function( data, status, xhr ){&#xD;&#xA;    	        			// next loop through the output&#xD;&#xA;    	        			$.each( data, function( i, e ){&#xD;&#xA;    	        				// add each entry to the pressArray&#xD;&#xA;    	        				cache.pressArray.push( e );&#xD;&#xA;    	        			}); // end each&#xD;&#xA;    	        		// once done do..&#xD;&#xA;    	        		}).done( function() {&#xD;&#xA;    	        			// compile count increments for every data source&#xD;&#xA;    						cache.compileCount ++;&#xD;&#xA;    						if ( cache.compileCount == settings.dataSource.length ) { &#xD;&#xA;    							cache.pressArray.sort( function( a, b ) {&#xD;&#xA;    								var c = new Date(a.date),&#xD;&#xA;    									d = new Date(b.date);&#xD;&#xA;    					&#xD;&#xA;    								return c>d ? -1 : c<d ? 1 : 0;&#xD;&#xA;    							}); // end sort&#xD;&#xA;    							// after compiling and sorting the new list we return it.&#xD;&#xA;    						}; // end if&#xD;&#xA;    					// if there is a failure in getting the data it's logged as following     			&#xD;&#xA;    	        		}).fail( function() {&#xD;&#xA;        					console.log("Failed to get data from: " + v );&#xD;&#xA;      					}); // end get.done&#xD;&#xA;    	        	}); // end each&#xD;&#xA;            	} else {&#xD;&#xA;            		console.log("Source files not found!");&#xD;&#xA;            	};&#xD;&#xA;            	return console.log( cache.pressArray);&#xD;&#xA;            }; // end compileSource&#xD;&#xA;     &#xD;&#xA;        }; // end $.fn.presspull&#xD;&#xA;     &#xD;&#xA;    }( jQuery ));