    import {&#xD;&#xA;      Observable,&#xD;&#xA;      Subject,&#xD;&#xA;      of ,&#xD;&#xA;      from&#xD;&#xA;    } from 'rxjs';&#xD;&#xA;    import {&#xD;&#xA;      map,&#xD;&#xA;      merge,&#xD;&#xA;      flatMap&#xD;&#xA;    } from 'rxjs/operators';&#xD;&#xA;    function apiUri(albumId: String) {&#xD;&#xA;      return `https://jsonplaceholder.typicode.com/albums/${albumId}`&#xD;&#xA;    }&#xD;&#xA;    const albums$ = new Subject < String[] > ();&#xD;&#xA;    const responseStream = albums$.pipe(&#xD;&#xA;      flatMap(albumIds => albumIds),&#xD;&#xA;      flatMap(id => from(fetch(apiUri(id)))),&#xD;&#xA;      flatMap(resp => resp.json()),&#xD;&#xA;      /* I'm in the dark on how to "merge" it back into an Observable<String[]> */&#xD;&#xA;    );&#xD;&#xA;    responseStream.subscribe(resp => console.log(resp))&#xD;&#xA;    const randomCodes1 = ['5', '1', '3'];&#xD;&#xA;    albums$.next(randomCodes1);