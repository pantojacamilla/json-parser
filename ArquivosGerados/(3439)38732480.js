    var length = 10000000; //  ten millions;&#xD;&#xA;    var arr = [];&#xD;&#xA;    for (let i = length; i > 0; i--) {&#xD;&#xA;      // random array&#xD;&#xA;      arr.push(parseInt(Math.random() * 1000000000));&#xD;&#xA;    }&#xD;&#xA;    function quickSort(arr, leftPos, rightPos, arrLength) {&#xD;&#xA;      let initialLeftPos = leftPos;&#xD;&#xA;      let initialRightPos = rightPos;&#xD;&#xA;      let direction = true;&#xD;&#xA;      let pivot = rightPos;&#xD;&#xA;      while ((leftPos - rightPos) < 0) {&#xD;&#xA;        if (direction) {&#xD;&#xA;          if (arr[pivot] < arr[leftPos]) {&#xD;&#xA;            quickSort.swap(arr, pivot, leftPos);&#xD;&#xA;            pivot = leftPos;&#xD;&#xA;            rightPos--;&#xD;&#xA;            direction = !direction;&#xD;&#xA;          } else&#xD;&#xA;            leftPos++;&#xD;&#xA;        } else {&#xD;&#xA;          if (arr[pivot] <= arr[rightPos]) {&#xD;&#xA;            rightPos--;&#xD;&#xA;          } else {&#xD;&#xA;            quickSort.swap(arr, pivot, rightPos);&#xD;&#xA;            leftPos++;&#xD;&#xA;            pivot = rightPos;&#xD;&#xA;            direction = !direction;&#xD;&#xA;          }&#xD;&#xA;        }&#xD;&#xA;      }&#xD;&#xA;      if (pivot - 1 > initialLeftPos) {&#xD;&#xA;        quickSort(arr, initialLeftPos, pivot - 1, arrLength);&#xD;&#xA;      }&#xD;&#xA;      if (pivot + 1 < initialRightPos) {&#xD;&#xA;        quickSort(arr, pivot + 1, initialRightPos, arrLength);&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;    quickSort.swap = (arr, el1, el2) => {&#xD;&#xA;      let swapedElem = arr[el1];&#xD;&#xA;      arr[el1] = arr[el2];&#xD;&#xA;      arr[el2] = swapedElem;&#xD;&#xA;    }&#xD;&#xA;    arrLength = arr.length;&#xD;&#xA;    console.time('measure');&#xD;&#xA;    quickSort(arr, 0, arrLength - 1, arrLength);&#xD;&#xA;    console.log(arr[0], arr[1]);&#xD;&#xA;    console.timeEnd('measure');