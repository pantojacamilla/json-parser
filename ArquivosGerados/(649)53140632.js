    // Asynchronous call&#xD;&#xA;    Meteor.call('foo', 1, 2, (error, result) => { ... });&#xD;&#xA;    // Synchronous call&#xD;&#xA;    const result = Meteor.call('foo', 1, 2);&#xD;&#xA;    /*&#xD;&#xA;    On the client, if you do not pass a callback and you are not &#xD;&#xA;    inside a stub, call will return undefined, and you will have &#xD;&#xA;    no way to get the return value of the method. That is because&#xD;&#xA;    the client doesnâ€™t have fibers, so there is not actually any &#xD;&#xA;    way it can block on the remote execution of a method.&#xD;&#xA;    */