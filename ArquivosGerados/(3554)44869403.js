    var ltlg = [];&#xD;&#xA;    var sLat = parseFloat(35.2219971);&#xD;&#xA;    var sLng = parseFloat(-101.83129689999998);&#xD;&#xA;    var sLatLng = {lat: sLat, lng: sLng};&#xD;&#xA;         &#xD;&#xA;    var locLat;&#xD;&#xA;    var locLng;&#xD;&#xA;    var locLatLng = [];&#xD;&#xA;    $.getJSON("file.json",function(data){&#xD;&#xA;       &#xD;&#xA;       	if(sLat && sLng) {&#xD;&#xA;    	    $.each(data, function(x, y){&#xD;&#xA;    	    	locLat = data[x].Address.Location.Latitude;&#xD;&#xA;    	    	locLng = data[x].Address.Location.Longitude;&#xD;&#xA;    	    	//locLatLng.push({lat: locLat, lng: locLng});&#xD;&#xA;    		    var service = new google.maps.DistanceMatrixService;&#xD;&#xA;    		     &#xD;&#xA;    		    service.getDistanceMatrix({&#xD;&#xA;    		     	origins: [sLatLng],&#xD;&#xA;    		     	destinations: [{lat: locLat, lng: locLng}],&#xD;&#xA;    		        travelMode: 'DRIVING',&#xD;&#xA;    		        unitSystem: google.maps.UnitSystem.IMPERIAL,&#xD;&#xA;    		        avoidHighways: false,&#xD;&#xA;    		        avoidTolls: false&#xD;&#xA;    		    }, function(response, status) {&#xD;&#xA;    		     	if (status !== 'OK') {       	&#xD;&#xA;    		          	console.log('status is ' + status);        &#xD;&#xA;    		        } else {&#xD;&#xA;    		        	var distance = response.rows[0].elements[0].distance.value;&#xD;&#xA;    		        	var miles = response.rows[0].elements[0].distance.text;&#xD;&#xA;    		        	var time = response.rows[0].elements[0].duration.text;&#xD;&#xA;    		        	addData(distance, miles, time);&#xD;&#xA;    		        }&#xD;&#xA;    		    });&#xD;&#xA;    		    function addData(distance, miles, time) {&#xD;&#xA;    		    	data[x]["distance"] = distance;&#xD;&#xA;    		      	data[x]["miles"] = miles;&#xD;&#xA;    		        data[x]["time"] = time;&#xD;&#xA;    		    }&#xD;&#xA;    		    &#xD;&#xA;    	    });&#xD;&#xA;    	    console.log(JSON.stringify(data));&#xD;&#xA;    	} else {&#xD;&#xA;    		console.log('no query');&#xD;&#xA;    	}&#xD;&#xA;    });