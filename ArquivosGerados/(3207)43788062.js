    var c=document.getElementById('game'),&#xD;&#xA;		canvasX=c.offsetLeft,&#xD;&#xA;		canvasY=c.offsetTop,&#xD;&#xA;		ctx=c.getContext('2d');&#xD;&#xA;    var curvedRect = function(id, x, y, w, h) {&#xD;&#xA;	    this.id = id;&#xD;&#xA;	    this.x = x;&#xD;&#xA;	    this.y = y;&#xD;&#xA;	    this.w = w;&#xD;&#xA;	    this.h = h;&#xD;&#xA;	    this.selected = false;&#xD;&#xA;    }&#xD;&#xA;    curvedRect.prototype.makeCurvedRect = function() {&#xD;&#xA;	    ctx.beginPath();&#xD;&#xA;	    ctx.lineWidth='8';&#xD;&#xA;	    ctx.strokeStyle='white';&#xD;&#xA;	    ctx.moveTo(this.x+10, this.y);&#xD;&#xA;	    ctx.lineTo(this.x+this.w-10, this.y);&#xD;&#xA;	    ctx.quadraticCurveTo(this.x+this.w, this.y, this.x+this.w, this.y+10);&#xD;&#xA;	    ctx.lineTo(this.x+this.w, this.y+this.h-10);&#xD;&#xA;	    ctx.quadraticCurveTo(this.x+this.w, this.y+this.h, this.x+this.w-10, this.y+this.h);&#xD;&#xA;	    ctx.lineTo(this.x+10, this.y+this.h);&#xD;&#xA;	    ctx.quadraticCurveTo(this.x, this.y+this.h, this.x, this.y+this.h-10);&#xD;&#xA;	    ctx.lineTo(this.x, this.y+10);&#xD;&#xA;	    ctx.quadraticCurveTo(this.x, this.y, this.x+10, this.y);&#xD;&#xA;	    ctx.stroke();&#xD;&#xA;	    if (this.selected) {&#xD;&#xA;	    	alert('When hovered over, I would like this box to grow slightly over a short period of time (say a second). When the mouse is removed I would like it to shrink back.')&#xD;&#xA;    	}&#xD;&#xA;    }&#xD;&#xA;    curvedRect.prototype.hitTest = function(x, y) {&#xD;&#xA;	return (x >= this.x) && (x <= (this.w+this.x)) && (y >= this.y) && (y <= (this.h+this.y));&#xD;&#xA;    }&#xD;&#xA;    var Paint = function(element) {&#xD;&#xA;    	this.element = element;&#xD;&#xA;    	this.shapes = [];&#xD;&#xA;    }&#xD;&#xA;    Paint.prototype.addShape = function(shape) {&#xD;&#xA;    	this.shapes.push(shape);&#xD;&#xA;    }&#xD;&#xA;    Paint.prototype.render = function() {&#xD;&#xA;    	this.element.w = this.element.w;&#xD;&#xA;    	for (var i=0; i<this.shapes.length; i++) {&#xD;&#xA;    		this.shapes[i].makeCurvedRect();&#xD;&#xA;    	}&#xD;&#xA;    }&#xD;&#xA;    Paint.prototype.setSelected = function(shape) {&#xD;&#xA;    	for (var i=0; i<this.shapes.length; i++) {&#xD;&#xA;    		this.shapes[i].selected = this.shapes[i] == shape;&#xD;&#xA;    	}&#xD;&#xA;    	this.render();&#xD;&#xA;    }&#xD;&#xA;    Paint.prototype.select = function(x, y) {&#xD;&#xA;    	for (var i=this.shapes.length-1; i >= 0; i--) {&#xD;&#xA;    		if (this.shapes[i].hitTest(x, y)) {&#xD;&#xA;    			return this.shapes[i];&#xD;&#xA;    		}&#xD;&#xA;    	}&#xD;&#xA;    	return null&#xD;&#xA;    }&#xD;&#xA;    var paint = new Paint(c);&#xD;&#xA;    var img1 = new curvedRect('1', 200, 55, 150, 150);&#xD;&#xA;    var img2 = new curvedRect('2', 375, 55, 150, 150);&#xD;&#xA;    var img3 = new curvedRect('3', 200, 230, 150, 150);&#xD;&#xA;    var img4 = new curvedRect('4', 375, 230, 150, 150);&#xD;&#xA;    paint.addShape(img1);&#xD;&#xA;    paint.addShape(img2);&#xD;&#xA;    paint.addShape(img3);&#xD;&#xA;    paint.addShape(img4);&#xD;&#xA;    paint.render();&#xD;&#xA;    function mouseUp(event) {&#xD;&#xA;    	var x = event.x - canvasX;&#xD;&#xA;    	var y = event.y - canvasY;&#xD;&#xA;    	var shape = paint.select(x, y);&#xD;&#xA;    	if (shape) {&#xD;&#xA;    		alert(shape.id);&#xD;&#xA;    	}&#xD;&#xA;    	// console.log('selected shape: ', shape);&#xD;&#xA;    }&#xD;&#xA;    function mouseMove(event) {&#xD;&#xA;    	var x = event.x - canvasX;&#xD;&#xA;    	var y = event.y - canvasY;&#xD;&#xA;    	var shape = paint.select(x, y);&#xD;&#xA;    &#xD;&#xA;    	paint.setSelected(shape);&#xD;&#xA;    }&#xD;&#xA;    c.addEventListener('mouseup', mouseUp);&#xD;&#xA;    c.addEventListener('mousemove', mouseMove);