    public void syncSQLiteMySQLDB() {&#xD;&#xA;           &#xD;&#xA;         AsyncHttpClient client = new AsyncHttpClient();&#xD;&#xA;           &#xD;&#xA;         RequestParams params = new RequestParams();  &#xD;&#xA;         params.put("offline",loadCheckoutDB.composeJSONfromSQLite());&#xD;&#xA;                    &#xD;&#xA;         Log.d("offline data log", loadCheckoutDB.composeJSONfromSQLite());&#xD;&#xA;         client.addHeader("session_id", getapikey());&#xD;&#xA;         client.addHeader("Content-Type", "application/json");&#xD;&#xA;    &#xD;&#xA;         client.post("http://example.com/offline/api", params, new AsyncHttpResponseHandler() {&#xD;&#xA;                     &#xD;&#xA;         @Override&#xD;&#xA;          public void onSuccess(int statusCode, Header[] headers, byte[] responseBody) {&#xD;&#xA;          String s = new String(responseBody);&#xD;&#xA;           &#xD;&#xA;         Log.d("response to sync", s);&#xD;&#xA;           &#xD;&#xA;         try {&#xD;&#xA;           &#xD;&#xA;        JSONObject obj = new JSONObject(s);&#xD;&#xA;           &#xD;&#xA;         if (obj.getBoolean("success")) {&#xD;&#xA;           &#xD;&#xA;         String success = obj.getString("message");&#xD;&#xA;          //Toast.makeText(getApplicationContext(), success, Toast.LENGTH_LONG).show();&#xD;&#xA;           &#xD;&#xA;        } else {&#xD;&#xA;          &#xD;&#xA;          String failure = obj.getString("message");&#xD;&#xA;          //Toast.makeText(getApplicationContext(), failure, Toast.LENGTH_LONG).show();&#xD;&#xA;    &#xD;&#xA;          }&#xD;&#xA;          } catch (JSONException e) {&#xD;&#xA;    &#xD;&#xA;          }&#xD;&#xA;    &#xD;&#xA;          }&#xD;&#xA;    &#xD;&#xA;          @Override&#xD;&#xA;          &#xD;&#xA;        public void onFailure(int statusCode, Header[] headers, byte[] responseBody, Throwable error) {&#xD;&#xA;          &#xD;&#xA;         // Toast.makeText(getApplicationContext(), "Failed to sync with server", Toast.LENGTH_LONG).show();&#xD;&#xA;        Log.d("sqlite sync error", String.valueOf(error));&#xD;&#xA;          &#xD;&#xA;         progbar.setVisibility(View.INVISIBLE);&#xD;&#xA;         }&#xD;&#xA;    &#xD;&#xA;        });&#xD;&#xA;    }&#xD;&#xA; 