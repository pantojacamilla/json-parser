    (function( $ ) {&#xD;&#xA;        $.widget("st.comboboxAutocomplete", {&#xD;&#xA;            options: {&#xD;&#xA;                minLength: 0,&#xD;&#xA;                showDropdown: false,&#xD;&#xA;                width: '',&#xD;&#xA;                Id: '',&#xD;&#xA;            },&#xD;&#xA;            _create: function () {&#xD;&#xA;                this.wrapper = $("<span>")&#xD;&#xA;                  .addClass("st-comboboxAutocomplete")&#xD;&#xA;                  .css({ 'padding': '0px 0px', 'width': this.options.width})              &#xD;&#xA;                  .insertAfter(this.element);            &#xD;&#xA;                this.element.hide();&#xD;&#xA;                this._createAutocomplete();&#xD;&#xA;                if (this.options.showDropdown)&#xD;&#xA;                {&#xD;&#xA;                    this._createShowAllButton();&#xD;&#xA;                }&#xD;&#xA;                &#xD;&#xA;            },&#xD;&#xA;            _createAutocomplete: function () {            &#xD;&#xA;                var selected = this.element.children(":selected"),&#xD;&#xA;                  value = selected.val() ? selected.text() : "";            &#xD;&#xA;                this.input = $("<input>")&#xD;&#xA;                  .appendTo(this.wrapper)&#xD;&#xA;                  .val(value)&#xD;&#xA;                  .attr("title", "")&#xD;&#xA;                  .attr("id", this.options.Id)&#xD;&#xA;                  .addClass("st-comboboxAutocomplete-input")&#xD;&#xA;                  .css('margin-right', '5px')&#xD;&#xA;                  .autocomplete({&#xD;&#xA;                      delay: 0,&#xD;&#xA;                      minLength: this.options.minLength,                  &#xD;&#xA;                      source: $.proxy(this, "_source"),                 &#xD;&#xA;                  });&#xD;&#xA;                this._on(this.input, {&#xD;&#xA;                    autocompleteselect: function (event, ui) {                    &#xD;&#xA;                        ui.item.option.selected = true;&#xD;&#xA;                        this._trigger("select", event, {                        &#xD;&#xA;                            item: ui.item.option                        &#xD;&#xA;                        });                    &#xD;&#xA;                    },          &#xD;&#xA;                    autocompletechange: "_removeIfInvalid"&#xD;&#xA;                });&#xD;&#xA;            },&#xD;&#xA;            _createShowAllButton: function () {&#xD;&#xA;                var input = this.input,&#xD;&#xA;                  wasOpen = false;&#xD;&#xA;                $("<a>")&#xD;&#xA;                  .attr("tabIndex", -1)&#xD;&#xA;                  .attr("title", "Show All Items")&#xD;&#xA;                  .tooltip()&#xD;&#xA;                  .css('background-color', '#fff')&#xD;&#xA;                  .appendTo(this.wrapper)&#xD;&#xA;                  .button({&#xD;&#xA;                      icons: {&#xD;&#xA;                          primary: "ui-icon-triangle-1-s"&#xD;&#xA;                      },&#xD;&#xA;                      text: false&#xD;&#xA;                  })&#xD;&#xA;                  .removeClass("ui-corner-all")&#xD;&#xA;                  .addClass("st-comboboxAutocomplete-toggle ui-corner-right")&#xD;&#xA;                  .on("mousedown", function () {&#xD;&#xA;                      wasOpen = input.autocomplete("widget").is(":visible");&#xD;&#xA;                  })&#xD;&#xA;                  .on("click", function () {&#xD;&#xA;                      input.trigger("focus");&#xD;&#xA;                      // Close if already visible&#xD;&#xA;                      if (wasOpen) {&#xD;&#xA;                          return;&#xD;&#xA;                      }&#xD;&#xA;                      // Pass empty string as value to search for, displaying all results&#xD;&#xA;                      input.autocomplete("search", "");&#xD;&#xA;                  });&#xD;&#xA;            },&#xD;&#xA;            _source: function (request, response) {&#xD;&#xA;                var matcher = new RegExp($.ui.autocomplete.escapeRegex(request.term), "i");&#xD;&#xA;                response(this.element.children("option").map(function () {&#xD;&#xA;                    var text = $(this).text();&#xD;&#xA;                    if (this.value && (!request.term || matcher.test(text)))&#xD;&#xA;                        return {&#xD;&#xA;                            label: text,&#xD;&#xA;                            value: text,&#xD;&#xA;                            option: this&#xD;&#xA;                        };&#xD;&#xA;                }));&#xD;&#xA;            },&#xD;&#xA;            &#xD;&#xA;            _removeIfInvalid: function (event, ui) {&#xD;&#xA;                // Selected an item, nothing to do&#xD;&#xA;                if (ui.item) {&#xD;&#xA;                    return;&#xD;&#xA;                }&#xD;&#xA;                // Search for a match (case-insensitive)&#xD;&#xA;                var value = this.input.val(),&#xD;&#xA;                  valueLowerCase = value.toLowerCase(),&#xD;&#xA;                  valid = false;&#xD;&#xA;                this.element.children("option").each(function () {&#xD;&#xA;                    if ($(this).text().toLowerCase() === valueLowerCase) {&#xD;&#xA;                        this.selected = valid = true;&#xD;&#xA;                        return false;&#xD;&#xA;                    }&#xD;&#xA;                });&#xD;&#xA;                // Found a match, nothing to do&#xD;&#xA;                if (valid) {&#xD;&#xA;                    return;&#xD;&#xA;                }&#xD;&#xA;                // Remove invalid value&#xD;&#xA;                this.input&#xD;&#xA;                  .val("")&#xD;&#xA;                  .attr("title", value + " didn't match any item")&#xD;&#xA;                  .tooltip("open");&#xD;&#xA;                this.element.val("");&#xD;&#xA;                this._delay(function () {&#xD;&#xA;                    this.input.tooltip("close").attr("title", "");&#xD;&#xA;                }, 2500);&#xD;&#xA;                this.input.autocomplete("instance").term = "";&#xD;&#xA;            },&#xD;&#xA;            _destroy: function () {&#xD;&#xA;                this.wrapper.remove();&#xD;&#xA;                this.element.show();&#xD;&#xA;            }&#xD;&#xA;        });&#xD;&#xA;    })( jQuery );&#xD;&#xA;         $(function() {&#xD;&#xA;             $( "#combobox" ).comboboxAutocomplete();  &#xD;&#xA;                $("#combobox").change(function() {&#xD;&#xA;                 alert(this.value);&#xD;&#xA;             });&#xD;&#xA;         });