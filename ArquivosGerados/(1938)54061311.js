    'use strict';&#xD;&#xA;    const functions = require('firebase-functions');&#xD;&#xA;    const {WebhookClient} = require('dialogflow-fulfillment');&#xD;&#xA;    const {Card, Suggestion} = require('dialogflow-fulfillment');&#xD;&#xA;    process.env.DEBUG = 'dialogflow:debug'; // enables lib debugging statements &#xD;&#xA;    exports.dialogflowFirebaseFulfillment = functions.https.onRequest((&#xD;&#xA;    request, response) => {&#xD;&#xA;      const agent = new WebhookClient({ request, response });&#xD;&#xA;      console.log('Dialogflow Request headers: ' + JSON.stringify(request.headers));&#xD;&#xA;      console.log('Dialogflow Request body: ' + JSON.stringify(request.body)); &#xD;&#xA;      function welcome(agent) {&#xD;&#xA;        agent.add(`Welcome to my agent!`);&#xD;&#xA;      } &#xD;&#xA;      function fallback(agent) {&#xD;&#xA;        agent.add(`I didn't understand`);&#xD;&#xA;        agent.add(`I'm sorry, can you try again?`);&#xD;&#xA;      }&#xD;&#xA;          function personFacts(agent) {&#xD;&#xA;            const persons =  {&#xD;&#xA;              person1: {"Alex" : 25, "Jennifer" : 45, "Justin" : 35, "Peter" : 89},&#xD;&#xA;              person2: {"Alex" : 95, "Jennifer" : 75, "Justin" : 85, "Peter" : 59},&#xD;&#xA;              person3: {"Alex" : 67, "Jennifer" : 55, "Justin" : 45, "Peter" : 15},&#xD;&#xA;            };&#xD;&#xA;            const personId = agent.parameters["personId"];&#xD;&#xA;            const personMeasurement = agent.parameters["personMeasurement"];        &#xD;&#xA;            const person = persons[personId];&#xD;&#xA;            const result = person[personMeasurement];       &#xD;&#xA;            agent.add(`${personId}'s ${personMeasurement} is ${result}`); }&#xD;&#xA;     intent name&#xD;&#xA;          let intentMap = new Map();&#xD;&#xA;          intentMap.set('Default Welcome Intent', welcome);&#xD;&#xA;          intentMap.set('Default Fallback Intent', fallback);&#xD;&#xA;          intentMap.set('person', personFacts);&#xD;&#xA;          agent.handleRequest(intentMap);&#xD;&#xA;        });