    let elements = 25&#xD;&#xA;    var array = []&#xD;&#xA;    let goal = []&#xD;&#xA;    let tempAr = []&#xD;&#xA;    let i = 1&#xD;&#xA;     &#xD;&#xA;    function setup() {&#xD;&#xA;     &#xD;&#xA;        // put setup code here&#xD;&#xA;        createCanvas(600, 600)&#xD;&#xA;        background(25)&#xD;&#xA;        // make the goal array ascending&#xD;&#xA;        while (goal.length < elements) {&#xD;&#xA;            goal.push(i)&#xD;&#xA;            i++&#xD;&#xA;        }&#xD;&#xA;     &#xD;&#xA;        // make the scrambled array&#xD;&#xA;     &#xD;&#xA;        i = 0&#xD;&#xA;        tempAr = goal&#xD;&#xA;        while (i < elements) {&#xD;&#xA;            let rng = Math.floor(random(tempAr.length))&#xD;&#xA;            array.push(tempAr[rng])&#xD;&#xA;            tempAr.splice(rng, 1)&#xD;&#xA;     &#xD;&#xA;            i++&#xD;&#xA;     &#xD;&#xA;        }&#xD;&#xA;     &#xD;&#xA;    }&#xD;&#xA;     &#xD;&#xA;    function draw() {&#xD;&#xA;        fill('#f1f442')&#xD;&#xA;     &#xD;&#xA;        drawRect()&#xD;&#xA;        sort()&#xD;&#xA;     &#xD;&#xA;    }&#xD;&#xA;     &#xD;&#xA;     &#xD;&#xA;    function drawRect() {&#xD;&#xA;        i = 1&#xD;&#xA;        while (i <= elements) {&#xD;&#xA;            rect(i * (width / elements) - (width / elements), height - array[i - 1] * height / elements, width / elements, array[i - 1] * height / elements)&#xD;&#xA;            i++&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;     &#xD;&#xA;    function sort() {&#xD;&#xA;     &#xD;&#xA;        let sorted = false&#xD;&#xA;     &#xD;&#xA;        while (!sorted) {&#xD;&#xA;     &#xD;&#xA;            sorted = true&#xD;&#xA;            var e = 0&#xD;&#xA;            while (e < array.length) {&#xD;&#xA;     &#xD;&#xA;                if (array[e] > array[e + 1]) {&#xD;&#xA;                    let temp = array[e + 1]&#xD;&#xA;                    array[e + 1] = array[e]&#xD;&#xA;                    array[e] = temp&#xD;&#xA;                    sorted = false&#xD;&#xA;     &#xD;&#xA;                }&#xD;&#xA;                drawRect()&#xD;&#xA;                e++&#xD;&#xA;            }&#xD;&#xA;     &#xD;&#xA;        }&#xD;&#xA;     &#xD;&#xA;     &#xD;&#xA;    }