    var MODULE = {};&#xD;&#xA;    // RegExp variables&#xD;&#xA;    var colorMatch = /rgb|hsl|hsv/g;&#xD;&#xA;    var isIncrementReqForColor = /ahsv|ahsl|argb/g;&#xD;&#xA;    var numRegExp =&#xD;&#xA;    	/\s+|([A-Za-z?().,{}:""[\]#]+)|([-+/*%]+=)?([-+*/%]+)?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g;&#xD;&#xA;    var hexColor = /^#([0-9a-f]{6}|[0-9a-f]{3})$/i;&#xD;&#xA;    var trimRegExp = /\n|\r|\t/g;&#xD;&#xA;    // Helpers&#xD;&#xA;    function s2f(val) {&#xD;&#xA;    	var floatedVal = parseFloat(val);&#xD;&#xA;    	return typeof floatedVal === "number" && !isNaN(floatedVal) ? floatedVal : val;&#xD;&#xA;    }&#xD;&#xA;    function h2r_f(all, hex) {&#xD;&#xA;    	var r;&#xD;&#xA;    	var g;&#xD;&#xA;    	var b;&#xD;&#xA;    	if (hex.length === 3) {&#xD;&#xA;    		r = parseInt(hex[0] + hex[0], 16);&#xD;&#xA;    		g = parseInt(hex[1] + hex[1], 16);&#xD;&#xA;    		b = parseInt(hex[2] + hex[2], 16);&#xD;&#xA;    	} else if (hex.length === 6) {&#xD;&#xA;    		r = parseInt(hex.substr(0, 2), 16);&#xD;&#xA;    		g = parseInt(hex.substr(2, 2), 16);&#xD;&#xA;    		b = parseInt(hex.substr(4, 6), 16);&#xD;&#xA;    	}&#xD;&#xA;    	return "rgb(" + r + "," + g + "," + b + ")";&#xD;&#xA;    };&#xD;&#xA;    function trim(str) {&#xD;&#xA;    	return typeof str === "string" ? str.replace(trimRegExp, "") : str;&#xD;&#xA;    };&#xD;&#xA;    var relativeModes = { '+=': 1, '-=': 1, '*=': 2, '/=': 3, '%=': 4 };&#xD;&#xA;    function r2n(s, e) {&#xD;&#xA;    	if (typeof e === 'number') {&#xD;&#xA;    		return e - s;&#xD;&#xA;    	} else {&#xD;&#xA;    		var rv = relativeModes[e.substr(0, 2)], v = e.substr(2);&#xD;&#xA;    		if (rv === 1) {&#xD;&#xA;    			var e2 = e[0] + v;&#xD;&#xA;    			return (s + parseFloat(e2)) - s;&#xD;&#xA;    		} else if (rv === 2) {&#xD;&#xA;    			return (s * +v) - s;&#xD;&#xA;    		} else if (rv === 3) {&#xD;&#xA;    			return (s / +v) - s;&#xD;&#xA;    		} else if (rv === 4) {&#xD;&#xA;    			return (s * (+v / 100)) - s;&#xD;&#xA;    		}&#xD;&#xA;    	}&#xD;&#xA;    	return e;&#xD;&#xA;    }&#xD;&#xA;    var h2r = MODULE.hexToRgb = function (hex) {&#xD;&#xA;    	return typeof hex !== 'string' ? hex : trim(hex)&#xD;&#xA;    		.replace(hexColor, h2r_f);&#xD;&#xA;    }&#xD;&#xA;    function s2n(str) {&#xD;&#xA;    	return h2r(str).match(numRegExp).map(s2f);&#xD;&#xA;    }&#xD;&#xA;    // Splitted functions&#xD;&#xA;    var stringTween = function (s, e, d) {&#xD;&#xA;    	d = d !== undefined ? d : 10000;&#xD;&#xA;    	var sv = s2n(s);&#xD;&#xA;    	var ev = s2n(e);&#xD;&#xA;    	var rv = ev.map(function (e, i) { return typeof e === 'string' && e.indexOf('=') === 1 ? e : null; });&#xD;&#xA;    	ev = ev.map(function (e, i) { return rv[i] !== null ? r2n(sv[i], e) : typeof e === 'number' ? e - sv[i] : e; });&#xD;&#xA;    	return function (t) {&#xD;&#xA;    		var str = '';&#xD;&#xA;    		for (var i = 0, len = ev.length; i < len; i++) {&#xD;&#xA;    			var a = sv[i], b = ev[i], r = rv[i];&#xD;&#xA;    			str += typeof b === 'number' ? (((a + b * t) * d) | 0) / d : a;&#xD;&#xA;    			if (t === 1 && r !== null) {&#xD;&#xA;    				document.body.innerHTML += 'This script executes <code>t === 1</code>, relative value isn\'t null, but <code>sv</code> or <code>ev</code> not changes, this is BUG?' + '<br/>';&#xD;&#xA;    				sv[i] += b;&#xD;&#xA;    				ev[i] = r2n(sv[i], r);&#xD;&#xA;    			}&#xD;&#xA;    		}&#xD;&#xA;    		return str;&#xD;&#xA;    	}&#xD;&#xA;    }&#xD;&#xA;    // Test case&#xD;&#xA;    var st = performance.now(), rep = 1;&#xD;&#xA;    requestAnimationFrame(function anim(time) {&#xD;&#xA;    	var t = (time - st) / 2000;&#xD;&#xA;    	t = t > 1 ? 1 : t;&#xD;&#xA;    	document.body.innerHTML += stringTween('translate3d(10px, 20px, 30px)', 'translate3d(+=20px, 30px, 35px)')(t) + '<br/>';&#xD;&#xA;    	if (t === 1) {&#xD;&#xA;    		if (rep > 0) {&#xD;&#xA;    			rep--;&#xD;&#xA;    			st = time&#xD;&#xA;    		} else {&#xD;&#xA;    			return false;&#xD;&#xA;    		}&#xD;&#xA;    	}&#xD;&#xA;    	requestAnimationFrame(anim);&#xD;&#xA;    });