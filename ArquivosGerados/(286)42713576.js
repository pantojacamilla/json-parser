    final String ticketUrl = "http";&#xD;&#xA;            StringRequest getTicket = new StringRequest(Request.Method.POST, ticketUrl,&#xD;&#xA;                    new Response.Listener<String>() {&#xD;&#xA;                        @Override&#xD;&#xA;                        public void onResponse(String response) {&#xD;&#xA;                            try {&#xD;&#xA;                                JSONObject ticketObj = new JSONObject(response);&#xD;&#xA;                                JSONArray ticketArray = ticketObj.getJSONArray("a");&#xD;&#xA;                                for (int i = 0 ; i < ticketArray.length() ; i++){&#xD;&#xA;                                    ViewTicketModel ticket_object = new ViewTicketModel();&#xD;&#xA;                                    JSONObject ticketVal = ticketArray.getJSONObject(i);&#xD;&#xA;                                    String diagnosa = ticketVal.getString("first");&#xD;&#xA;                                    String noPasien = ticketVal.getString("second");&#xD;&#xA;                                    String dokter = ticketVal.getString("3rd");&#xD;&#xA;                                    String jenisPerawatan = ticketVal.getString("4th");&#xD;&#xA;                                    ticket_object.setJenis_perawatan(jenisPerawatan);&#xD;&#xA;                                    ticket_object.setNomor_pasien(noPasien);&#xD;&#xA;                                    ticket_object.setDoctor(dokter);&#xD;&#xA;                                    ticket_list_mdl.add(ticket_object);&#xD;&#xA;                                    adapter.notifyDataSetChanged();&#xD;&#xA;                                    // stopping swipe refresh&#xD;&#xA;                                    swipeRefreshView.setRefreshing(false);&#xD;&#xA;                                }&#xD;&#xA;                            } catch (JSONException e) {&#xD;&#xA;                                e.printStackTrace();&#xD;&#xA;                            }&#xD;&#xA;                        }&#xD;&#xA;                    }, new Response.ErrorListener() {&#xD;&#xA;                @Override&#xD;&#xA;                public void onErrorResponse(VolleyError error) {&#xD;&#xA;                    Log.v("V_error",error.toString());&#xD;&#xA;                    // stopping swipe refresh&#xD;&#xA;    //                swipeRefreshView.setRefreshing(false);&#xD;&#xA;                }&#xD;&#xA;            }) {&#xD;&#xA;                @Override&#xD;&#xA;                protected Map<String, String> getParams() {&#xD;&#xA;                    Map<String, String> params = new HashMap<String, String>();&#xD;&#xA;                    params.put("a", token);&#xD;&#xA;                    params.put("b", signature);&#xD;&#xA;                    params.put("c", pvd_code);&#xD;&#xA;                    return params;&#xD;&#xA;                }&#xD;&#xA;            };&#xD;&#xA;            RequestQueue ticketQueue = Volley.newRequestQueue(ViewTickets.this);&#xD;&#xA;            ticketQueue.add(getTicket);