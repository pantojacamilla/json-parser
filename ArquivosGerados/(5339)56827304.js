    $('form').submit(function(e) {&#xD;&#xA;      e.preventDefault();&#xD;&#xA;      var a = Array.from($('select'))&#xD;&#xA;        .map((select, i) => ({&#xD;&#xA;          'index': i,&#xD;&#xA;          'room': select.value&#xD;&#xA;        }))&#xD;&#xA;        .filter(select => select.room !== 'unsure' && select.room !== 'not attend');&#xD;&#xA;      if( !a || a.length == 0 ) {console.log('a is null or undefined, or a.length == 0');}&#xD;&#xA;        else {&#xD;&#xA;         if(a[0].room == 'attend') {a[0].room = 'chapel';}  &#xD;&#xA;         alert(JSON.stringify(a));&#xD;&#xA;    //   updateTable(a);&#xD;&#xA;       }  //  end else&#xD;&#xA;    }); //  end def anonymous fn & submit&#xD;&#xA;    function updateTable(classes) {&#xD;&#xA;      var timeslots = ['0830', '0900', '1030']&#xD;&#xA;      var params = {};&#xD;&#xA;      var ts = '';&#xD;&#xA;      var rm = '';&#xD;&#xA;      var dynamoDB = new AWS.DynamoDB();&#xD;&#xA;      var err = null;&#xD;&#xA;      &#xD;&#xA;      for(var i = 0; i < classes.length; i++) {&#xD;&#xA;        ts = timeslots[classes[i].index];&#xD;&#xA;        rm = classes[i].room;&#xD;&#xA;        console.log('ts, rm : ', ts, rm);&#xD;&#xA;        params = {&#xD;&#xA;                      'TableName': 'FHCRoomCounts',&#xD;&#xA;                      'Key': {&#xD;&#xA;                                'room': {&#xD;&#xA;                                          'S' : rm&#xD;&#xA;                                        },&#xD;&#xA;                                'timeSlot': {&#xD;&#xA;                                               'S': ts&#xD;&#xA;                                            }&#xD;&#xA;                             },&#xD;&#xA;                      'ExpressionAttributeNames': {&#xD;&#xA;                                                    '#registrants': 'registrants'&#xD;&#xA;                                                  },&#xD;&#xA;                      'ExpressionAttributeValues': {&#xD;&#xA;                                                     ':n': { 'N': '1'} &#xD;&#xA;                                                   &#xD;&#xA;                                                   },&#xD;&#xA;                      'UpdateExpression': 'ADD #registrants :n',&#xD;&#xA;                      'ReturnValues': 'ALL_NEW'&#xD;&#xA;                 };  // end params&#xD;&#xA;                 &#xD;&#xA;                   console.log('log params for i == ' + i);&#xD;&#xA;                   console.log(params);&#xD;&#xA;                   console.log('Executing dynamoDB updateItem on iteration i = ' + i);&#xD;&#xA;                                            &#xD;&#xA;        dynamoDB.updateItem(params, function(err, data) {&#xD;&#xA;              if (err) {&#xD;&#xA;                          console.log('Unable to update registrant: ' + '\n' + JSON.stringify(err, undefined, 2));&#xD;&#xA;                } else {&#xD;&#xA;                          console.log('Increase registrant succeeded: ' + '\n' + JSON.stringify(data, undefined, 2));&#xD;&#xA;                       }  // end else&#xD;&#xA;        });  // end def anonymous fn & def updateItem stateme&#xD;&#xA;      }  //  end for&#xD;&#xA;    }  //  end def fn updateTable