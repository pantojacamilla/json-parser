    const container = document.getElementById("charts_container");&#xD;&#xA;    const data = {&#xD;&#xA;      cores: 4&#xD;&#xA;    }; // Retrieved through an NPM library&#xD;&#xA;    const cpus = [1, 2, 3, 4];&#xD;&#xA;    var series = [];&#xD;&#xA;    var charts = [];&#xD;&#xA;    // For each core...&#xD;&#xA;    for (var i = 0; i < data.cores; i++) {&#xD;&#xA;      // Create some DOM&#xD;&#xA;      container.innerHTML += `<div>&#xD;&#xA;          <h1>CORE <em>#<span>${i}</span></em></h1>&#xD;&#xA;          <canvas id="cpu_canvas_${i}" height="60"></canvas>&#xD;&#xA;          </div>`;&#xD;&#xA;      // Create a new TimeSeries&#xD;&#xA;      series.push(new TimeSeries());&#xD;&#xA;      // Create a new chart&#xD;&#xA;      let serie = series[i];&#xD;&#xA;      let chart = new SmoothieChart();&#xD;&#xA;      chart.addTimeSeries(serie);&#xD;&#xA;      chart.streamTo(document.getElementById(`cpu_canvas_${i}`), 500);&#xD;&#xA;      charts.push(chart);&#xD;&#xA;    }&#xD;&#xA;    // Initialize the series updater&#xD;&#xA;    updateInfo();&#xD;&#xA;    var infoUpdater = setInterval(() => {&#xD;&#xA;      updateInfo();&#xD;&#xA;    }, 500);&#xD;&#xA;    function updateInfo() {&#xD;&#xA;      cpus.forEach((e, i) => {&#xD;&#xA;        series[i].append(new Date().getTime(), Math.random() * 100); // Example data&#xD;&#xA;      });&#xD;&#xA;    }