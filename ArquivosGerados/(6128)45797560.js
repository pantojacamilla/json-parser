    class Child extends React.Component {&#xD;&#xA;      componentDidUpdate(prev) {&#xD;&#xA;        if (!prev.isActive && this.props.isActive) {&#xD;&#xA;          console.log('activated', this.props.title);&#xD;&#xA;        }&#xD;&#xA;      }&#xD;&#xA;      render() {&#xD;&#xA;        return (&#xD;&#xA;          <span&#xD;&#xA;            className={this.props.isActive ? 'child active' : 'child'}&#xD;&#xA;            onClick={this.props.onClick}&#xD;&#xA;          >&#xD;&#xA;            {this.props.title}&#xD;&#xA;          </span>&#xD;&#xA;        );&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;    const Child1 = reactRedux.connect((state, props) => ({&#xD;&#xA;      isActive={props.isActive('Child1')}&#xD;&#xA;      onClick={() => props.activate('Child1')}&#xD;&#xA;      title="Child1"&#xD;&#xA;    }))(Child);&#xD;&#xA;    const Child2 = reactRedux.connect((state, props) => ({&#xD;&#xA;      isActive={props.isActive('Child2')}&#xD;&#xA;      onClick={() => props.activate('Child2')}&#xD;&#xA;      title="Child2"&#xD;&#xA;    }))(Child);&#xD;&#xA;    class Root extends React.Component {&#xD;&#xA;      state = { active: null };&#xD;&#xA;      activate = (active) => {&#xD;&#xA;        if (!this.isActive(active)) {&#xD;&#xA;          this.setState({ active });&#xD;&#xA;        }&#xD;&#xA;      };&#xD;&#xA;      isActive = active => this.state.active === active;&#xD;&#xA;      renderChild = (ChildComponent, i) => (&#xD;&#xA;        <ChildComponent&#xD;&#xA;          activate={this.activate}&#xD;&#xA;          isActive={this.isActive}&#xD;&#xA;          key={i}&#xD;&#xA;        />&#xD;&#xA;      );&#xD;&#xA;      render() {&#xD;&#xA;        const children = [Child1, Child2];&#xD;&#xA;        return (&#xD;&#xA;          <reactRedux.Provider store={this.props.store}>&#xD;&#xA;            <div>{children.map(this.renderChild)}</div>&#xD;&#xA;          </reactRedux.Provider>&#xD;&#xA;        );&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;    const reducer = (state, action) => ({});&#xD;&#xA;    const store = redux.createStore(reducer);&#xD;&#xA;        &#xD;&#xA;    ReactDOM.render(<Root store={store} />, document.getElementById('root'));