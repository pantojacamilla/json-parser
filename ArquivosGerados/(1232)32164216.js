    local composer = require( "composer" )&#xD;&#xA;    local widget = require("widget")&#xD;&#xA;    local scene = composer.newScene()&#xD;&#xA;    -- -----------------------------------------------------------------------------------------------------------------&#xD;&#xA;    -- All code outside of the listener functions will only be executed ONCE unless "composer.removeScene()" is called.&#xD;&#xA;    -- -----------------------------------------------------------------------------------------------------------------&#xD;&#xA;    -- local forward references should go here&#xD;&#xA;    -- -------------------------------------------------------------------------------&#xD;&#xA;    -- "scene:create()"&#xD;&#xA;    function scene:create( event )&#xD;&#xA;        local sceneGroup = self.view&#xD;&#xA;        -- Initialize the scene here.&#xD;&#xA;        -- Example: add display objects to "sceneGroup", add touch listeners, etc.&#xD;&#xA;        local background = display.newImage("background.png")&#xD;&#xA;        background.x=display.contentCenterX&#xD;&#xA;        background.y=display.contentCenterY&#xD;&#xA;        background.height=display.contentHeight&#xD;&#xA;        background.width=display.contentWidth&#xD;&#xA;          local function gotoCharacter(event)&#xD;&#xA;            composer.gotoScene("character")&#xD;&#xA;            print('asd')&#xD;&#xA;        end&#xD;&#xA;        local bottomTabButtons ={&#xD;&#xA;        {  width=32, height=32, defaultFile="character.png", overFile="character_active.png", onPress=function() composer.gotoScene( "character" ) end},&#xD;&#xA;        {  width=32, height=32, defaultFile="job.png", overFile="job_active.png", selected="true"},&#xD;&#xA;        }&#xD;&#xA;            &#xD;&#xA;        local bottomBar = widget.newTabBar{&#xD;&#xA;             top = display.contentHeight-40,&#xD;&#xA;            buttons = bottomTabButtons&#xD;&#xA;        }&#xD;&#xA;     &#xD;&#xA;    end&#xD;&#xA;    -- "scene:show()"&#xD;&#xA;    function scene:show( event )&#xD;&#xA;        local sceneGroup = self.view&#xD;&#xA;        local phase = event.phase&#xD;&#xA;        if ( phase == "will" ) then&#xD;&#xA;            -- Called when the scene is still off screen (but is about to come on screen).&#xD;&#xA;        elseif ( phase == "did" ) then&#xD;&#xA;            -- Called when the scene is now on screen.&#xD;&#xA;            -- Insert code here to make the scene come alive.&#xD;&#xA;            -- Example: start timers, begin animation, play audio, etc.&#xD;&#xA;        end&#xD;&#xA;    end&#xD;&#xA;    -- "scene:hide()"&#xD;&#xA;    function scene:hide( event )&#xD;&#xA;        local sceneGroup = self.view&#xD;&#xA;        local phase = event.phase&#xD;&#xA;        if ( phase == "will" ) then&#xD;&#xA;            -- Called when the scene is on screen (but is about to go off screen).&#xD;&#xA;            -- Insert code here to "pause" the scene.&#xD;&#xA;            -- Example: stop timers, stop animation, stop audio, etc.&#xD;&#xA;        elseif ( phase == "did" ) then&#xD;&#xA;            -- Called immediately after scene goes off screen.&#xD;&#xA;        end&#xD;&#xA;    end&#xD;&#xA;    -- "scene:destroy()"&#xD;&#xA;    function scene:destroy( event )&#xD;&#xA;        local sceneGroup = self.view&#xD;&#xA;        -- Called prior to the removal of scene's view ("sceneGroup").&#xD;&#xA;        -- Insert code here to clean up the scene.&#xD;&#xA;        -- Example: remove display objects, save state, etc.&#xD;&#xA;    end&#xD;&#xA;    -- -------------------------------------------------------------------------------&#xD;&#xA;    -- Listener setup&#xD;&#xA;    scene:addEventListener( "create", scene )&#xD;&#xA;    scene:addEventListener( "show", scene )&#xD;&#xA;    scene:addEventListener( "hide", scene )&#xD;&#xA;    scene:addEventListener( "destroy", scene )&#xD;&#xA;    -- -------------------------------------------------------------------------------&#xD;&#xA;    return scene