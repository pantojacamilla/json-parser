    class SystemRoleTemplatesContainer extends React.Component {&#xD;&#xA;        constructor(props) {&#xD;&#xA;            super(props);&#xD;&#xA;            this.state = {&#xD;&#xA;                isLoading: false,&#xD;&#xA;                permissionList: [],&#xD;&#xA;                roleTemplateList: [],&#xD;&#xA;                permissionsGroup: []&#xD;&#xA;            };&#xD;&#xA;        }&#xD;&#xA;        componentDidMount = () => {&#xD;&#xA;            this.getTableData();&#xD;&#xA;        }&#xD;&#xA;        getTableData = () => {&#xD;&#xA;            store.dispatch(api.getRoletemplates()).then((result) => {&#xD;&#xA;                const permissionHeader = [{&#xD;&#xA;                    Header: "Permissions",&#xD;&#xA;                    accessor: "permission"&#xD;&#xA;                }]&#xD;&#xA;                const roleTemplateItems = result.body.data.map((data) => {&#xD;&#xA;                    return {&#xD;&#xA;                        id: data.relationships.permissions.data.map((data)=>{&#xD;&#xA;                            return {&#xD;&#xA;                                id: data.id&#xD;&#xA;                            }&#xD;&#xA;                         }),&#xD;&#xA;                        Header: data.attributes.name,&#xD;&#xA;                        accessor: data.attributes.name.replace(/\s/g, '')              &#xD;&#xA;                    }&#xD;&#xA;                });&#xD;&#xA;                const roleTemplate = permissionHeader.concat(roleTemplateItems)&#xD;&#xA;                this.setState(() => ({&#xD;&#xA;                    "roleTemplateList": roleTemplate&#xD;&#xA;                }));             &#xD;&#xA;            });     &#xD;&#xA;            store.dispatch(api.getPermissions()).then((result) => {&#xD;&#xA;                const permissionItems = result.body.data.map((data) => {&#xD;&#xA;                    return {&#xD;&#xA;                        id: data.id,&#xD;&#xA;                        permission: data.attributes.name&#xD;&#xA;                    }&#xD;&#xA;                });&#xD;&#xA;                &#xD;&#xA;                this.setState(() => ({&#xD;&#xA;                    "permissionList": permissionItems&#xD;&#xA;                })); &#xD;&#xA;            });  &#xD;&#xA;        }&#xD;&#xA;        render() {&#xD;&#xA;            const {isLoading,roleTemplateList, permissionList} = this.state;&#xD;&#xA;            if (isLoading) {&#xD;&#xA;                return <LoadingAnimation />;&#xD;&#xA;            }&#xD;&#xA;            &#xD;&#xA;            return (&#xD;&#xA;                <div className="role-management-form">&#xD;&#xA;                    <div className="admin-user-container-title">&#xD;&#xA;                        <Row>&#xD;&#xA;                            <Col md={8}>&#xD;&#xA;                                <h3>Manage Roles Template for System</h3>&#xD;&#xA;                            </Col>&#xD;&#xA;                        </Row>&#xD;&#xA;                    </div>                &#xD;&#xA;                    <Table&#xD;&#xA;                        columns={roleTemplateList}&#xD;&#xA;                        className="organization-tbl"&#xD;&#xA;                        data={permissionList}&#xD;&#xA;                        defaultPageSize={50}&#xD;&#xA;                        minRows={0}&#xD;&#xA;                    />&#xD;&#xA;                    &#xD;&#xA;                </div>&#xD;&#xA;            );&#xD;&#xA;        }&#xD;&#xA;    }