    function format(number, decimals = 2, locale = 'en-in') {&#xD;&#xA;      const fixed = parseInt(number).toFixed(decimals);&#xD;&#xA;      const [int, dec] = fixed.split('.')&#xD;&#xA;      const intFormatted = (+int).toLocaleString(locale)&#xD;&#xA;      return intFormatted + (dec ? '.' + dec : '');&#xD;&#xA;    }&#xD;&#xA;    var data = [{&#xD;&#xA;        "amount": 137551,&#xD;&#xA;        "billdate": "2018-12-01",&#xD;&#xA;        "outlet": "CHEF BAKERS BROOKFIELD"&#xD;&#xA;      },&#xD;&#xA;      {&#xD;&#xA;        "amount": 130832,&#xD;&#xA;        "billdate": "2018-12-02",&#xD;&#xA;        "outlet": "CHEF BAKERS BROOKFIELD"&#xD;&#xA;      },&#xD;&#xA;      {&#xD;&#xA;        "amount": 84501,&#xD;&#xA;        "billdate": "2018-12-03",&#xD;&#xA;        "outlet": "CHEF BAKERS BROOKFIELD"&#xD;&#xA;      },&#xD;&#xA;      {&#xD;&#xA;        "amount": 81938,&#xD;&#xA;        "billdate": "2018-12-04",&#xD;&#xA;        "outlet": "CHEF BAKERS BROOKFIELD"&#xD;&#xA;      },&#xD;&#xA;      {&#xD;&#xA;        "amount": 104634,&#xD;&#xA;        "billdate": "2018-12-05",&#xD;&#xA;        "outlet": "CHEF BAKERS BROOKFIELD"&#xD;&#xA;      },&#xD;&#xA;      {&#xD;&#xA;        "amount": 95217,&#xD;&#xA;        "billdate": "2018-12-06",&#xD;&#xA;        "outlet": "CHEF BAKERS BROOKFIELD"&#xD;&#xA;      },&#xD;&#xA;      {&#xD;&#xA;        "amount": 114856,&#xD;&#xA;        "billdate": "2018-12-07",&#xD;&#xA;        "outlet": "CHEF BAKERS BROOKFIELD"&#xD;&#xA;      },&#xD;&#xA;      {&#xD;&#xA;        "amount": 104277,&#xD;&#xA;        "billdate": "2018-12-08",&#xD;&#xA;        "outlet": "CHEF BAKERS BROOKFIELD"&#xD;&#xA;      },&#xD;&#xA;      {&#xD;&#xA;        "amount": 104180,&#xD;&#xA;        "billdate": "2018-12-09",&#xD;&#xA;        "outlet": "CHEF BAKERS BROOKFIELD"&#xD;&#xA;      },&#xD;&#xA;      {&#xD;&#xA;        "amount": 76160,&#xD;&#xA;        "billdate": "2018-12-10",&#xD;&#xA;        "outlet": "CHEF BAKERS BROOKFIELD"&#xD;&#xA;      },&#xD;&#xA;      {&#xD;&#xA;        "amount": 94503,&#xD;&#xA;        "billdate": "2018-12-11",&#xD;&#xA;        "outlet": "CHEF BAKERS BROOKFIELD"&#xD;&#xA;      },&#xD;&#xA;      {&#xD;&#xA;        "amount": 87724,&#xD;&#xA;        "billdate": "2018-12-12",&#xD;&#xA;        "outlet": "CHEF BAKERS BROOKFIELD"&#xD;&#xA;      },&#xD;&#xA;      {&#xD;&#xA;        "amount": 146463,&#xD;&#xA;        "billdate": "2018-12-13",&#xD;&#xA;        "outlet": "CHEF BAKERS BROOKFIELD"&#xD;&#xA;      },&#xD;&#xA;      {&#xD;&#xA;        "amount": 150194,&#xD;&#xA;        "billdate": "2018-12-14",&#xD;&#xA;        "outlet": "CHEF BAKERS BROOKFIELD"&#xD;&#xA;      },&#xD;&#xA;      {&#xD;&#xA;        "amount": 100765,&#xD;&#xA;        "billdate": "2018-12-15",&#xD;&#xA;        "outlet": "CHEF BAKERS BROOKFIELD"&#xD;&#xA;      },&#xD;&#xA;      {&#xD;&#xA;        "amount": 96188,&#xD;&#xA;        "billdate": "2018-12-16",&#xD;&#xA;        "outlet": "CHEF BAKERS BROOKFIELD"&#xD;&#xA;      },&#xD;&#xA;      {&#xD;&#xA;        "amount": 94390,&#xD;&#xA;        "billdate": "2018-12-17",&#xD;&#xA;        "outlet": "CHEF BAKERS BROOKFIELD"&#xD;&#xA;      },&#xD;&#xA;      {&#xD;&#xA;        "amount": 105079,&#xD;&#xA;        "billdate": "2018-12-18",&#xD;&#xA;        "outlet": "CHEF BAKERS BROOKFIELD"&#xD;&#xA;      },&#xD;&#xA;      {&#xD;&#xA;        "amount": 133846,&#xD;&#xA;        "billdate": "2018-12-19",&#xD;&#xA;        "outlet": "CHEF BAKERS BROOKFIELD"&#xD;&#xA;      },&#xD;&#xA;      {&#xD;&#xA;        "amount": 151600,&#xD;&#xA;        "billdate": "2018-12-20",&#xD;&#xA;        "outlet": "CHEF BAKERS BROOKFIELD"&#xD;&#xA;      },&#xD;&#xA;      {&#xD;&#xA;        "amount": 190293,&#xD;&#xA;        "billdate": "2018-12-21",&#xD;&#xA;        "outlet": "CHEF BAKERS BROOKFIELD"&#xD;&#xA;      },&#xD;&#xA;      {&#xD;&#xA;        "amount": 100150,&#xD;&#xA;        "billdate": "2018-12-22",&#xD;&#xA;        "outlet": "CHEF BAKERS BROOKFIELD"&#xD;&#xA;      },&#xD;&#xA;      {&#xD;&#xA;        "amount": 68592,&#xD;&#xA;        "billdate": "2018-12-23",&#xD;&#xA;        "outlet": "CHEF BAKERS BROOKFIELD"&#xD;&#xA;      },&#xD;&#xA;      {&#xD;&#xA;        "amount": 128454,&#xD;&#xA;        "billdate": "2018-12-24",&#xD;&#xA;        "outlet": "CHEF BAKERS BROOKFIELD"&#xD;&#xA;      },&#xD;&#xA;      {&#xD;&#xA;        "amount": 138538,&#xD;&#xA;        "billdate": "2018-12-25",&#xD;&#xA;        "outlet": "CHEF BAKERS BROOKFIELD"&#xD;&#xA;      },&#xD;&#xA;      {&#xD;&#xA;        "amount": 78394,&#xD;&#xA;        "billdate": "2018-12-26",&#xD;&#xA;        "outlet": "CHEF BAKERS BROOKFIELD"&#xD;&#xA;      },&#xD;&#xA;      {&#xD;&#xA;        "amount": 82636,&#xD;&#xA;        "billdate": "2018-12-27",&#xD;&#xA;        "outlet": "CHEF BAKERS BROOKFIELD"&#xD;&#xA;      },&#xD;&#xA;      {&#xD;&#xA;        "amount": 70039,&#xD;&#xA;        "billdate": "2018-12-28",&#xD;&#xA;        "outlet": "CHEF BAKERS BROOKFIELD"&#xD;&#xA;      },&#xD;&#xA;      {&#xD;&#xA;        "amount": 62300,&#xD;&#xA;        "billdate": "2018-12-29",&#xD;&#xA;        "outlet": "CHEF BAKERS BROOKFIELD"&#xD;&#xA;      }&#xD;&#xA;    ]&#xD;&#xA;    let formatData = function(data) {&#xD;&#xA;      let billdates = [];&#xD;&#xA;      let outlets = [];&#xD;&#xA;      data.forEach(element => {&#xD;&#xA;        if (billdates.indexOf(element.billdate) == -1) {&#xD;&#xA;          billdates.push(element.billdate);&#xD;&#xA;        }&#xD;&#xA;        if (outlets.indexOf(element.outlet) == -1) {&#xD;&#xA;          outlets.push(element.outlet);&#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;      return {&#xD;&#xA;        data: data,&#xD;&#xA;        billdates: billdates,&#xD;&#xA;        outlets: outlets,&#xD;&#xA;      };&#xD;&#xA;    };&#xD;&#xA;    let renderTable = function(data) {&#xD;&#xA;      billdates = data.billdates;&#xD;&#xA;      outlets = data.outlets;&#xD;&#xA;      data = data.data;&#xD;&#xA;      let tbl = document.getElementById("tblOlSalesSummary");&#xD;&#xA;      let table = document.createElement("table");&#xD;&#xA;      let thead = document.createElement("thead");&#xD;&#xA;      let headerRow = document.createElement("tr");&#xD;&#xA;      let th = document.createElement("th");&#xD;&#xA;      th.innerHTML = "BillDate";&#xD;&#xA;      th.classList.add("text-center");&#xD;&#xA;      headerRow.appendChild(th);&#xD;&#xA;      let grandTotal = 0;&#xD;&#xA;      let outletWiseTotal = {};&#xD;&#xA;      th = document.createElement("th");&#xD;&#xA;      th.innerHTML = "Totals";&#xD;&#xA;      th.classList.add("text-center");&#xD;&#xA;      headerRow.appendChild(th);&#xD;&#xA;      outlets.forEach(element => {&#xD;&#xA;        th = document.createElement("th");&#xD;&#xA;        th.innerHTML = element;&#xD;&#xA;        th.classList.add("text-center");&#xD;&#xA;        headerRow.appendChild(th);&#xD;&#xA;        outletWiseTotal[element] = 0;&#xD;&#xA;        data.forEach(el => {&#xD;&#xA;          if (el.outlet == element) {&#xD;&#xA;            outletWiseTotal[element] += parseInt(el.amount);&#xD;&#xA;          }&#xD;&#xA;        });&#xD;&#xA;        grandTotal += outletWiseTotal[element];&#xD;&#xA;      });&#xD;&#xA;      thead.appendChild(headerRow);&#xD;&#xA;      headerRow = document.createElement("tr");&#xD;&#xA;      th = document.createElement("th");&#xD;&#xA;      th.innerHTML = "Total";&#xD;&#xA;      th.classList.add("text-center");&#xD;&#xA;      headerRow.appendChild(th);&#xD;&#xA;      outlets.forEach(element => {&#xD;&#xA;        th = document.createElement("th");&#xD;&#xA;        th.innerHTML = outletWiseTotal[element].toLocaleString('en-in');&#xD;&#xA;        th.classList.add("text-right");&#xD;&#xA;        headerRow.appendChild(th);&#xD;&#xA;      });&#xD;&#xA;      th = document.createElement("th");&#xD;&#xA;      th.innerHTML = grandTotal.toLocaleString('en-in');&#xD;&#xA;      th.classList.add("text-right");&#xD;&#xA;      headerRow.insertBefore(th, headerRow.children[1]);&#xD;&#xA;      thead.appendChild(headerRow);&#xD;&#xA;      table.appendChild(thead);&#xD;&#xA;      let tbody = document.createElement("tbody");&#xD;&#xA;      billdates.forEach(element => {&#xD;&#xA;        let row = document.createElement("tr");&#xD;&#xA;        td = document.createElement("td");&#xD;&#xA;        td.innerHTML = element;&#xD;&#xA;        row.appendChild(td);&#xD;&#xA;        let total = 0;&#xD;&#xA;        outlets.forEach(outlet => {&#xD;&#xA;          let el = 0;&#xD;&#xA;          data.forEach(d => {&#xD;&#xA;            if (d.billdate == element && d.outlet == outlet) {&#xD;&#xA;              total += parseInt(d.amount);&#xD;&#xA;              el = d.amount;&#xD;&#xA;            }&#xD;&#xA;          });&#xD;&#xA;          td = document.createElement("td");&#xD;&#xA;          td.innerHTML = el.toLocaleString('en-in');&#xD;&#xA;          td.classList.add("text-right");&#xD;&#xA;          row.appendChild(td);&#xD;&#xA;        });&#xD;&#xA;        td = document.createElement("td");&#xD;&#xA;        td.innerHTML = total.toLocaleString('en-in');&#xD;&#xA;        td.classList.add("text-right");&#xD;&#xA;        row.insertBefore(td, row.children[1]);&#xD;&#xA;        tbody.appendChild(row);&#xD;&#xA;      });&#xD;&#xA;      table.appendChild(tbody);&#xD;&#xA;      tbl.innerHTML = "";&#xD;&#xA;      tbl.appendChild(table);&#xD;&#xA;      table.classList.add("table");&#xD;&#xA;      table.classList.add("table-striped");&#xD;&#xA;      table.classList.add("table-bordered");&#xD;&#xA;      table.classList.add("table-hover");&#xD;&#xA;      $(table).DataTable({&#xD;&#xA;        "scrollX": true,&#xD;&#xA;        "scrollY": "200px",&#xD;&#xA;        "bScrollCollapse": true,&#xD;&#xA;        "paging": false,&#xD;&#xA;        "info": false,&#xD;&#xA;        "ordering": false,&#xD;&#xA;        "searching": false,&#xD;&#xA;        fixedColumns: {&#xD;&#xA;          leftColumns: 2,&#xD;&#xA;        }&#xD;&#xA;      }).columns.adjust().draw();&#xD;&#xA;    }&#xD;&#xA;    let formatedData = formatData(data);&#xD;&#xA;    renderTable(formatedData);