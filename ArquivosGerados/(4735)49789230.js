    var canvas = new fabric.Canvas('c', {&#xD;&#xA;      selection: false&#xD;&#xA;    });&#xD;&#xA;    canvas.perPixelTargetFind = true;&#xD;&#xA;    canvas.targetFindTolerance = 4;&#xD;&#xA;    var circle = new fabric.Circle({&#xD;&#xA;      radius: 20,&#xD;&#xA;      fill: 'green',&#xD;&#xA;      left: 100,&#xD;&#xA;      top: 100&#xD;&#xA;    });&#xD;&#xA;    var triangle = new fabric.Triangle({&#xD;&#xA;      width: 20,&#xD;&#xA;      height: 30,&#xD;&#xA;      fill: 'blue',&#xD;&#xA;      left: 50,&#xD;&#xA;      top: 50&#xD;&#xA;    });&#xD;&#xA;    canvas.add(circle, triangle);&#xD;&#xA;    $('#clear').on('change', function() {&#xD;&#xA;      if ($(this).is(':checked')) {&#xD;&#xA;        drawingOperation('clear');&#xD;&#xA;      }&#xD;&#xA;    });&#xD;&#xA;    $('#line').on('change', function() {&#xD;&#xA;      if ($(this).is(':checked')) {&#xD;&#xA;        drawingOperation('line');&#xD;&#xA;      }&#xD;&#xA;    });&#xD;&#xA;    $('#eraser').on('change', function() {&#xD;&#xA;      if ($(this).is(':checked')) {&#xD;&#xA;        drawingOperation('erase');&#xD;&#xA;      }&#xD;&#xA;    });&#xD;&#xA;    var drawingPointer = {&#xD;&#xA;      status: false,&#xD;&#xA;      previousObj: false&#xD;&#xA;    };&#xD;&#xA;    function drawingOperation(operation) {&#xD;&#xA;      if (drawingPointer.status == 'freedraw') {&#xD;&#xA;        canvas.isDrawingMode = false;&#xD;&#xA;      }&#xD;&#xA;      if (operation == 'line') {&#xD;&#xA;        console.log('Called to draw line');&#xD;&#xA;        drawingPointer.status = 'line';&#xD;&#xA;        canvas.defaultCursor = 'url("https://image.ibb.co/dCkbWc/icon_straight.png") 0 16 ,auto';&#xD;&#xA;        canvas.hoverCursor = 'auto';&#xD;&#xA;        return;&#xD;&#xA;      }&#xD;&#xA;      if (operation == 'erase') {&#xD;&#xA;        drawingPointer.status = 'erase';&#xD;&#xA;        canvas.defaultCursor = canvas.hoverCursor = 'url("https://image.ibb.co/h2bGWc/icon_eraser.png") 2 12 ,auto';&#xD;&#xA;        return;&#xD;&#xA;      }&#xD;&#xA;      if (operation == 'clear') {&#xD;&#xA;        drawingPointer.status = false;&#xD;&#xA;        drawingPointer.previousObj = false;&#xD;&#xA;        canvas.defaultCursor = 'auto';&#xD;&#xA;        canvas.hoverCursor = 'auto';&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;    function handlerObjectSelection(o) {&#xD;&#xA;      console.log(o.target);&#xD;&#xA;      if (drawingPointer.status == 'erase') {&#xD;&#xA;        console.log('Called from Erase Section');&#xD;&#xA;        canvas.remove(o.target);&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;    function handleMouseMovement(o) {&#xD;&#xA;      if (drawingPointer.status == 'line' && drawingPointer.strightLine) {&#xD;&#xA;        var pointer = canvas.getPointer(o.e);&#xD;&#xA;        drawingPointer.down = false;&#xD;&#xA;        drawingPointer.strightLine.set({&#xD;&#xA;          'x2': pointer.x,&#xD;&#xA;          'y2': pointer.y&#xD;&#xA;        });&#xD;&#xA;        canvas.renderAll();&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;    function handleMouseDown(o) {&#xD;&#xA;      if (drawingPointer.status == 'line') {&#xD;&#xA;        console.log('MouseDown from Line');&#xD;&#xA;        var pointer = canvas.getPointer(o.e);&#xD;&#xA;        drawingPointer.down = true;&#xD;&#xA;        drawingPointer.strightLine = new fabric.Line([pointer.x, pointer.y, pointer.x, pointer.y], {&#xD;&#xA;          fill: 'red',&#xD;&#xA;          stroke: 'red',&#xD;&#xA;          strokeWidth: 3,&#xD;&#xA;          originX: 'center',&#xD;&#xA;          originY: 'center'&#xD;&#xA;        });&#xD;&#xA;        canvas.add(drawingPointer.strightLine);&#xD;&#xA;        canvas.renderAll();&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;    function handleMouseUp(o) {&#xD;&#xA;      if (drawingPointer.status == 'line') {&#xD;&#xA;        console.log('MouseUp from Line');&#xD;&#xA;        var pointer = canvas.getPointer(o.e);&#xD;&#xA;        drawingPointer.down = false;&#xD;&#xA;        drawingPointer.strightLine.set({&#xD;&#xA;          'x2': pointer.x,&#xD;&#xA;          'y2': pointer.y&#xD;&#xA;        });&#xD;&#xA;        canvas.renderAll();&#xD;&#xA;        drawingPointer.strightLine = null;&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;    canvas.on('selection:created', handlerObjectSelection);&#xD;&#xA;    canvas.on('selection:updated', handlerObjectSelection);&#xD;&#xA;    canvas.on('mouse:move', handleMouseMovement);&#xD;&#xA;    canvas.on('mouse:down', handleMouseDown);&#xD;&#xA;    canvas.on('mouse:up', handleMouseUp);