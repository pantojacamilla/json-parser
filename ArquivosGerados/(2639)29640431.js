    public class Plugin:IPlugin&#xD;&#xA;        {&#xD;&#xA;            // use event to callback host application&#xD;&#xA;            public event OnFinishDelegate OnFinish;&#xD;&#xA;            public event OnExceptionDelegate OnException;&#xD;&#xA;            // Create an EventArgs&#xD;&#xA;            AMessageEventArgs e = new AMessageEventArgs();&#xD;&#xA;            public void DoWork()&#xD;&#xA;            {&#xD;&#xA;                try&#xD;&#xA;                {&#xD;&#xA;                    // execute update data&#xD;&#xA;                    UpdateData();&#xD;&#xA;                }&#xD;&#xA;                catch (Exception ex)&#xD;&#xA;                {&#xD;&#xA;                    e.Message = ex.Message;&#xD;&#xA;                    // if have any exception, Plugin will raise an event in host application&#xD;&#xA;                    // but if developer forget write below three lines of code, my host application will&#xD;&#xA;                    // out of control.&#xD;&#xA;                    if (OnException!=null)&#xD;&#xA;                    {&#xD;&#xA;                        OnException(this,e);&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;                // if have no exception, Plugin will use OnFinish event to talk to host application&#xD;&#xA;                // to know that this plugin completed its work&#xD;&#xA;                // but if developer forget write below three lines of code, my host application will&#xD;&#xA;                // out of control.&#xD;&#xA;                if (OnFinish!=null)&#xD;&#xA;                {&#xD;&#xA;                    OnFinish(this,e);&#xD;&#xA;                }&#xD;&#xA;            }