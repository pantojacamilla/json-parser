    function job_queue(){&#xD;&#xA;        this.job = null;&#xD;&#xA;        this.pointer = this.job;&#xD;&#xA;        this.job_dispatcher = null; &#xD;&#xA;        this.length = 0;&#xD;&#xA;    }&#xD;&#xA;    job_queue.prototype.add_job = function( job ){&#xD;&#xA;        if( this.job == null ){&#xD;&#xA;            console.log('1st');&#xD;&#xA;            this.job = {&#xD;&#xA;                job:job,&#xD;&#xA;                next:null&#xD;&#xA;            };&#xD;&#xA;            this.pointer = this.job;&#xD;&#xA;            this.length = 1;&#xD;&#xA;        }else{&#xD;&#xA;            console.log('2nd');&#xD;&#xA;            this.pointer.next = { &#xD;&#xA;                job:job,&#xD;&#xA;                next:null&#xD;&#xA;            };&#xD;&#xA;            this.pointer = this.pointer.next;&#xD;&#xA;            this.length++;&#xD;&#xA;        }&#xD;&#xA;    };&#xD;&#xA;    job_queue.prototype.event_handler = function(){&#xD;&#xA;            if( typeof this.job['job'] == 'undefined'){&#xD;&#xA;                console.log('??');&#xD;&#xA;            }&#xD;&#xA;            if( this.job.job != null ){&#xD;&#xA;                console.log('hi');&#xD;&#xA;                this.job.job();&#xD;&#xA;                this.job = this.job.next();&#xD;&#xA;            }&#xD;&#xA;    }&#xD;&#xA;    job_queue.prototype.start_dispatch = function(){&#xD;&#xA;        if( this.job_dispatcher == null ){&#xD;&#xA;            console.log( this.event_handler );&#xD;&#xA;            this.job_dispatcher = setInterval( this.event_handler,1000);&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;    var jq = new job_queue();&#xD;&#xA;    function a(){&#xD;&#xA;        console.log('hi');&#xD;&#xA;    };&#xD;&#xA;    function b(){&#xD;&#xA;        console.log('hi2');&#xD;&#xA;    }&#xD;&#xA;    jq.add_job(a);&#xD;&#xA;    jq.add_job(b);&#xD;&#xA;    jq.add_job(a);&#xD;&#xA;    jq.start_dispatch();