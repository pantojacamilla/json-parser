    class A {&#xD;&#xA;        constructor(name) {&#xD;&#xA;            this._name = name;&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;    class B {&#xD;&#xA;        constructor(name) {&#xD;&#xA;            this._name = name;&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;    class C {&#xD;&#xA;        constructor(name) {&#xD;&#xA;            this._name = name;&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;    let allTemplates = ['A', 'B', 'C', 'Object']; //available classes&#xD;&#xA;    &#xD;&#xA;    let a = new A('A class');&#xD;&#xA;    let b = new B('B class');&#xD;&#xA;    let c = new C('C class');&#xD;&#xA;    &#xD;&#xA;    function seekTemplateOf(obj) {&#xD;&#xA;        /**find if @arg obj is an instance of any&#xD;&#xA;         ** of the classes above or just an object&#xD;&#xA;         **@return string "class that obj is instance of"&#xD;&#xA;         **/&#xD;&#xA;        return allTemplates.find(function(template) {&#xD;&#xA;            return obj instanceof window[template];&#xD;&#xA;            /*Thought that ^^ could do the trick?*/&#xD;&#xA;        });&#xD;&#xA;    }&#xD;&#xA;    console.log(seekTemplateOf(a));&#xD;&#xA;    /*"^^ Uncaught TypeError: Right-hand side of 'instanceof' is not an object"*/