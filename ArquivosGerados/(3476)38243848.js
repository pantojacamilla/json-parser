    class Courses extends Component {&#xD;&#xA;      constructor(props) {&#xD;&#xA;            super(props);&#xD;&#xA;            this.state = {&#xD;&#xA;              dataSource: new ListView.DataSource({&#xD;&#xA;                rowHasChanged: (row1, row2) => row1 !== row2,&#xD;&#xA;              }),&#xD;&#xA;              loaded: false,&#xD;&#xA;            };&#xD;&#xA;        }&#xD;&#xA;      fetchData() {&#xD;&#xA;        // fetching data here&#xD;&#xA;      }&#xD;&#xA;      componentDidMount() {&#xD;&#xA;        this.fetchData();&#xD;&#xA;      }&#xD;&#xA;      render(){&#xD;&#xA;        if (!this.state.loaded) {&#xD;&#xA;          return this.renderLoadingView();&#xD;&#xA;        }&#xD;&#xA;        return (&#xD;&#xA;          <View style={{&#xD;&#xA;            flex: 1&#xD;&#xA;          }}>&#xD;&#xA;          <ListView&#xD;&#xA;            dataSource={this.state.dataSource}&#xD;&#xA;            renderRow={this.renderRow}&#xD;&#xA;            style={styles.listView}&#xD;&#xA;          />&#xD;&#xA;          </View>&#xD;&#xA;        );&#xD;&#xA;      }&#xD;&#xA;      renderRow(data) {&#xD;&#xA;        var header = (&#xD;&#xA;          <View>&#xD;&#xA;              <View style={styles.rowContainer}>&#xD;&#xA;                <View  style={styles.textContainer}>&#xD;&#xA;                  <Text style={styles.title}>{data.nid}</Text>&#xD;&#xA;                  <Text style={styles.description} numberOfLines={0}>{data.title}</Text>&#xD;&#xA;                </View>&#xD;&#xA;              </View>&#xD;&#xA;              <View style={styles.separator}></View>&#xD;&#xA;        </View>&#xD;&#xA;        );&#xD;&#xA;    ///////////&#xD;&#xA;        var cid = [];&#xD;&#xA;        var content = [];&#xD;&#xA;        for(let x=0; x < Object.keys(data.course).length; x++){&#xD;&#xA;          cid[x] = data.course[x].course_id;&#xD;&#xA;          content.push(&#xD;&#xA;            <TouchableHighlight&#xD;&#xA;            underlayColor='#e3e0d7'&#xD;&#xA;            key={x}&#xD;&#xA;            onPress={()=>{console.log(cid[x]);}} //// i need to navigate user to a page with passing arguments (course_id in this case)&#xD;&#xA;            style={styles.child}&#xD;&#xA;            >&#xD;&#xA;            <Text style={styles.child}>&#xD;&#xA;            {data.course[x].title}&#xD;&#xA;            </Text>&#xD;&#xA;            </TouchableHighlight>&#xD;&#xA;          );&#xD;&#xA;        }&#xD;&#xA;        console.log(cid);&#xD;&#xA;        var clist = (&#xD;&#xA;          <View style={styles.rowContainer}>&#xD;&#xA;          {content}&#xD;&#xA;          </View>&#xD;&#xA;        );&#xD;&#xA;    ////////////&#xD;&#xA;        return (&#xD;&#xA;          <Accordion&#xD;&#xA;            header={header}&#xD;&#xA;            content={clist}&#xD;&#xA;            easing="easeOutCubic"&#xD;&#xA;          />&#xD;&#xA;        );&#xD;&#xA;      }&#xD;&#xA;      renderLoadingView() {&#xD;&#xA;        return (&#xD;&#xA;          <View style={styles.loading}>&#xD;&#xA;            <Text style={styles.loading}>&#xD;&#xA;              Loading Courses, please wait...&#xD;&#xA;            </Text>&#xD;&#xA;          </View>&#xD;&#xA;        );&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;    module.exports = Courses;