     var adjustment;&#xD;&#xA;           &#xD;&#xA;            $("ol.simple_with_animation").sortable({&#xD;&#xA;                  group: 'simple_with_animation',&#xD;&#xA;                  pullPlaceholder: false,&#xD;&#xA;                  // animation on drop&#xD;&#xA;                  onDrop: function  ($item, container, _super) {&#xD;&#xA;                    var $clonedItem = $('<li/>').css({height: 0});&#xD;&#xA;                    $item.before($clonedItem);&#xD;&#xA;                    $clonedItem.animate({ 'height': $item.height() });&#xD;&#xA;           &#xD;&#xA;                    $item.animate($clonedItem.position(), function  () {&#xD;&#xA;                      $clonedItem.detach();&#xD;&#xA;                      _super($item, container);&#xD;&#xA;                    });&#xD;&#xA;                  },&#xD;&#xA;                  // set $item relative to cursor position&#xD;&#xA;                  onDragStart: function ($item, container, _super) {&#xD;&#xA;                    var offset = $item.offset(),&#xD;&#xA;                        pointer = container.rootGroup.pointer;&#xD;&#xA;                    adjustment = {&#xD;&#xA;                      left: pointer.left - offset.left,&#xD;&#xA;                      top: pointer.top - offset.top&#xD;&#xA;                    };&#xD;&#xA;                    _super($item, container);&#xD;&#xA;                  },&#xD;&#xA;                  onDrag: function ($item, position) {&#xD;&#xA;                    $item.css({&#xD;&#xA;                      left: position.left - adjustment.left,&#xD;&#xA;                      top: position.top - adjustment.top&#xD;&#xA;                    });&#xD;&#xA;                  }&#xD;&#xA;            });