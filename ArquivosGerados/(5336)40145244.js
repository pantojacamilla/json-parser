    class ReactEventArgument extends React.Component{&#xD;&#xA;        componentDidMount() {&#xD;&#xA;            this.clickHandler(null, null, 'b2c');&#xD;&#xA;        }&#xD;&#xA;        render() {&#xD;&#xA;            return <div>&#xD;&#xA;                <Child clickHandler={this.clickHandler}></Child>&#xD;&#xA;            </div>  &#xD;&#xA;        }&#xD;&#xA;        clickHandler = (e, v, type = 'b2c') => {&#xD;&#xA;            console.log(Array.prototype.slice.call(arguments));&#xD;&#xA;            console.log(e, v, type);&#xD;&#xA;        &#xD;&#xA;            //if I click the button, I get a wrong type, type is nativeEvent, not my argument.&#xD;&#xA;        }&#xD;&#xA;    } &#xD;&#xA;    class Child extends React.Component{&#xD;&#xA;        render() {&#xD;&#xA;            const {clickHandler} = this.props;&#xD;&#xA;            return <div>&#xD;&#xA;                <button type="button" onClick={clickHandler}>click me</button>&#xD;&#xA;            </div>&#xD;&#xA;        }&#xD;&#xA;    }