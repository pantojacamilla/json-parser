    namespace yii\fenom;&#xD;&#xA;    use Yii;&#xD;&#xA;    use yii\base\View;&#xD;&#xA;    use yii\base\ViewRenderer as BaseViewRenderer;&#xD;&#xA;    class ViewRenderer extends BaseViewRenderer {&#xD;&#xA;        /**&#xD;&#xA;         * @var string the directory, where stores templates.&#xD;&#xA;         */&#xD;&#xA;        public $templatePath = '@app/views';&#xD;&#xA;        /**&#xD;&#xA;         * @var string the directory, where stores compiled templates in PHP files.&#xD;&#xA;         */&#xD;&#xA;        public $compilePath = '@runtime/Fenom/compile';&#xD;&#xA;        /**&#xD;&#xA;         * @var int|array bit-mask or array of Fenom settings.&#xD;&#xA;         * @see https://github.com/bzick/fenom/blob/master/docs/en/configuration.md#template-settings&#xD;&#xA;         */&#xD;&#xA;        public $options = 0;&#xD;&#xA;        /**&#xD;&#xA;         * @var \Fenom object that renders templates.&#xD;&#xA;         */&#xD;&#xA;        public $fenom;&#xD;&#xA;        public function init() {&#xD;&#xA;            $this->fenom =  \yii\fenom\Fenom::factory($this->templatePath, $this->compilePath, $this->options);&#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        public function render($view, $file, $params) {&#xD;&#xA;            $params['this'] = $view;&#xD;&#xA;            return $this->fenom->fetch($file, $params);&#xD;&#xA;        }&#xD;&#xA;    }