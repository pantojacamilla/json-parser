    import React, { Component } from 'react'&#xD;&#xA;    import { connect } from 'react-redux'&#xD;&#xA;    import * as actions from '../../store/actions/index'&#xD;&#xA;    import PropTypes from 'prop-types'&#xD;&#xA;    import './header.css'&#xD;&#xA;    class Header extends Component {&#xD;&#xA;        constructor(props) {&#xD;&#xA;            super(props)&#xD;&#xA;            this.state = {&#xD;&#xA;                email: '',&#xD;&#xA;                password: '',&#xD;&#xA;                isSignup: true,&#xD;&#xA;                token: false&#xD;&#xA;            }&#xD;&#xA;            this.handleChange = this.handleChange.bind(this);&#xD;&#xA;        }&#xD;&#xA;        handleChange (evt) {&#xD;&#xA;            this.setState({ [evt.target.name]: evt.target.value });&#xD;&#xA;        }&#xD;&#xA;        switchAuthModeHandler = (event) => {&#xD;&#xA;            event.preventDefault()&#xD;&#xA;            this.setState(prevState => {&#xD;&#xA;                return {&#xD;&#xA;                    isSignup: !prevState.isSignup&#xD;&#xA;                }&#xD;&#xA;            })&#xD;&#xA;        }&#xD;&#xA;        register = (event) => {&#xD;&#xA;            event.preventDefault()&#xD;&#xA;            this.props.onAuth( this.state.email, this.state.password, this.state.isSignup );&#xD;&#xA;            localStorage.setItem('token', this.props.tokenId);&#xD;&#xA;            localStorage.setItem('userId', this.props.userId);&#xD;&#xA;        }&#xD;&#xA;        render() {&#xD;&#xA;          let regBtn = ''&#xD;&#xA;          if (this.state.isSignup) {&#xD;&#xA;            regBtn = 'Register'&#xD;&#xA;          }&#xD;&#xA;          else {&#xD;&#xA;            regBtn = 'Login'&#xD;&#xA;          }&#xD;&#xA;        let login = null&#xD;&#xA;        if(!this.props.tokenId) {&#xD;&#xA;            login = (&#xD;&#xA;                <div className="login">&#xD;&#xA;                    <form onSubmit={this.register}>&#xD;&#xA;                        <input type="email" placeholder="email" name="email" onChange={this.handleChange} />&#xD;&#xA;                        <input type="password" placeholder="password" name="password" onChange={this.handleChange} />&#xD;&#xA;                        <button>{regBtn}</button>&#xD;&#xA;                    </form>&#xD;&#xA;                    <div onClick={this.switchAuthModeHandler} className="switch">Switch to {this.state.isSignup ? 'Login' : 'Register'}</div>&#xD;&#xA;                </div>&#xD;&#xA;            )&#xD;&#xA;        }&#xD;&#xA;        else {&#xD;&#xA;            login = (&#xD;&#xA;                <div>&#xD;&#xA;                    <p>Hello: {this.props.userId}</p>&#xD;&#xA;                    <button>Logout</button>&#xD;&#xA;                </div>&#xD;&#xA;            )&#xD;&#xA;        }&#xD;&#xA;        if(this.props.loading) {&#xD;&#xA;            login = <div>Loading...</div>&#xD;&#xA;        }&#xD;&#xA;        return (&#xD;&#xA;          <div>&#xD;&#xA;            <div className="header-inner">&#xD;&#xA;                {this.props.tokenId}&#xD;&#xA;                {login}&#xD;&#xA;              <img src="http://civcic.com/assets/images/header-bg.jpg" alt="img" />&#xD;&#xA;                <div className="header-content">&#xD;&#xA;                <h2>React.JS DEVELOPER</h2>&#xD;&#xA;                <a className="knowmore-btn" href="https://www.upwork.com/freelancers/~01f507600be26cc2a3" rel="noopener noreferrer" target="_blank">Upwork profile</a><br />&#xD;&#xA;                <a className="knowmore-btn" href="https://www.linkedin.com/in/boris-civcic-37244378/" rel="noopener noreferrer" target="_blank">Linkedin</a><br />&#xD;&#xA;                <a className="knowmore-btn" href="https://github.com/fixman93" rel="noopener noreferrer" target="_blank">GitHub</a>&#xD;&#xA;              </div>&#xD;&#xA;            </div>&#xD;&#xA;          </div>&#xD;&#xA;        )&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;    Header.defaultProps = {&#xD;&#xA;        tokenId: ''&#xD;&#xA;    }&#xD;&#xA;    Header.propTypes = {&#xD;&#xA;        tokenId: PropTypes.string&#xD;&#xA;    }&#xD;&#xA;    const mapStateToProps = state => {&#xD;&#xA;        return {&#xD;&#xA;            loading: state.auth.loading,&#xD;&#xA;            error: state.auth.error,&#xD;&#xA;            userId: state.auth.userId,&#xD;&#xA;            tokenId: state.auth.token&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;    const mapDispatchToProps = dispatch => {&#xD;&#xA;        return {&#xD;&#xA;            onAuth: ( email, password, isSignup) => dispatch( actions.auth(email, password, isSignup))&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;    export default connect(mapStateToProps, mapDispatchToProps)(Header)