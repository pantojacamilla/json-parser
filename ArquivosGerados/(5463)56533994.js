    class Tabs extends React.PureComponent {&#xD;&#xA;      getTabsRef = (tabsRef) => (this.ref = tabsRef);&#xD;&#xA;      handleTabIndicatorChange = ({ left, value, width }, isInitialMount) => {&#xD;&#xA;        if (value !== this.props.value || isInitialMount) {&#xD;&#xA;          this.props.onChange(value, left, width);&#xD;&#xA;        }&#xD;&#xA;      }&#xD;&#xA;      renderTabs() {&#xD;&#xA;        const { tabs, value } = this.props;&#xD;&#xA;        return tabs.map((tab, index) => {&#xD;&#xA;          return (&#xD;&#xA;            <Tab&#xD;&#xA;              key={index}&#xD;&#xA;              label={tab.label}&#xD;&#xA;              isActive={value === tab.value}&#xD;&#xA;              value={tab.value}&#xD;&#xA;              onChange={this.handleTabIndicatorChange}&#xD;&#xA;            />&#xD;&#xA;          );&#xD;&#xA;        });&#xD;&#xA;      }&#xD;&#xA;      render() {&#xD;&#xA;        let left = 0;&#xD;&#xA;        let width = 0;&#xD;&#xA;        const { indicatorLeft, indicatorWidth } = this.props;&#xD;&#xA;        if (this.ref) {&#xD;&#xA;          const rect = this.ref.getBoundingClientRect();&#xD;&#xA;          left = indicatorLeft - rect.left;&#xD;&#xA;          width = indicatorWidth;&#xD;&#xA;        }&#xD;&#xA;        return (&#xD;&#xA;          <StyledTabs className='tabs-wrapper' ref={this.getTabsRef}>&#xD;&#xA;            <ul key='tabs' className='material-tabs'>&#xD;&#xA;              {this.renderTabs()}&#xD;&#xA;            </ul>&#xD;&#xA;            <TabIndicator key='indicator' left={left} width={width} />&#xD;&#xA;          </StyledTabs>&#xD;&#xA;        );&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;    Tabs.propTypes = {&#xD;&#xA;      indicatorLeft: PropTypes.number,&#xD;&#xA;      indicatorWidth: PropTypes.number,&#xD;&#xA;      onChange: PropTypes.func,&#xD;&#xA;      tabs: PropTypes.array,&#xD;&#xA;      value: PropTypes.oneOfType([&#xD;&#xA;        PropTypes.string,&#xD;&#xA;        PropTypes.number,&#xD;&#xA;      ]),&#xD;&#xA;    };&#xD;&#xA;    Tabs.defaultProps = {&#xD;&#xA;      onChange: Function.prototype,&#xD;&#xA;      tabs: [],&#xD;&#xA;      value: 0,&#xD;&#xA;      indicatorLeft: 0,&#xD;&#xA;      indicatorWidth: 0,&#xD;&#xA;    };&#xD;&#xA;    export default Tabs;