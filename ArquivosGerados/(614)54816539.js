    const ActivitiesStack = createStackNavigator(&#xD;&#xA;      {&#xD;&#xA;        MyActivities: {screen: MyActivities},&#xD;&#xA;        ActivityDetail: {screen: ActivityDetail},&#xD;&#xA;        ActivityLikes: {screen: ActivityLikes},&#xD;&#xA;        ActivityComments: {screen: ActivityComments}&#xD;&#xA;      },&#xD;&#xA;      {&#xD;&#xA;        initialRouteName: 'MyActivities'&#xD;&#xA;      }&#xD;&#xA;    );&#xD;&#xA;    ActivitiesStack.navigationOptions = {&#xD;&#xA;      tabBarIcon: ({focused}) => (&#xD;&#xA;        <TabBarIcon&#xD;&#xA;          focused={focused}&#xD;&#xA;          name={&#xD;&#xA;            Platform.OS === 'ios'&#xD;&#xA;              ? `ios-paper`&#xD;&#xA;              : 'md-paper'&#xD;&#xA;          }&#xD;&#xA;        />&#xD;&#xA;      ),&#xD;&#xA;    };&#xD;&#xA;    const ConversationStack = createStackNavigator(&#xD;&#xA;      {&#xD;&#xA;        Messages: {screen: Conversations},&#xD;&#xA;        Chat: {screen: Chat}&#xD;&#xA;      },&#xD;&#xA;      {&#xD;&#xA;        initialRouteName: 'Messages'&#xD;&#xA;      });&#xD;&#xA;    ConversationStack.navigationOptions = {&#xD;&#xA;      tabBarIcon: ({focused}) => (&#xD;&#xA;        <TabBarIconWithBadge&#xD;&#xA;          badgeCount={3}&#xD;&#xA;          focused={focused}&#xD;&#xA;          name={Platform.OS === 'ios' ? `ios-chatbubbles` : 'md-chatbubbles'}&#xD;&#xA;        />&#xD;&#xA;      ),&#xD;&#xA;    };&#xD;&#xA;    const GameStack = createStackNavigator(&#xD;&#xA;      {&#xD;&#xA;        Game: {screen: Game}&#xD;&#xA;      },&#xD;&#xA;      {&#xD;&#xA;        initialRouteName: 'Game'&#xD;&#xA;      });&#xD;&#xA;    GameStack.navigationOptions = {&#xD;&#xA;      tabBarIcon: ({focused}) => (&#xD;&#xA;        <TabBarIcon&#xD;&#xA;          focused={focused}&#xD;&#xA;          name={Platform.OS === 'ios' ? `ios-square${focused ? '' : '-outline'}` : 'md-square'}&#xD;&#xA;        />&#xD;&#xA;      ),&#xD;&#xA;    };&#xD;&#xA;    const RequestsStack = createStackNavigator(&#xD;&#xA;      {&#xD;&#xA;        MyRequests: {screen: MyRequests}&#xD;&#xA;      },&#xD;&#xA;      {&#xD;&#xA;        initialRouteName: 'MyRequests'&#xD;&#xA;      });&#xD;&#xA;    const UrgentRequestStack = createStackNavigator({&#xD;&#xA;      UrgentRequest: {screen: UrgentRequest}&#xD;&#xA;      &#xD;&#xA;    });&#xD;&#xA;    UrgentRequestStack.navigationOptions = {&#xD;&#xA;      tabBarIcon: ({focused}) => (&#xD;&#xA;        <TabBarIcon&#xD;&#xA;          focused={focused}&#xD;&#xA;          name={Platform.OS === 'ios' ? `ios-add-circle${focused ? '' : '-outline'}` : `md-add-circle${focused ? '' : '-outline'}`}&#xD;&#xA;        />&#xD;&#xA;      ),&#xD;&#xA;    };&#xD;&#xA;    const SettingsStack = createStackNavigator({&#xD;&#xA;      Settings: {screen: SettingsScreen}&#xD;&#xA;    });&#xD;&#xA;    function onMenuPress() {&#xD;&#xA;      return true;&#xD;&#xA;    }&#xD;&#xA;    const EmptyStack = createStackNavigator({&#xD;&#xA;      Main: {&#xD;&#xA;        screen: () => null,&#xD;&#xA;      },&#xD;&#xA;    });&#xD;&#xA;    EmptyStack.navigationOptions = {&#xD;&#xA;      tabBarIcon: ({focused, navigation}) => (&#xD;&#xA;        <TabBarIcon //navigation={navigation}&#xD;&#xA;          focused={focused}&#xD;&#xA;          name={Platform.OS === 'ios' ? `ios-menu` : `md-menu`}&#xD;&#xA;        />&#xD;&#xA;      ),&#xD;&#xA;    };&#xD;&#xA;    const MainTabNavigator = createBottomTabNavigator({&#xD;&#xA;      EmptyStack,&#xD;&#xA;      ActivitiesStack,&#xD;&#xA;      UrgentRequestStack,&#xD;&#xA;      ConversationStack,&#xD;&#xA;      GameStack&#xD;&#xA;    }, {&#xD;&#xA;      tabBarOptions: {showLabel: false},&#xD;&#xA;      initialRouteName: 'ActivitiesStack'&#xD;&#xA;    });&#xD;&#xA;    const defaultGetStateForAction = MainTabNavigator.router.getStateForAction;&#xD;&#xA;    MainTabNavigator.router.getStateForAction = (action, state) => {&#xD;&#xA;      // console.log(action)&#xD;&#xA;      if (action.routeName === 'EmptyStack') {&#xD;&#xA;        &#xD;&#xA;        // Returning null from getStateForAction means that the action&#xD;&#xA;        // has been handled/blocked, but there is not a new state&#xD;&#xA;        // action.navigation.openDrawer;&#xD;&#xA;        &#xD;&#xA;        return null;&#xD;&#xA;        &#xD;&#xA;      }&#xD;&#xA;      return defaultGetStateForAction(action, state);&#xD;&#xA;    }&#xD;&#xA;    const DrawerNavigator = createDrawerNavigator(&#xD;&#xA;      {&#xD;&#xA;        RequestsStack,&#xD;&#xA;        SettingsStack,&#xD;&#xA;        ConversationStack,&#xD;&#xA;        ActivitiesStack,&#xD;&#xA;        MainTabNavigator&#xD;&#xA;      },&#xD;&#xA;      {&#xD;&#xA;        contentComponent: CustomDrawerContent,&#xD;&#xA;        drawerType: 'slide',&#xD;&#xA;        initialRouteName: 'MainTabNavigator'&#xD;&#xA;      }&#xD;&#xA;    );&#xD;&#xA;    export default createAppContainer(createSwitchNavigator({&#xD;&#xA;      // You could add another route here for authentication.&#xD;&#xA;      // Read more at https://reactnavigation.org/docs/en/auth-flow.html&#xD;&#xA;      Main: DrawerNavigator,&#xD;&#xA;    }));