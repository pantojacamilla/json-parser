    const asyncFunction = () => {&#xD;&#xA;      return Promise.resolve("Resolved!")&#xD;&#xA;    }&#xD;&#xA;    const nonAsyncFunction = () => {&#xD;&#xA;      return "Resolved!"&#xD;&#xA;    }&#xD;&#xA;    async function awaitObjectWithPromise(obj) {&#xD;&#xA;      // Return a promise with all values in the "obj" resolved.&#xD;&#xA;    }&#xD;&#xA;    let obj = {&#xD;&#xA;      key1: asyncFunction(),&#xD;&#xA;      key2: nonAsyncFunction(),&#xD;&#xA;      key3: "Some Value",&#xD;&#xA;      parent1: {&#xD;&#xA;        key1: asyncFunction(),&#xD;&#xA;        key2: nonAsyncFunction(),&#xD;&#xA;        key3: "Some Value"&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;    awaitObjectWithPromise(obj).then((obj) => {&#xD;&#xA;      console.log(obj);&#xD;&#xA;      // Should output:&#xD;&#xA;      // {&#xD;&#xA;      //     key1: "Resolved!",&#xD;&#xA;      //     key2: "Resolved!",&#xD;&#xA;      //     key3: "Some Value",&#xD;&#xA;      //     parent1: {&#xD;&#xA;      //         key1: "Resolved!",&#xD;&#xA;      //         key2: "Resolved!",&#xD;&#xA;      //         key3: "Some Value"&#xD;&#xA;      //     }&#xD;&#xA;      // }&#xD;&#xA;    })