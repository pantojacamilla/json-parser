    import React, { Component } from "react";&#xD;&#xA;    import Header from "./Header";&#xD;&#xA;    import { Redirect, Link } from 'react-router-dom'&#xD;&#xA;    import PropertiesView from './SubmitAd/Properties/PropertiesView';&#xD;&#xA;    import { getFromStorage, setInStorage } from "../utils/storage";&#xD;&#xA;    import Loader from './loader';&#xD;&#xA;    import SecureHeader from './secureHeader';&#xD;&#xA;    import Desc from "./Desc";&#xD;&#xA;    const url = `http://localhost:8080/api/`;&#xD;&#xA;    export default class Dashboard extends Component {&#xD;&#xA;        constructor(props) {&#xD;&#xA;            super(props);&#xD;&#xA;            this.state = {&#xD;&#xA;                isLoading: true,&#xD;&#xA;                token: '',&#xD;&#xA;                username: '',&#xD;&#xA;                ads: '',&#xD;&#xA;                value: '',&#xD;&#xA;                majorCategory: '',&#xD;&#xA;                category: '',&#xD;&#xA;                dom: <div></div>,&#xD;&#xA;                redirect: false&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;        componentWillMount() {&#xD;&#xA;            const obj = getFromStorage('olx');&#xD;&#xA;            if (obj && obj.token) {&#xD;&#xA;                const { token, username } = obj;&#xD;&#xA;                //Verify token here&#xD;&#xA;                fetch(url + "verify?token=" + token)&#xD;&#xA;                    .then(res => res.json())&#xD;&#xA;                    .then(json => {&#xD;&#xA;                        if (json.success) {&#xD;&#xA;                            this.setState({&#xD;&#xA;                                token: token,&#xD;&#xA;                                username: username,&#xD;&#xA;                                isLoading: false&#xD;&#xA;                            });&#xD;&#xA;                        } else {&#xD;&#xA;                            this.setState({&#xD;&#xA;                                isLoading: false&#xD;&#xA;                            });&#xD;&#xA;                        }&#xD;&#xA;                    })&#xD;&#xA;            } else {&#xD;&#xA;                this.setState({&#xD;&#xA;                    isLoading: false&#xD;&#xA;                });&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;        logout = () => {&#xD;&#xA;            this.setState({&#xD;&#xA;                isLoading: true&#xD;&#xA;            });&#xD;&#xA;            const obj = getFromStorage('olx');&#xD;&#xA;            if (obj && obj.token) {&#xD;&#xA;                const { token } = obj;&#xD;&#xA;                //Verify token here&#xD;&#xA;                fetch(url + "logout?token=" + token)&#xD;&#xA;                    .then(res => res.json())&#xD;&#xA;                    .then(json => {&#xD;&#xA;                        if (json.success) {&#xD;&#xA;                            this.setState({&#xD;&#xA;                                token: '',&#xD;&#xA;                                isLoading: false&#xD;&#xA;                            });&#xD;&#xA;                        } else {&#xD;&#xA;                            this.setState({&#xD;&#xA;                                isLoading: false&#xD;&#xA;                            });&#xD;&#xA;                        }&#xD;&#xA;                    })&#xD;&#xA;            } else {&#xD;&#xA;                this.setState({&#xD;&#xA;                    isLoading: false&#xD;&#xA;                });&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;        handleChangeCategory = (e) => {&#xD;&#xA;            this.setState({ [e.target.name]: e.target.value });&#xD;&#xA;        }&#xD;&#xA;        value = (e) => {&#xD;&#xA;            return this.state.type;&#xD;&#xA;        }&#xD;&#xA;        handleChange = (e) => {&#xD;&#xA;            this.setState({ [e.target.name]: e.target.value });&#xD;&#xA;            if (e.target.value === 'Properties') {&#xD;&#xA;                this.setState({&#xD;&#xA;                    dom: <select className="form-control form-control-lg" name="category" value={this.state.category} onChange={this.handleChangeCategory}>&#xD;&#xA;                        <option value="" >Select Ad Type</option>&#xD;&#xA;                        <option value="all">Show All</option>&#xD;&#xA;                        <option value="For Rent">For Rent</option>&#xD;&#xA;                        <option value="For Sale">For Sale</option>&#xD;&#xA;                        <option value="New Projects">New Projects</option>&#xD;&#xA;                    </select>&#xD;&#xA;                });&#xD;&#xA;            } else if (e.target.value === 'Cars') {&#xD;&#xA;                this.setState({&#xD;&#xA;                    dom: <select className="form-control form-control-lg" name="category" value={this.state.category} onChange={this.handleChangeCategory}>&#xD;&#xA;                        <option value="Cars">Cars</option>&#xD;&#xA;                    </select>&#xD;&#xA;                });&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;        fetchAdsFromDatabse = (majorCategory, category) => {&#xD;&#xA;            const obj = getFromStorage('olx');&#xD;&#xA;            if (obj && obj.userId) {&#xD;&#xA;                const { userId } = obj;&#xD;&#xA;                //Getting Ads from Database&#xD;&#xA;                fetch(url + 'dashboard', {&#xD;&#xA;                    method: 'POST',&#xD;&#xA;                    mode: "cors",&#xD;&#xA;                    headers: {&#xD;&#xA;                        "Content-Type": "application/json",&#xD;&#xA;                        "Accept": "application/json",&#xD;&#xA;                    },&#xD;&#xA;                    body: JSON.stringify({&#xD;&#xA;                        userId: userId,&#xD;&#xA;                        category: category,&#xD;&#xA;                        majorCategory: majorCategory&#xD;&#xA;                    })&#xD;&#xA;                })&#xD;&#xA;                    .then(res => res.json())&#xD;&#xA;                    .then(json => {&#xD;&#xA;                        this.setState({&#xD;&#xA;                            ads: json.ads,&#xD;&#xA;                        })&#xD;&#xA;                    })&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;        showAds = (e) => {&#xD;&#xA;            if (this.state.majorCategory === 'Properties' && this.state.category !== 'all') {&#xD;&#xA;                this.fetchAdsFromDatabse(this.state.majorCategory, this.state.category);&#xD;&#xA;            } else if (this.state.majorCategory === 'showall') {&#xD;&#xA;                this.fetchAdsFromDatabse("showall", null);&#xD;&#xA;            } else if (((this.state.majorCategory === 'Properties' && this.state.category === 'all') || (this.state.majorCategory === 'Properties')) || ((this.state.majorCategory === 'Cars' && this.state.category === 'all') || (this.state.majorCategory === 'Cars'))) {&#xD;&#xA;                if (this.state.majorCategory === 'Properties') {&#xD;&#xA;                    this.fetchAdsFromDatabse("Properties", "all");&#xD;&#xA;                } else if (this.state.majorCategory === 'Cars') {&#xD;&#xA;                    this.fetchAdsFromDatabse("Cars", "all");&#xD;&#xA;                }&#xD;&#xA;            } else console.log("Kuch to select karle");&#xD;&#xA;        }&#xD;&#xA;        // PropertiesView = (ad) => {&#xD;&#xA;        //     <Redirect to={{&#xD;&#xA;        //         pathname: '/dashboard/' + ad._id,&#xD;&#xA;        //         state: { referrer: ad }&#xD;&#xA;        //     }} />&#xD;&#xA;        // }&#xD;&#xA;        setRedirect = () => {&#xD;&#xA;            this.setState({&#xD;&#xA;                redirect: true&#xD;&#xA;            })&#xD;&#xA;        }&#xD;&#xA;        renderRedirect = (key) => {&#xD;&#xA;            if (this.state.redirect) {&#xD;&#xA;                return <Redirect to={{&#xD;&#xA;                    pathname: '/view/' + key,&#xD;&#xA;                    state: { referrer: key }&#xD;&#xA;                }} />&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;        render() {&#xD;&#xA;            const { isLoading, token, username, dom, ads } = this.state;&#xD;&#xA;            if (isLoading) {&#xD;&#xA;                return (<Loader />);&#xD;&#xA;            }&#xD;&#xA;            if (token) {&#xD;&#xA;                return (&#xD;&#xA;                    <div>&#xD;&#xA;                        <Header isAuth={true} />&#xD;&#xA;                        <SecureHeader logout={this.logout} username={username} />&#xD;&#xA;                        <div className="form-group" style={{ width: '80%', margin: '0 auto', padding: '20px 0 20px 0' }}>&#xD;&#xA;                            <select className="form-control form-control-lg" name="majorCategory" value={this.state.majorCategory} onChange={this.handleChange}>&#xD;&#xA;                                <option value="">Select Ad Category...</option>&#xD;&#xA;                                <option value="Properties">Properties</option>&#xD;&#xA;                                <option value="Cars">Cars</option>&#xD;&#xA;                                <option value="Electronics">Electronics &amp; Appliances</option>&#xD;&#xA;                                <option value="Furniture">Furniture</option>&#xD;&#xA;                            </select>&#xD;&#xA;                        </div>&#xD;&#xA;                        <br />&#xD;&#xA;                        <div className="form-group" style={{ width: '80%', margin: '0 auto' }}>&#xD;&#xA;                            {dom}&#xD;&#xA;                        </div>&#xD;&#xA;                        <br />&#xD;&#xA;                        <button className="btn btn-outline-success btn-lg btn-block" style={{ width: '80%', margin: '0 auto' }} onClick={this.showAds}>Show My Ads</button>&#xD;&#xA;                        <br />&#xD;&#xA;                        {ads ? ads.map((ad, i) => {&#xD;&#xA;                            return (<div key={ad._id}><div className="card" style={{ height: '80%', width: '18rem', margin: '0 auto' }}>&#xD;&#xA;                                <img className="card-img-top" src="http://via.placeholder.com/286px180/" alt="Card image cap" />&#xD;&#xA;                                <div className="card-body">&#xD;&#xA;                                    <Desc ad={ad} />&#xD;&#xA;                                    <p className="card-text" style={{ fontSize: '15px' }}>{ad.majorCategory} / {ad.category} / {ad.type}</p>&#xD;&#xA;                                    <p className="card-text">{ad.phone}</p>&#xD;&#xA;                                    <p className="card-text">{ad.location}</p>&#xD;&#xA;                                    {this.renderRedirect(ad._id)}&#xD;&#xA;                                    <button onClick={this.setRedirect} type="button" className="btn btn-outline-primary" data-toggle="modal" data-target="#exampleModal">See Details</button>                        &#xD;&#xA;                                </div>&#xD;&#xA;                            </div><br /></div>)&#xD;&#xA;                        }) : null}&#xD;&#xA;                    </div>&#xD;&#xA;                )&#xD;&#xA;            }&#xD;&#xA;            return (&#xD;&#xA;                <div>&#xD;&#xA;                    <Redirect to='/signin' />&#xD;&#xA;                </div>&#xD;&#xA;            );&#xD;&#xA;        }&#xD;&#xA;    }