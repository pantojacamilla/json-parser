    google.charts.load('current', {&#xD;&#xA;        // callback: drawChartYear,&#xD;&#xA;        packages: ['controls']&#xD;&#xA;      });&#xD;&#xA;      google.charts.setOnLoadCallback(drawChartYear);&#xD;&#xA;      function drawChartYear() {&#xD;&#xA;        var elements = document.getElementsByTagName('a')&#xD;&#xA;        while (elements[0]) elements[0].parentNode.removeChild(elements[0]);&#xD;&#xA;        var a = document.createElement('a');&#xD;&#xA;        a.setAttribute('href', '#');&#xD;&#xA;        a.innerHTML = 'Line Graph by Decades';&#xD;&#xA;        a.setAttribute('onClick', 'drawChartDecade()');&#xD;&#xA;        document.getElementById('text_div').appendChild(a);&#xD;&#xA;        var query = new google.visualization.Query("https://docs.google.com/spreadsheets/d/1xUzHqQjFRV3CcCEmsVUezz4hzwHDxPFW15f5Da0xBS0/edit#gid=0&headers=1&tq?range=A:AA");&#xD;&#xA;        query.send(handleQueryResponse);&#xD;&#xA;      }&#xD;&#xA;      function drawChartDecade() {&#xD;&#xA;        var elements = document.getElementsByTagName('a')&#xD;&#xA;        while (elements[0]) elements[0].parentNode.removeChild(elements[0]);&#xD;&#xA;        var a = document.createElement('a');&#xD;&#xA;        a.setAttribute('href', '#');&#xD;&#xA;        a.innerHTML = 'Line Graph by Year';&#xD;&#xA;        a.setAttribute('onClick', 'drawChartYear()');&#xD;&#xA;        document.getElementById('text_div').appendChild(a);&#xD;&#xA;        var query = new google.visualization.Query("https://docs.google.com/spreadsheets/d/1mX8ndZxq0lVHCpi4-LQKdut3kWgi3gYdozyxMw8fDxA/edit#gid=0");&#xD;&#xA;        query.send(handleQueryResponse);&#xD;&#xA;      }&#xD;&#xA;      function handleQueryResponse(response) {&#xD;&#xA;        var data = response.getDataTable();&#xD;&#xA;        var rangeFilter = new google.visualization.ControlWrapper({&#xD;&#xA;          controlType: 'ChartRangeFilter',&#xD;&#xA;          containerId: 'range_filter_div',&#xD;&#xA;          options: {&#xD;&#xA;            filterColumnIndex: 0,&#xD;&#xA;            ui: {&#xD;&#xA;              chartOptions: {&#xD;&#xA;                chartArea: {&#xD;&#xA;                  height: '30%',&#xD;&#xA;                  width: '70%'&#xD;&#xA;                }&#xD;&#xA;              },&#xD;&#xA;              chartView: {&#xD;&#xA;                columns: [0, 1]&#xD;&#xA;              }&#xD;&#xA;            }&#xD;&#xA;          }&#xD;&#xA;        });&#xD;&#xA;        var chart = new google.visualization.ChartWrapper({&#xD;&#xA;          chartType: 'LineChart',&#xD;&#xA;          containerId: 'chart_div',&#xD;&#xA;          options: {&#xD;&#xA;            legend: {&#xD;&#xA;              textStyle: {&#xD;&#xA;                fontSize: "8"&#xD;&#xA;              }&#xD;&#xA;            },&#xD;&#xA;            chartArea: {&#xD;&#xA;              width: '70%'&#xD;&#xA;            }&#xD;&#xA;          }&#xD;&#xA;        });&#xD;&#xA;        // Create the dashboard&#xD;&#xA;        var dash = new google.visualization.Dashboard(document.getElementById('dashboard'));&#xD;&#xA;        // bind the chart to the filter&#xD;&#xA;        dash.bind([rangeFilter], [chart]);&#xD;&#xA;        // draw the dashboard&#xD;&#xA;        dash.draw(data);&#xD;&#xA;        var columns = [];&#xD;&#xA;        var series = {};&#xD;&#xA;        for (var i = 0; i < data.getNumberOfColumns(); i++) {&#xD;&#xA;          columns.push(i);&#xD;&#xA;          if (i > 0) {&#xD;&#xA;            series[i - 1] = {};&#xD;&#xA;          }&#xD;&#xA;        }&#xD;&#xA;        google.visualization.events.addListener(chart, 'select', function() {&#xD;&#xA;          var sel = dash.getSelection();&#xD;&#xA;          // if selection length is 0, we deselected an element&#xD;&#xA;          if (sel.length > 0) {&#xD;&#xA;            // if row is undefined, we clicked on the legend&#xD;&#xA;            if (sel[0].row === null) {&#xD;&#xA;              var col = sel[0].column;&#xD;&#xA;              if (columns[col] == col) {&#xD;&#xA;                // hide the data series&#xD;&#xA;                columns[col] = {&#xD;&#xA;                  label: data.getColumnLabel(col),&#xD;&#xA;                  type: data.getColumnType(col),&#xD;&#xA;                  calc: function() {&#xD;&#xA;                    return null;&#xD;&#xA;                  }&#xD;&#xA;                };&#xD;&#xA;                // grey out the legend entry&#xD;&#xA;                series[col - 1].color = '#CCCCCC';&#xD;&#xA;              } else {&#xD;&#xA;                // show the data series&#xD;&#xA;                columns[col] = col;&#xD;&#xA;                series[col - 1].color = null;&#xD;&#xA;              }&#xD;&#xA;              // set series option & view columns&#xD;&#xA;              chart.setOption('series', series);&#xD;&#xA;              chart.setView({&#xD;&#xA;                columns: columns&#xD;&#xA;              });&#xD;&#xA;              dash.draw(data);&#xD;&#xA;            }&#xD;&#xA;          }&#xD;&#xA;        });&#xD;&#xA;        $(window).resize(function() {&#xD;&#xA;          drawChartYear();&#xD;&#xA;        });&#xD;&#xA;        $(document).ready(function() {&#xD;&#xA;            var checkboxes = $(".selectall");&#xD;&#xA;            $('#selectall').click(function(event) {&#xD;&#xA;                if (this.checked) {&#xD;&#xA;                  for (var col = 0; col < columns.length; col++) {&#xD;&#xA;                    columns[col] = {&#xD;&#xA;                      label: data.getColumnLabel(col),&#xD;&#xA;                      type: data.getColumnType(col),&#xD;&#xA;                      calc: function() {&#xD;&#xA;                        return null;&#xD;&#xA;                      }&#xD;&#xA;                    }&#xD;&#xA;                    series[col - 1].color = '#CCCCCC';&#xD;&#xA;                  }&#xD;&#xA;                } else {&#xD;&#xA;                  this.checked = false;&#xD;&#xA;                  for (var col = 0; col < columns.length; col++) {&#xD;&#xA;                    columns[col] = col;&#xD;&#xA;                    series[col - 1].color = null&#xD;&#xA;                  }&#xD;&#xA;                }&#xD;&#xA;              // set series option & view columns&#xD;&#xA;              chart.setOption('series', series);&#xD;&#xA;              chart.setView({&#xD;&#xA;                columns: columns&#xD;&#xA;              });&#xD;&#xA;              dash.draw(data);&#xD;&#xA;            });&#xD;&#xA;        });&#xD;&#xA;      }