    //Define Node obj&#xD;&#xA;    function Node(data){&#xD;&#xA;      this.data = data;&#xD;&#xA;      this.next = null;&#xD;&#xA;    }&#xD;&#xA;    //Define SinglyList obj&#xD;&#xA;    function SinglyList(){&#xD;&#xA;      this._length = 0;&#xD;&#xA;      this.head = null;&#xD;&#xA;    }&#xD;&#xA;    SinglyList.prototype.add = function(val){&#xD;&#xA;      var node = new Node(val),&#xD;&#xA;          currentNode = this.head;&#xD;&#xA;          //If empty, build as first node&#xD;&#xA;          if(!currentNode){&#xD;&#xA;            this.head = node;&#xD;&#xA;            this._length++;&#xD;&#xA;            return;&#xD;&#xA;          }&#xD;&#xA;          //iterate over until end of list&#xD;&#xA;          while(currentNode.next){&#xD;&#xA;            currentNode = currentNode.next;&#xD;&#xA;          }&#xD;&#xA;          //add/append new node&#xD;&#xA;          currentNode.next = node;&#xD;&#xA;          this._length++;&#xD;&#xA;          return node;&#xD;&#xA;    };&#xD;&#xA;    SinglyList.prototype.remove = function(index){&#xD;&#xA;      var currentNode = this.head, count=0, previous;&#xD;&#xA;      //if empty, exit out&#xD;&#xA;      if(this._length===0) return;&#xD;&#xA;      //Check against first node&#xD;&#xA;      if(index===0){&#xD;&#xA;          this.head = currentNode.next;&#xD;&#xA;          this._length--;&#xD;&#xA;      }else{&#xD;&#xA;          while(count<index){&#xD;&#xA;            previous = currentNode;&#xD;&#xA;            currentNode = currentNode.next;&#xD;&#xA;            count++;&#xD;&#xA;          }//end while&#xD;&#xA;          previous.next = currentNode.next;&#xD;&#xA;          return previous;&#xD;&#xA;      }// end if&#xD;&#xA;    };&#xD;&#xA;    var singlyList = new SinglyList();&#xD;&#xA;    singlyList.add(1);&#xD;&#xA;    singlyList.add(2);&#xD;&#xA;    singlyList.add(3);&#xD;&#xA;    singlyList.add(4);&#xD;&#xA;    singlyList.add(5);&#xD;&#xA;    singlyList.add(6);&#xD;&#xA;    singlyList.add(7);&#xD;&#xA;    singlyList.add(8);&#xD;&#xA;    singlyList.add(9);&#xD;&#xA;    singlyList.add(10);&#xD;&#xA;    console.log(JSON.stringify(singlyList));&#xD;&#xA;    console.log('Remove:\n'+JSON.stringify(singlyList.remove(5)));