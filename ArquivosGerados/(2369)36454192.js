    package com.nmc.viewbeem;&#xD;&#xA;    import android.app.Activity;&#xD;&#xA;    import android.content.Context;&#xD;&#xA;    import android.database.DataSetObserver;&#xD;&#xA;    import android.support.v7.view.menu.MenuView;&#xD;&#xA;    import android.view.LayoutInflater;&#xD;&#xA;    import android.view.View;&#xD;&#xA;    import android.view.ViewGroup;&#xD;&#xA;    import android.widget.BaseAdapter;&#xD;&#xA;    import android.widget.ImageView;&#xD;&#xA;    import android.widget.ListAdapter;&#xD;&#xA;    import android.widget.TextView;&#xD;&#xA;    import  com.nmc.viewbeem.StreamingOffers;&#xD;&#xA;    import retrofit2.Callback;&#xD;&#xA;    import retrofit2.Response;&#xD;&#xA;    /**&#xD;&#xA;     * Created by Katerina on 05.04.2016.&#xD;&#xA;     */&#xD;&#xA;    public class StreamingOffersAdapter<L> extends User implements ListAdapter {&#xD;&#xA;        private static LayoutInflater inflater=null;&#xD;&#xA;        private Activity activity;&#xD;&#xA;        private Context context;&#xD;&#xA;        public StreamingOffersAdapter(Activity activity) {&#xD;&#xA;            this.activity=activity;&#xD;&#xA;        }&#xD;&#xA;        public StreamingOffersAdapter(Callback<ResponseResult> callback, Response<ResponseResult> response) {&#xD;&#xA;        }&#xD;&#xA;        public class Holder {&#xD;&#xA;            private TextView full_name;&#xD;&#xA;            private TextView offeredStreams;&#xD;&#xA;            private TextView location;&#xD;&#xA;            private TextView price;&#xD;&#xA;            private TextView currency_symbol;&#xD;&#xA;            private TextView total_streamed;&#xD;&#xA;            private  ImageView background;&#xD;&#xA;            private  ImageView offer;&#xD;&#xA;            private  ImageView profile;&#xD;&#xA;            private  ImageView iconUser;&#xD;&#xA;            private  ImageView icoStar;&#xD;&#xA;        }&#xD;&#xA;        @Override&#xD;&#xA;        public View getView(int position, View convertView, ViewGroup parent) {&#xD;&#xA;            Holder holder = new Holder();&#xD;&#xA;            View itemView = convertView;&#xD;&#xA;            itemView = inflater.inflate(R.layout.listofusers, null);&#xD;&#xA;            StreamingOffers s = new StreamingOffers();&#xD;&#xA;            User u = new User();&#xD;&#xA;           if(itemView==null) {&#xD;&#xA;               holder.full_name = (TextView) itemView.findViewById(R.id.full_name);&#xD;&#xA;               holder.full_name.setText(getFullName());&#xD;&#xA;               holder.location = (TextView) itemView.findViewById(R.id.location);&#xD;&#xA;               holder.location.setText(s.getLocation());&#xD;&#xA;               holder.price = (TextView) itemView.findViewById(R.id.price);&#xD;&#xA;               holder.price.setText(s.getPrice());&#xD;&#xA;               holder.currency_symbol = (TextView) itemView.findViewById(R.id.currency_symbol);&#xD;&#xA;               holder.currency_symbol.setText(s.getCurrencySymbol());&#xD;&#xA;               holder.total_streamed = (TextView) itemView.findViewById(R.id.total_streamed);&#xD;&#xA;               holder.total_streamed.setText(u.getTotalStreamed());&#xD;&#xA;           }&#xD;&#xA;            return itemView;&#xD;&#xA;        }&#xD;&#xA;        @Override&#xD;&#xA;        public boolean areAllItemsEnabled() {&#xD;&#xA;            return false;&#xD;&#xA;        }&#xD;&#xA;        @Override&#xD;&#xA;        public boolean isEnabled(int position) {&#xD;&#xA;            return false;&#xD;&#xA;        }&#xD;&#xA;        @Override&#xD;&#xA;        public void registerDataSetObserver(DataSetObserver observer) {&#xD;&#xA;        }&#xD;&#xA;        @Override&#xD;&#xA;        public void unregisterDataSetObserver(DataSetObserver observer) {&#xD;&#xA;        }&#xD;&#xA;        @Override&#xD;&#xA;        public int getCount() {&#xD;&#xA;            return 0;&#xD;&#xA;        }&#xD;&#xA;        @Override&#xD;&#xA;        public Object getItem(int position) {&#xD;&#xA;            return null;&#xD;&#xA;        }&#xD;&#xA;        @Override&#xD;&#xA;        public long getItemId(int position) {&#xD;&#xA;            return 0;&#xD;&#xA;        }&#xD;&#xA;        @Override&#xD;&#xA;        public boolean hasStableIds() {&#xD;&#xA;            return false;&#xD;&#xA;        }&#xD;&#xA;        @Override&#xD;&#xA;        public int getItemViewType(int position) {&#xD;&#xA;            return 0;&#xD;&#xA;        }&#xD;&#xA;        @Override&#xD;&#xA;        public int getViewTypeCount() {&#xD;&#xA;            return 0;&#xD;&#xA;        }&#xD;&#xA;        @Override&#xD;&#xA;        public boolean isEmpty() {&#xD;&#xA;            return false;&#xD;&#xA;        }&#xD;&#xA;    }