    <div class="name_wrapper">&#xD;&#xA;            <form autocomplete="off" class="form_question" action="answer.html">&#xD;&#xA;                <label class="name question" for="name">Ask me a question</label>&#xD;&#xA;                <div class="question_wrapper">&#xD;&#xA;                <p class="error">Start your question with: Will i ever...</p>&#xD;&#xA;                    <input class="field question_field" type="text" name="question" placeholder="Will i ever..." value="" required>&#xD;&#xA;                </div>&#xD;&#xA;                <input id="button" class="answr-btn btn-question" type="submit" value="answer it!">&#xD;&#xA;                <input autocomplete="false" name="hidden" type="text" style="display:none;">&#xD;&#xA;            </form>&#xD;&#xA;     {&#xD;&#xA;     const handleSubmitForm = e => {&#xD;&#xA;     const $form = e.currentTarget;&#xD;&#xA;     if (!$form.checkValidity()) {&#xD;&#xA;      e.preventDefault();&#xD;&#xA;      const field = $form.querySelector('.question_field');&#xD;&#xA;      showValidationInfo(field);&#xD;&#xA;      //$form.querySelector('.error').innerHTML = 'Some errors occured';&#xD;&#xA;    } else {&#xD;&#xA;      console.log('Form is valid => submit form');&#xD;&#xA;    }&#xD;&#xA;     };&#xD;&#xA;    const showValidationInfo = field => {&#xD;&#xA;    console.log(field);&#xD;&#xA;    let message;&#xD;&#xA;    if (field.validity.valueMissing) {&#xD;&#xA;      message = 'Please fill in a question starting with: Will i ever';&#xD;&#xA;    }&#xD;&#xA;    if (field.validity.typeMismatch) {&#xD;&#xA;      message = 'Type not right';&#xD;&#xA;    }&#xD;&#xA;    if (field.validity.rangeOverflow) {&#xD;&#xA;      const max = field.getAttribute('max');&#xD;&#xA;      message = 'Too big, max ${max}';&#xD;&#xA;    }&#xD;&#xA;    if (field.validity.rangeUnderflow) {&#xD;&#xA;      const min = field.getAttribute('min');&#xD;&#xA;      message = 'Too small, min ${min}';&#xD;&#xA;    }&#xD;&#xA;    if (field.validity.tooShort) {&#xD;&#xA;      const min = field.getAttribute('minlength');&#xD;&#xA;      message = 'Too short, minimum length is ${min}';&#xD;&#xA;    }&#xD;&#xA;    if (field.validity.tooLong) {&#xD;&#xA;      const max = field.getAttribute('maxlength');&#xD;&#xA;      message = 'Too long, maximum length is ${max}';&#xD;&#xA;    }&#xD;&#xA;    if (!field.value.toLowerCase().startsWith("will i ever")) {&#xD;&#xA;      message = 'Start your question with: Will i ever';&#xD;&#xA;    }&#xD;&#xA;    if (message) {&#xD;&#xA;      field.parentElement.querySelector('.error').textContent = &#xD;&#xA;     message;&#xD;&#xA;      field.parentElement.querySelector('.error').style.color = "red";&#xD;&#xA;    }&#xD;&#xA;    };&#xD;&#xA;    const handeInputField = e => {&#xD;&#xA;    const $field = e.currentTarget;&#xD;&#xA;    if ($field.checkValidity()) {&#xD;&#xA;      $field.parentElement.querySelector('.error').textContent = '';&#xD;&#xA;      if ($field.form.checkValidity()) {&#xD;&#xA;        $field.form.querySelector('.error').innerHTML = '';&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;    };&#xD;&#xA;    const handeBlurField = e => {&#xD;&#xA;    const $field = e.currentTarget;&#xD;&#xA;    showValidationInfo($field);&#xD;&#xA;    };&#xD;&#xA;    const addValidationListeners = fields => {&#xD;&#xA;    fields.forEach($field => {&#xD;&#xA;      $field.addEventListener('input', handeInputField);&#xD;&#xA;      $field.addEventListener('blur', handeBlurField);&#xD;&#xA;    });&#xD;&#xA;    };&#xD;&#xA;    const init = () => {&#xD;&#xA;    const $form = document.querySelector('form');&#xD;&#xA;    $form.noValidate = true;&#xD;&#xA;    $form.addEventListener('submit', handleSubmitForm);&#xD;&#xA;    const fields = $form.querySelectorAll('.input');&#xD;&#xA;    addValidationListeners(fields);&#xD;&#xA;    };&#xD;&#xA;    init();&#xD;&#xA;    }