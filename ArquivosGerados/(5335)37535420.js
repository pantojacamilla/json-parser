    var z = 1; //value to make div overlappable&#xD;&#xA;    $('#addText').click(function (e) {&#xD;&#xA;        /** Make div draggable **/&#xD;&#xA;        $('<div />', {&#xD;&#xA;            class: 'ui-widget-content',&#xD;&#xA;            appendTo: '.container',&#xD;&#xA;            draggable: {&#xD;&#xA;                containment: 'parent',&#xD;&#xA;                start: function( event, ui ) {&#xD;&#xA;                    $(this).css('z-index', ++z);&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;        });&#xD;&#xA;    });&#xD;&#xA;    $(document).on("dblclick", '.text', '.img', function()&#xD;&#xA;    {&#xD;&#xA;        $(this).hide();    $(this).closest('.item').find('.edit_text', '.img').val($(this).text()).show();&#xD;&#xA;    });&#xD;&#xA;    $(document).on("click", ".edit_text", ".img", function()&#xD;&#xA;    {&#xD;&#xA;        return false;&#xD;&#xA;    });&#xD;&#xA;    $(document).on("click", function()&#xD;&#xA;    {&#xD;&#xA;        var editingText = $('.edit_text:visible');&#xD;&#xA;        if (editingText.length)&#xD;&#xA;        {&#xD;&#xA;            editingText.hide();&#xD;&#xA;            editingText.closest('.item').find('.text', '.img').text($(editingText).val()).show();&#xD;&#xA;        }&#xD;&#xA;    });&#xD;&#xA;        var count = 1;&#xD;&#xA;    var selectedDraggable;&#xD;&#xA;    ko.bindingHandlers.draggable={&#xD;&#xA;        init: function(element, valueAccessor, allBindingsAccessor, viewModel) {&#xD;&#xA;            $(element).draggable();&#xD;&#xA;            $(element).addClass('item' + count);&#xD;&#xA;            count++;&#xD;&#xA;            $(element).on('click', function () {&#xD;&#xA;                selectedDraggable = $(this);&#xD;&#xA;            })&#xD;&#xA;        }&#xD;&#xA;    };&#xD;&#xA;    var vm=function(){&#xD;&#xA;        var self=this;&#xD;&#xA;        self.items=ko.observableArray();&#xD;&#xA;        self.textContent = ko.observable('');&#xD;&#xA;        self.init=function(){&#xD;&#xA;            self.items([]);&#xD;&#xA;        }&#xD;&#xA;        self.remove=function(item){&#xD;&#xA;            console.log(item);&#xD;&#xA;            self.items.remove(item);&#xD;&#xA;        }&#xD;&#xA;        self.addNew = function() {&#xD;&#xA;          self.items.push( self.textContent() );&#xD;&#xA;          self.textContent('');&#xD;&#xA;        }&#xD;&#xA;        self.init();&#xD;&#xA;    }&#xD;&#xA;    ko.applyBindings(new vm());&#xD;&#xA;     &#xD;&#xA;    var reader = new FileReader(),&#xD;&#xA;      i = 0,&#xD;&#xA;      numFiles = 0,&#xD;&#xA;      imageFiles;&#xD;&#xA;    // use the FileReader to read image i&#xD;&#xA;    // pass `File` at index `i` within `FileList` to `readFile`&#xD;&#xA;    function readFile(file) {&#xD;&#xA;      reader.readAsDataURL(file)&#xD;&#xA;    }&#xD;&#xA;    // define function to be run when the File&#xD;&#xA;    // reader has finished reading the file&#xD;&#xA;    reader.onloadend = function(e) {&#xD;&#xA;      // increment `i`&#xD;&#xA;      ++i;&#xD;&#xA;      // make an image and append it to the div&#xD;&#xA;      var image = $('<img>').attr('src', e.target.result);&#xD;&#xA;      $(image).appendTo('#images');&#xD;&#xA;      // if there are more files run the file reader again&#xD;&#xA;      if (i < numFiles) {&#xD;&#xA;        // pass `File` at index `i` within `FileList` to `readFile`&#xD;&#xA;        readFile(imageFiles.item(i));&#xD;&#xA;      } &#xD;&#xA;    };&#xD;&#xA;    $('#go').click(function() {&#xD;&#xA;      i = 0;&#xD;&#xA;      imageFiles = document.getElementById('files').files&#xD;&#xA;        // get the number of files&#xD;&#xA;      numFiles = imageFiles.length;&#xD;&#xA;      // pass first `File` to `readFile`&#xD;&#xA;      readFile(imageFiles.item(i)); &#xD;&#xA;    });