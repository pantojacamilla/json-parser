    import React, { Component } from 'react';&#xD;&#xA;    let _ = require('lodash');&#xD;&#xA;    import {bindActionCreators} from "redux";&#xD;&#xA;    import {connect} from 'react-redux';&#xD;&#xA;    import {fetchedZonesEdit} from '../../actions/';&#xD;&#xA;    class InfoRow extends Component {&#xD;&#xA;      constructor(props){&#xD;&#xA;        super(props); &#xD;&#xA;        this.handleInputChange = this.handleInputChange.bind(this);&#xD;&#xA;      }&#xD;&#xA;      handleInputChange(event) {&#xD;&#xA;            this.setState({&#xD;&#xA;                [event.target.name]: event.target.value&#xD;&#xA;            });&#xD;&#xA;        }&#xD;&#xA;        render() {&#xD;&#xA;            return (&#xD;&#xA;                &#xD;&#xA;                <tr>&#xD;&#xA;                    <td>&#xD;&#xA;                      {this.props.zone}&#xD;&#xA;                    </td>&#xD;&#xA;                    <td>{this.props.zoneValue}&#xD;&#xA;                    <input type="text"&#xD;&#xA;                       className="form-control"&#xD;&#xA;                       defaultValue={this.props.zoneValue}&#xD;&#xA;                       value={this.props.name}&#xD;&#xA;                       name={this.props.zone}&#xD;&#xA;                       onChange={this.handleInputChange}&#xD;&#xA;                    />&#xD;&#xA;                    </td>&#xD;&#xA;                </tr>&#xD;&#xA;            )&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;    class ZoneDetailsEdit extends Component {&#xD;&#xA;        render() {&#xD;&#xA;            const rows = [];&#xD;&#xA;            let a = this.props.ezn;&#xD;&#xA;            &#xD;&#xA;           Object.keys(this.props.ezn).map((keyName, keyIndex) =>{&#xD;&#xA;              return rows.push(<InfoRow zone={keyName} zoneValue={a[keyName].toString()} key={keyIndex}/>)&#xD;&#xA;           });&#xD;&#xA;            return (&#xD;&#xA;                <div className="col-md-6">&#xD;&#xA;                    <div className="">&#xD;&#xA;                      <table className="table table-clear">&#xD;&#xA;                        <tbody>&#xD;&#xA;                          {rows}&#xD;&#xA;                        </tbody>&#xD;&#xA;                      </table>&#xD;&#xA;                     </div>&#xD;&#xA;                     <div className="row px-1" >&#xD;&#xA;                          <div className="px-2">&#xD;&#xA;                            <button className="btn btn-sm btn-info">Save</button>&#xD;&#xA;                     </div></div>&#xD;&#xA;              </div>&#xD;&#xA;            )&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;    class ZoneDetailEditComponent extends Component {&#xD;&#xA;      componentWillMount = () => {&#xD;&#xA;            this.props.fetchedZonesEdit(this.props.location.query.id);&#xD;&#xA;        };&#xD;&#xA;      &#xD;&#xA;      render() {&#xD;&#xA;        &#xD;&#xA;        return (&#xD;&#xA;            <div className="container px-3 mr-3">&#xD;&#xA;                <div className="row">&#xD;&#xA;                  <div className="col-md-6 col-md-offset-3"><h1>Edit Tag Information</h1></div>&#xD;&#xA;                </div>&#xD;&#xA;                <br/>&#xD;&#xA;                <br/>&#xD;&#xA;                    { this.props.ezn != null?&#xD;&#xA;                <div>&#xD;&#xA;                    <ZoneDetailsEdit ezn={this.props.ezn}/>&#xD;&#xA;                </div> :&#xD;&#xA;                        <center><br /><h1><img src={'img/avatars/default.gif'} alt="Loading"/><br />Loading</h1></center>&#xD;&#xA;                }&#xD;&#xA;            </div>&#xD;&#xA;        )&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;    function mapStateToProps(state) {&#xD;&#xA;        return {&#xD;&#xA;            ezn: state.zones&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;    function matchDispatchToProps(dispatch){&#xD;&#xA;        return bindActionCreators({fetchedZonesEdit: fetchedZonesEdit}, dispatch);&#xD;&#xA;    }&#xD;&#xA;    export default connect(mapStateToProps, matchDispatchToProps)(ZoneDetailEditComponent);