    const bla = {a: 1};&#xD;&#xA;    class Test extends React.Component {&#xD;&#xA;      constructor(props) {&#xD;&#xA;        super(props);&#xD;&#xA;        this.state = {&#xD;&#xA;          a: 1,&#xD;&#xA;        };&#xD;&#xA;        this.onClick = () => this.setState(prevState => ({&#xD;&#xA;          a: prevState.a + 1&#xD;&#xA;        }));&#xD;&#xA;      }&#xD;&#xA;      render() {&#xD;&#xA;        console.log('Render default');&#xD;&#xA;        return <div id="test" onClick = {&#xD;&#xA;          this.onClick&#xD;&#xA;        } > DOM Updating: {&#xD;&#xA;          this.state.a&#xD;&#xA;        } < /div>;&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;    class Test1 extends React.Component {&#xD;&#xA;      constructor(props) {&#xD;&#xA;        super(props);&#xD;&#xA;        this.state = {&#xD;&#xA;          a: 1,&#xD;&#xA;        };&#xD;&#xA;        this.onClick = () => this.setState(prevState => ({&#xD;&#xA;          a: 1&#xD;&#xA;        }));&#xD;&#xA;      }&#xD;&#xA;      render() {&#xD;&#xA;        console.log('Render 1');&#xD;&#xA;        return <div id="test1" onClick = {&#xD;&#xA;          this.onClick&#xD;&#xA;        } > DOM not updating: {&#xD;&#xA;          this.state.a&#xD;&#xA;        } < /div>;&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;    class Test2 extends React.Component {&#xD;&#xA;      constructor(props) {&#xD;&#xA;        super(props);&#xD;&#xA;        this.state = bla;&#xD;&#xA;        this.onClick = () => {&#xD;&#xA;          const mutating = this.state;&#xD;&#xA;          mutating.a = this.state.a + 1;&#xD;&#xA;          this.setState(mutating);&#xD;&#xA;        };&#xD;&#xA;      }&#xD;&#xA;      render() {&#xD;&#xA;        console.log('Render 2');&#xD;&#xA;        return <div id="test2" onClick = {&#xD;&#xA;          this.onClick&#xD;&#xA;        } > DOM updating with mutation: {&#xD;&#xA;          this.state.a&#xD;&#xA;        } < /div>;&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;    ReactDOM.render( < div > < Test / > < Test1 / > < Test2 / > < /div>, document.getElementById('root'));