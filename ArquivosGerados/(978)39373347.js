    import android.app.Activity;&#xD;&#xA;    import android.graphics.Bitmap;&#xD;&#xA;    import android.support.design.widget.TabLayout;&#xD;&#xA;    import android.support.design.widget.FloatingActionButton;&#xD;&#xA;    import android.support.design.widget.Snackbar;&#xD;&#xA;    import android.support.v7.app.AppCompatActivity;&#xD;&#xA;    import android.support.v7.widget.Toolbar;&#xD;&#xA;    import android.support.v4.app.Fragment;&#xD;&#xA;    import android.support.v4.app.FragmentManager;&#xD;&#xA;    import android.support.v4.app.FragmentPagerAdapter;&#xD;&#xA;    import android.support.v4.view.ViewPager;&#xD;&#xA;    import android.os.Bundle;&#xD;&#xA;    import android.view.KeyEvent;&#xD;&#xA;    import android.view.LayoutInflater;&#xD;&#xA;    import android.view.Menu;&#xD;&#xA;    import android.view.MenuItem;&#xD;&#xA;    import android.view.View;&#xD;&#xA;    import android.view.ViewGroup;&#xD;&#xA;    import android.webkit.WebSettings;&#xD;&#xA;    import android.webkit.WebView;&#xD;&#xA;    import android.webkit.WebViewClient;&#xD;&#xA;    import android.widget.TextView;&#xD;&#xA;    public class MainActivity extends AppCompatActivity {&#xD;&#xA;        /**&#xD;&#xA;         * The {@link android.support.v4.view.PagerAdapter} that will provide&#xD;&#xA;         * fragments for each of the sections. We use a&#xD;&#xA;         * {@link FragmentPagerAdapter} derivative, which will keep every&#xD;&#xA;         * loaded fragment in memory. If this becomes too memory intensive, it&#xD;&#xA;         * may be best to switch to a&#xD;&#xA;         * {@link android.support.v4.app.FragmentStatePagerAdapter}.&#xD;&#xA;         */&#xD;&#xA;        private SectionsPagerAdapter mSectionsPagerAdapter;&#xD;&#xA;        /**&#xD;&#xA;         * The {@link ViewPager} that will host the section contents.&#xD;&#xA;         */&#xD;&#xA;        private ViewPager mViewPager;&#xD;&#xA;        @Override&#xD;&#xA;        protected void onCreate(Bundle savedInstanceState) {&#xD;&#xA;            super.onCreate(savedInstanceState);&#xD;&#xA;            setContentView(R.layout.activity_main);&#xD;&#xA;            Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);&#xD;&#xA;            setSupportActionBar(toolbar);&#xD;&#xA;            // Create the adapter that will return a fragment for each of the three&#xD;&#xA;            // primary sections of the activity.&#xD;&#xA;            mSectionsPagerAdapter = new SectionsPagerAdapter(getSupportFragmentManager());&#xD;&#xA;            // Set up the ViewPager with the sections adapter.&#xD;&#xA;            mViewPager = (ViewPager) findViewById(R.id.container);&#xD;&#xA;            mViewPager.setAdapter(mSectionsPagerAdapter);&#xD;&#xA;            TabLayout tabLayout = (TabLayout) findViewById(R.id.tabs);&#xD;&#xA;            tabLayout.setupWithViewPager(mViewPager);&#xD;&#xA;            //set the icons for the tabs after the  tablayout.setupWithViewPager(ViewPager)&#xD;&#xA;            int number_of_tabs = 5; //this is the fixed number of tabs in the tablayout, as returned by *SectionsPagerAdapter.getCount()*&#xD;&#xA;            final int[] tabIcons = new int[]{R.drawable.ic_format_list_bulleted_white_48dp, R.drawable.ic_add_location_white_48dp, R.drawable.ic_public_white_48dp, R.drawable.ic_share_white_48dp, R.drawable.ic_info_white_24dp};&#xD;&#xA;            for(int i=0;i<number_of_tabs;i++){&#xD;&#xA;                tabLayout.getTabAt(i).setIcon(tabIcons[i]);&#xD;&#xA;            }&#xD;&#xA;            FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab);&#xD;&#xA;            fab.setOnClickListener(new View.OnClickListener() {&#xD;&#xA;                @Override&#xD;&#xA;                public void onClick(View view) {&#xD;&#xA;                    Snackbar.make(view, "Replace with your own action", Snackbar.LENGTH_LONG)&#xD;&#xA;                            .setAction("Action", null).show();&#xD;&#xA;                }&#xD;&#xA;            });&#xD;&#xA;        }&#xD;&#xA;        @Override&#xD;&#xA;        public boolean onCreateOptionsMenu(Menu menu) {&#xD;&#xA;            // Inflate the menu; this adds items to the action bar if it is present.&#xD;&#xA;            getMenuInflater().inflate(R.menu.menu_main, menu);&#xD;&#xA;            return true;&#xD;&#xA;        }&#xD;&#xA;        @Override&#xD;&#xA;        public boolean onOptionsItemSelected(MenuItem item) {&#xD;&#xA;            // Handle action bar item clicks here. The action bar will&#xD;&#xA;            // automatically handle clicks on the Home/Up button, so long&#xD;&#xA;            // as you specify a parent activity in AndroidManifest.xml.&#xD;&#xA;            int id = item.getItemId();&#xD;&#xA;            //noinspection SimplifiableIfStatement&#xD;&#xA;            if (id == R.id.action_settings) {&#xD;&#xA;                return true;&#xD;&#xA;            }&#xD;&#xA;            return super.onOptionsItemSelected(item);&#xD;&#xA;        }&#xD;&#xA;        /**&#xD;&#xA;         * A placeholder fragment containing a simple view.&#xD;&#xA;         */&#xD;&#xA;        public static class PlaceholderFragment extends Fragment {&#xD;&#xA;            /**&#xD;&#xA;             * The fragment argument representing the section number for this&#xD;&#xA;             * fragment.&#xD;&#xA;             */&#xD;&#xA;            private static final String ARG_SECTION_NUMBER = "section_number";&#xD;&#xA;            public PlaceholderFragment() {&#xD;&#xA;            }&#xD;&#xA;            /**&#xD;&#xA;             * Returns a new instance of this fragment for the given section&#xD;&#xA;             * number.&#xD;&#xA;             */&#xD;&#xA;            public static PlaceholderFragment newInstance(int sectionNumber) {&#xD;&#xA;                PlaceholderFragment fragment = new PlaceholderFragment();&#xD;&#xA;                Bundle args = new Bundle();&#xD;&#xA;                args.putInt(ARG_SECTION_NUMBER, sectionNumber);&#xD;&#xA;                fragment.setArguments(args);&#xD;&#xA;                return fragment;&#xD;&#xA;            }&#xD;&#xA;            @Override&#xD;&#xA;            public View onCreateView(LayoutInflater inflater, ViewGroup container,&#xD;&#xA;                                     Bundle savedInstanceState) {&#xD;&#xA;                View rootView = inflater.inflate(R.layout.fragment_main, container, false);&#xD;&#xA;                return rootView;&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;        /**&#xD;&#xA;         * A {@link FragmentPagerAdapter} that returns a fragment corresponding to&#xD;&#xA;         * one of the sections/tabs/pages.&#xD;&#xA;         */&#xD;&#xA;        public class SectionsPagerAdapter extends FragmentPagerAdapter {&#xD;&#xA;            public SectionsPagerAdapter(FragmentManager fm) {&#xD;&#xA;                super(fm);&#xD;&#xA;            }&#xD;&#xA;            @Override&#xD;&#xA;            public Fragment getItem(int position) {&#xD;&#xA;                // getItem is called to instantiate the fragment for the given page.&#xD;&#xA;                // Return a PlaceholderFragment (defined as a static inner class below).&#xD;&#xA;                return PlaceholderFragment.newInstance(position + 1);&#xD;&#xA;            }&#xD;&#xA;            @Override&#xD;&#xA;            public int getCount() {&#xD;&#xA;                // Show 3 total pages.&#xD;&#xA;                return 5;&#xD;&#xA;            }&#xD;&#xA;            @Override&#xD;&#xA;            public CharSequence getPageTitle(int position) {&#xD;&#xA;                switch (position) {&#xD;&#xA;                    case 0:&#xD;&#xA;                        return "Programma";&#xD;&#xA;                    case 1:&#xD;&#xA;                        return "Mappe";&#xD;&#xA;                    case 2:&#xD;&#xA;                        return "Domes";&#xD;&#xA;                    case 3:&#xD;&#xA;                        return "Social";&#xD;&#xA;                    case 4:&#xD;&#xA;                        return "Info";&#xD;&#xA;                }&#xD;&#xA;                return null;&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    }