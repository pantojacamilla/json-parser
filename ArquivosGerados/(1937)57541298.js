    class SignupScreen extends React.Component{&#xD;&#xA;        constructor(props){        &#xD;&#xA;            super(props);        &#xD;&#xA;            this.state = {&#xD;&#xA;                firstName: '',&#xD;&#xA;                lastName: '',&#xD;&#xA;                email: '',&#xD;&#xA;                password: '',&#xD;&#xA;                mobile: '',&#xD;&#xA;                reCheck: false,&#xD;&#xA;                flag: false   &#xD;&#xA;            }&#xD;&#xA;        }    &#xD;&#xA;        static navigationOptions = {&#xD;&#xA;            title: "Signup for NDRT 24"&#xD;&#xA;        }        &#xD;&#xA;        componentDidMount(){&#xD;&#xA;            if (this.props.auth.token != "" || this.props.auth.token != null) this.props.navigation.navigate("LoginScreen")&#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        render(){&#xD;&#xA;            return(&#xD;&#xA;                <Container style={styles.signupScreen}>                &#xD;&#xA;                    <Content padder>                    &#xD;&#xA;                        <Form>&#xD;&#xA;                            <Row>&#xD;&#xA;                                <Col>&#xD;&#xA;                                    <Item floatingLabel>&#xD;&#xA;                                        <Label>First Name</Label>&#xD;&#xA;                                        <Input autoCorrect={false} autoCapitalize="none" onChangeText={(text)=>this.handleFirstName(text)} />&#xD;&#xA;                                    </Item>&#xD;&#xA;                                </Col>&#xD;&#xA;                                <Col>&#xD;&#xA;                                    <Item floatingLabel>&#xD;&#xA;                                        <Label>Last Name</Label>&#xD;&#xA;                                        <Input autoCorrect={false} autoCapitalize="none" onChangeText={(text)=>this.handleLastName(text)} />&#xD;&#xA;                                    </Item>&#xD;&#xA;                                </Col>&#xD;&#xA;                            </Row>&#xD;&#xA;                            <Item floatingLabel>&#xD;&#xA;                                <Label>Enter Password</Label>&#xD;&#xA;                                <Input secureTextEntry autoCorrect={false} autoCapitalize="none" onChangeText={(text)=>this.handlePassword(text)} />&#xD;&#xA;                            </Item>&#xD;&#xA;                            <Item floatingLabel style={!(this.state.reCheck)?styles.redBox:styles.normal}>&#xD;&#xA;                                {(this.state.reCheck)?<Label><Text style={{color:"green"}}>Passwords Match</Text></Label>:<Label style={{color:"red"}}>Confirm password : Passwords do not match</Label>}&#xD;&#xA;                                <Input secureTextEntry autoCorrect={false} onChangeText={(text)=>this.checkPassword(text)} autoCapitalize="none" />&#xD;&#xA;                            </Item>                  &#xD;&#xA;                            <Item floatingLabel>&#xD;&#xA;                                <Label>Mobile Number</Label>&#xD;&#xA;                                <Input  onChangeText={(text)=>this.handleMobile(text)} />&#xD;&#xA;                            </Item>&#xD;&#xA;                            <Item floatingLabel>&#xD;&#xA;                                <Label>Email Address</Label>&#xD;&#xA;                                <Input autoCorrect={false} autoCapitalize="none" onChangeText={(text)=>this.handleEmail(text)} />&#xD;&#xA;                            </Item>&#xD;&#xA;                            <Button onPress={()=>this.handleSubmit()} style={styles.nextButton} full disabled={!this.state.flag}><Text style={styles.buttonText}>Next</Text></Button>&#xD;&#xA;                            &#xD;&#xA;                            <View style={styles.infoText}>&#xD;&#xA;                                <Text>By clicking on Next, you will agree to our terms and conditions. You will be asked about your business details to complete the signup process.</Text>&#xD;&#xA;                            </View>                        &#xD;&#xA;                        </Form>&#xD;&#xA;                    </Content>&#xD;&#xA;                </Container>&#xD;&#xA;            )&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;    const styles = StyleSheet.create({&#xD;&#xA;        redCheck:{&#xD;&#xA;            color: "red"&#xD;&#xA;        },&#xD;&#xA;        infoText:{&#xD;&#xA;            marginTop: 10,&#xD;&#xA;            padding: 5&#xD;&#xA;        },&#xD;&#xA;        nextButton:{&#xD;&#xA;            marginTop:30&#xD;&#xA;        },&#xD;&#xA;        signupScreen:{&#xD;&#xA;            backgroundColor: "#F0F3F4"&#xD;&#xA;        },&#xD;&#xA;        buttonText: {&#xD;&#xA;            color:"white"&#xD;&#xA;        }&#xD;&#xA;    })&#xD;&#xA;    const mapStateToProps = (state) =>{&#xD;&#xA;        return {&#xD;&#xA;            auth: state.authReducer&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;    const mapDispatchToProps = (dispatch) =>{&#xD;&#xA;        return {&#xD;&#xA;            setToken: (token)=>{&#xD;&#xA;                dispatch({&#xD;&#xA;                    type: "SIGNIN",&#xD;&#xA;                    payload: token&#xD;&#xA;                })&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;    export default connect(mapStateToProps,mapDispatchToProps)(SignupScreen)