    function autocomplete(inp, arr) {&#xD;&#xA;      /*the autocomplete function takes two arguments,&#xD;&#xA;      the text field element and an array of possible autocompleted values:*/&#xD;&#xA;      var currentFocus;&#xD;&#xA;      /*execute a function when someone writes in the text field:*/&#xD;&#xA;      inp.addEventListener("input", function(e) {&#xD;&#xA;          var a, b, i, val = this.value;&#xD;&#xA;          /*close any already open lists of autocompleted values*/&#xD;&#xA;          closeAllLists();&#xD;&#xA;          if (!val) { return false;}&#xD;&#xA;          currentFocus = -1;&#xD;&#xA;          /*create a DIV element that will contain the items (values):*/&#xD;&#xA;          a = document.createElement("DIV");&#xD;&#xA;          a.setAttribute("id", this.id + "autocomplete-list");&#xD;&#xA;          a.setAttribute("class", "autocomplete-items");&#xD;&#xA;          /*append the DIV element as a child of the autocomplete container:*/&#xD;&#xA;          this.parentNode.appendChild(a);&#xD;&#xA;          /*for each item in the array...*/&#xD;&#xA;          for (i = 0; i < arr.length; i++) {&#xD;&#xA;            /*check if the item starts with the same letters as the text field value:*/&#xD;&#xA;            if (arr[i].substr(0, val.length).toUpperCase() === val.toUpperCase()) {&#xD;&#xA;              /*create a DIV element for each matching element:*/&#xD;&#xA;              b = document.createElement("DIV");&#xD;&#xA;              /*make the matching letters bold:*/&#xD;&#xA;              b.innerHTML = "<strong>" + arr[i].substr(0, val.length) + "</strong>";&#xD;&#xA;              b.innerHTML += arr[i].substr(val.length);&#xD;&#xA;              /*insert a input field that will hold the current array item's value:*/&#xD;&#xA;              b.innerHTML += "<input type='hidden' value='" + arr[i] + "'>";&#xD;&#xA;              /*execute a function when someone clicks on the item value (DIV element):*/&#xD;&#xA;              b.addEventListener("click", function(e) {&#xD;&#xA;                  /*insert the value for the autocomplete text field:*/&#xD;&#xA;                  inp.value = this.getElementsByTagName("input")[0].value;&#xD;&#xA;                  /*close the list of autocompleted values,&#xD;&#xA;                  (or any other open lists of autocompleted values:*/&#xD;&#xA;                  closeAllLists();&#xD;&#xA;              });&#xD;&#xA;              a.appendChild(b);&#xD;&#xA;            }&#xD;&#xA;          }&#xD;&#xA;      });&#xD;&#xA;      /*execute a function presses a key on the keyboard:*/&#xD;&#xA;      inp.addEventListener("keydown", function(e) {&#xD;&#xA;          var x = document.getElementById(this.id + "autocomplete-list");&#xD;&#xA;          if (x) x = x.getElementsByTagName("div");&#xD;&#xA;          if (e.keyCode == 40) {&#xD;&#xA;            /*If the arrow DOWN key is pressed,&#xD;&#xA;            increase the currentFocus variable:*/&#xD;&#xA;            currentFocus++;&#xD;&#xA;            /*and and make the current item more visible:*/&#xD;&#xA;            addActive(x);&#xD;&#xA;          } else if (e.keyCode == 38) { //up&#xD;&#xA;            /*If the arrow UP key is pressed,&#xD;&#xA;            decrease the currentFocus variable:*/&#xD;&#xA;            currentFocus--;&#xD;&#xA;            /*and and make the current item more visible:*/&#xD;&#xA;            addActive(x);&#xD;&#xA;          } else if (e.keyCode == 13) {&#xD;&#xA;            /*If the ENTER key is pressed, prevent the form from being submitted,*/&#xD;&#xA;            e.preventDefault();&#xD;&#xA;            if (currentFocus > -1) {&#xD;&#xA;              /*and simulate a click on the "active" item:*/&#xD;&#xA;              if (x) x[currentFocus].click();&#xD;&#xA;            }&#xD;&#xA;          }&#xD;&#xA;      });&#xD;&#xA;      function addActive(x) {&#xD;&#xA;        /*a function to classify an item as "active":*/&#xD;&#xA;        if (!x) return false;&#xD;&#xA;        /*start by removing the "active" class on all items:*/&#xD;&#xA;        removeActive(x);&#xD;&#xA;        if (currentFocus >= x.length) currentFocus = 0;&#xD;&#xA;        if (currentFocus < 0) currentFocus = (x.length - 1);&#xD;&#xA;        /*add class "autocomplete-active":*/&#xD;&#xA;        x[currentFocus].classList.add("autocomplete-active");&#xD;&#xA;      }&#xD;&#xA;      function removeActive(x) {&#xD;&#xA;        /*a function to remove the "active" class from all autocomplete items:*/&#xD;&#xA;        for (var i = 0; i < x.length; i++) {&#xD;&#xA;          x[i].classList.remove("autocomplete-active");&#xD;&#xA;        }&#xD;&#xA;      }&#xD;&#xA;      function closeAllLists(elmnt) {&#xD;&#xA;        /*close all autocomplete lists in the document,&#xD;&#xA;        except the one passed as an argument:*/&#xD;&#xA;        var x = document.getElementsByClassName("autocomplete-items");&#xD;&#xA;        for (var i = 0; i < x.length; i++) {&#xD;&#xA;          if (elmnt != x[i] && elmnt != inp) {&#xD;&#xA;            x[i].parentNode.removeChild(x[i]);&#xD;&#xA;          }&#xD;&#xA;        }&#xD;&#xA;      }&#xD;&#xA;      /*execute a function when someone clicks in the document:*/&#xD;&#xA;      document.addEventListener("click", function (e) {&#xD;&#xA;          closeAllLists(e.target);&#xD;&#xA;      });&#xD;&#xA;    }&#xD;&#xA;    /*An array containing all the property names:*/&#xD;&#xA;    var properties = ["Aigue Marine 10","Aigue Marine 9","Alizés","Amirauté","Arc En Ciel II 295","Belle du Marais","Bien Etre","Bleuets","Bouton d Or","Bruyeres","Calumet","Cigales 15","Clé des Pins","Clémenceau ","Coquelicot"];&#xD;&#xA;    /*initiate the autocomplete function on the "propertynames" element, and pass along the properties array as possible autocomplete values:*/&#xD;&#xA;    autocomplete(document.getElementById("propertynames"), properties);