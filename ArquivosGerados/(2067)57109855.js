    $.ajax({&#xD;&#xA;      url: 'https://cdn.rawgit.com/highcharts/highcharts/v6.0.4/samples/data/world-population-history.csv',&#xD;&#xA;      success: function() {&#xD;&#xA;        var jsondata = {&#xD;&#xA;          "data": [{&#xD;&#xA;            "value": "8",&#xD;&#xA;            "code": "in",&#xD;&#xA;            "name": "india",&#xD;&#xA;            "testdata": [{&#xD;&#xA;              "vcount": "3"&#xD;&#xA;            }, {&#xD;&#xA;              "vcount": null&#xD;&#xA;            }, {&#xD;&#xA;              "vcount": "5"&#xD;&#xA;            }]&#xD;&#xA;          }, {&#xD;&#xA;            "value": "15",&#xD;&#xA;            "code": "us",&#xD;&#xA;            "name": "united states",&#xD;&#xA;            "testdata": [{&#xD;&#xA;              "vcount": "9"&#xD;&#xA;            }, {&#xD;&#xA;              "vcount": "2"&#xD;&#xA;            }, {&#xD;&#xA;              "vcount": "4"&#xD;&#xA;            }]&#xD;&#xA;          }, {&#xD;&#xA;            "value": "9",&#xD;&#xA;            "code": "ca",&#xD;&#xA;            "name": "canada",&#xD;&#xA;            "testdata": [{&#xD;&#xA;              "vcount": "2"&#xD;&#xA;            }, {&#xD;&#xA;              "vcount": "1"&#xD;&#xA;            }, {&#xD;&#xA;              "vcount": "6"&#xD;&#xA;            }]&#xD;&#xA;          }]&#xD;&#xA;        }&#xD;&#xA;        var mapChart;&#xD;&#xA;        var countryChart;&#xD;&#xA;        var graphdata = [];&#xD;&#xA;        var graphdataf = [];&#xD;&#xA;        var valuecount;&#xD;&#xA;        var countries = {};&#xD;&#xA;        $.each(jsondata.data, function(i, item) {&#xD;&#xA;          var graphval = [];&#xD;&#xA;          var value = item.value;&#xD;&#xA;          var code = item.code;&#xD;&#xA;          var name = item.name;&#xD;&#xA;          graphval.push(code);&#xD;&#xA;          graphval.push(value);&#xD;&#xA;          graphdata.push(graphval);&#xD;&#xA;          $.each(item.testdata, function(j, itemval) {});&#xD;&#xA;          &#xD;&#xA;          countries[item.code] = {&#xD;&#xA;            name: item.name,&#xD;&#xA;            code3: item.code,&#xD;&#xA;            data: item.testdata&#xD;&#xA;          };&#xD;&#xA;        });&#xD;&#xA;        var data = [];&#xD;&#xA;        for (var code3 in countries) {&#xD;&#xA;          if (countries.hasOwnProperty(code3)) {&#xD;&#xA;            $.each(countries[code3].data, function(j, itemval) {&#xD;&#xA;              //var graphvaldata = [];&#xD;&#xA;              var value = itemval.vcount;&#xD;&#xA;              data.push({&#xD;&#xA;                name: countries[code3].name,&#xD;&#xA;                code3: code3,&#xD;&#xA;                value: value,&#xD;&#xA;              });&#xD;&#xA;            });&#xD;&#xA;          }&#xD;&#xA;        }&#xD;&#xA;        // Wrap point.select to get to the total selected points&#xD;&#xA;        Highcharts.wrap(Highcharts.Point.prototype, 'select', function(proceed) {&#xD;&#xA;          proceed.apply(this, Array.prototype.slice.call(arguments, 1));&#xD;&#xA;          var points = mapChart.getSelectedPoints();&#xD;&#xA;          if (points.length) {&#xD;&#xA;            if (points.length === 1) {&#xD;&#xA;              $('#info #flag').attr('class', 'flag ' + points[0].flag);&#xD;&#xA;              $('#info h2').html(points[0].name);&#xD;&#xA;            } else {&#xD;&#xA;              $('#info #flag').attr('class', 'flag');&#xD;&#xA;              $('#info h2').html('Comparing countries');&#xD;&#xA;            }&#xD;&#xA;            &#xD;&#xA;            $('#info .subheader').html('<h4>Historical population</h4><small><em>Shift + Click on map to compare countries</em></small>');&#xD;&#xA;            if (!countryChart) {&#xD;&#xA;              countryChart = Highcharts.chart('country-chart', {&#xD;&#xA;                chart: {&#xD;&#xA;                  height: 250,&#xD;&#xA;                  spacingLeft: 0&#xD;&#xA;                },&#xD;&#xA;                credits: {&#xD;&#xA;                  enabled: false&#xD;&#xA;                },&#xD;&#xA;                title: {&#xD;&#xA;                  text: null&#xD;&#xA;                },&#xD;&#xA;                subtitle: {&#xD;&#xA;                  text: null&#xD;&#xA;                },&#xD;&#xA;                xAxis: {&#xD;&#xA;                  tickPixelInterval: 50,&#xD;&#xA;                  crosshair: true,&#xD;&#xA;                  categories: ['cat1', 'cat2', 'cat3']&#xD;&#xA;                },&#xD;&#xA;                yAxis: {&#xD;&#xA;                  title: null,&#xD;&#xA;                  opposite: true&#xD;&#xA;                },&#xD;&#xA;                tooltip: {&#xD;&#xA;                  split: true&#xD;&#xA;                },&#xD;&#xA;                plotOptions: {&#xD;&#xA;                  series: {&#xD;&#xA;                    animation: {&#xD;&#xA;                      duration: 500&#xD;&#xA;                    },&#xD;&#xA;                    marker: {&#xD;&#xA;                      enabled: false&#xD;&#xA;                    }&#xD;&#xA;                  }&#xD;&#xA;                }&#xD;&#xA;              });&#xD;&#xA;            }&#xD;&#xA;            &#xD;&#xA;            $.each(points, function(i, point) {&#xD;&#xA;              var data,&#xD;&#xA;                dataRaw = countries[point['hc-key']].data;&#xD;&#xA;              if (dataRaw) {&#xD;&#xA;                data = dataRaw.map((p) => parseInt(p.vcount));&#xD;&#xA;              }&#xD;&#xA;              // Update&#xD;&#xA;              if (countryChart.series[i]) {&#xD;&#xA;                countryChart.series[i].update({&#xD;&#xA;                  name: this.name,&#xD;&#xA;                  data: data,&#xD;&#xA;                  type: points.length > 1 ? 'column' : 'column'&#xD;&#xA;                }, false);&#xD;&#xA;              } else {&#xD;&#xA;                countryChart.addSeries({&#xD;&#xA;                  name: this.name,&#xD;&#xA;                  data: data,&#xD;&#xA;                  type: points.length > 1 ? 'column' : 'column'&#xD;&#xA;                }, false);&#xD;&#xA;              }&#xD;&#xA;            });&#xD;&#xA;            &#xD;&#xA;            while (countryChart.series.length > points.length) {&#xD;&#xA;              countryChart.series[countryChart.series.length - 1].remove(false);&#xD;&#xA;            }&#xD;&#xA;            countryChart.redraw();&#xD;&#xA;          } else {&#xD;&#xA;            $('#info #flag').attr('class', '');&#xD;&#xA;            $('#info h2').html('');&#xD;&#xA;            $('#info .subheader').html('');&#xD;&#xA;            if (countryChart) {&#xD;&#xA;              countryChart = countryChart.destroy();&#xD;&#xA;            }&#xD;&#xA;          }&#xD;&#xA;        });&#xD;&#xA;        &#xD;&#xA;        // Initiate the map chart&#xD;&#xA;        mapChart = Highcharts.mapChart('container', {&#xD;&#xA;          title: {&#xD;&#xA;            text: 'Population history by country'&#xD;&#xA;          },&#xD;&#xA;          subtitle: {&#xD;&#xA;            text: 'Source: <a href="http://data.worldbank.org/indicator/SP.POP.TOTL/countries/1W?display=default">The World Bank</a>'&#xD;&#xA;          },&#xD;&#xA;          mapNavigation: {&#xD;&#xA;            enabled: true,&#xD;&#xA;            buttonOptions: {&#xD;&#xA;              verticalAlign: 'bottom'&#xD;&#xA;            }&#xD;&#xA;          },&#xD;&#xA;          colorAxis: {&#xD;&#xA;            type: 'logarithmic',&#xD;&#xA;            endOnTick: false,&#xD;&#xA;            startOnTick: false,&#xD;&#xA;            minColor: '#fff',&#xD;&#xA;            maxColor: '#3D1C5C',&#xD;&#xA;            min: 5,&#xD;&#xA;            max: 15,&#xD;&#xA;          },&#xD;&#xA;          tooltip: {&#xD;&#xA;            footerFormat: '<span style="font-size: 10px">(Click for details)</span>'&#xD;&#xA;          },&#xD;&#xA;          credits: {&#xD;&#xA;            enabled: false&#xD;&#xA;          },&#xD;&#xA;          series: [{&#xD;&#xA;            data: graphdata,&#xD;&#xA;            mapData: Highcharts.maps['custom/world'],&#xD;&#xA;            joinBy: 'hc-key',&#xD;&#xA;            name: 'Total Play',&#xD;&#xA;            allowPointSelect: true,&#xD;&#xA;            cursor: 'pointer',&#xD;&#xA;            states: {&#xD;&#xA;              select: {&#xD;&#xA;                color: '#a4edba',&#xD;&#xA;                borderColor: 'black',&#xD;&#xA;                dashStyle: 'shortdot'&#xD;&#xA;              }&#xD;&#xA;            }&#xD;&#xA;          }]&#xD;&#xA;        });&#xD;&#xA;      }&#xD;&#xA;    });