    var ctx;&#xD;&#xA;        var hero;&#xD;&#xA;        var enemy;&#xD;&#xA;        var beams = [];&#xD;&#xA;        var beam_hitting = false;&#xD;&#xA;        var continuous_hit = false;&#xD;&#xA;        var count = 0;&#xD;&#xA;        var canvas_w = 500, canvas_y= 700;&#xD;&#xA;        var keycode = NaN;&#xD;&#xA;        var laser_degree = 200;&#xD;&#xA;        function init(){&#xD;&#xA;          createCanvas();&#xD;&#xA;          createMainHero();&#xD;&#xA;          createEnemy();&#xD;&#xA;          draw();&#xD;&#xA;          mainRoutine();&#xD;&#xA;        }&#xD;&#xA;        function mainRoutine(){&#xD;&#xA;          count++;&#xD;&#xA;          ctx.clearRect(0, 0, canvas_w, canvas_y);&#xD;&#xA;          // laserTest();&#xD;&#xA;          hero.move(keycode);&#xD;&#xA;          enemyUpdate();&#xD;&#xA;          // hero.setBullets();&#xD;&#xA;          // hero.moveBullets();&#xD;&#xA;          draw();&#xD;&#xA;          window.setTimeout(mainRoutine, 7);&#xD;&#xA;        }&#xD;&#xA;        function createCanvas(){&#xD;&#xA;          var canvas = document.createElement("canvas");&#xD;&#xA;          canvas.id = "canvas";&#xD;&#xA;          canvas.width = canvas_w;&#xD;&#xA;          canvas.height = canvas_y;&#xD;&#xA;          document.body.appendChild(canvas);&#xD;&#xA;        }&#xD;&#xA;        function createMainHero(){&#xD;&#xA;          hero = new Hero();&#xD;&#xA;        }&#xD;&#xA;        function createEnemy(){&#xD;&#xA;          enemy = new Enemy;&#xD;&#xA;        }&#xD;&#xA;        function Hero(){&#xD;&#xA;          this.w = this.h = 25,&#xD;&#xA;          this.x = canvas_w/2 - this.w/2,&#xD;&#xA;          this.y = canvas_y - this.h,&#xD;&#xA;          this.dx = this.dy = 2.5;&#xD;&#xA;          this.bullets = [];&#xD;&#xA;          this.move = function(key){&#xD;&#xA;            switch(key){&#xD;&#xA;              case 37: if (hero.x > 0) {hero.x -= this.dx;} break;&#xD;&#xA;              case 38: if (hero.y > 0) {hero.y -= this.dy;} break;&#xD;&#xA;              case 39: if (hero.x < canvas_w - hero.w) {hero.x += this.dx;} break;&#xD;&#xA;              case 40: if (hero.y < canvas_y - hero.h) {hero.y += this.dy;} break;&#xD;&#xA;            }&#xD;&#xA;          };&#xD;&#xA;          this.setBullets = function(){&#xD;&#xA;            if (count % 20 === 0) {&#xD;&#xA;              var w = h = 8;&#xD;&#xA;              var dx = dy = 5;&#xD;&#xA;              var x = hero.x + hero.w/2 - w/2;&#xD;&#xA;              var y = hero.y;&#xD;&#xA;              hero.bullets.push({x: x, y: y, w: w, h: h, dx: dx, dy: dy, moving:true});&#xD;&#xA;            }&#xD;&#xA;          };&#xD;&#xA;          this.moveBullets = function(){&#xD;&#xA;          for (var i = 0; i < this.bullets.length; i++) {&#xD;&#xA;            if (this.bullets[i].y < 0) {&#xD;&#xA;              this.bullets[i].moving = false;&#xD;&#xA;              continue;&#xD;&#xA;            }&#xD;&#xA;            if (this.bullets[i].moving === false) {&#xD;&#xA;              continue;&#xD;&#xA;            }&#xD;&#xA;            this.bullets[i].y -= this.bullets[i].dy;&#xD;&#xA;            if (this.bullets[i].y < -100) {this.bullets.splice(i, 1)}&#xD;&#xA;          }&#xD;&#xA;        }&#xD;&#xA;        }&#xD;&#xA;        function Enemy(){&#xD;&#xA;          this.w = this.h = 25;&#xD;&#xA;          this.x = canvas_w/2 - this.w/2;&#xD;&#xA;          this.y = 50;&#xD;&#xA;          this.bullets = [];&#xD;&#xA;          this.moving = false;&#xD;&#xA;          this.move_to = 0;&#xD;&#xA;          this.bullets_count = 0;&#xD;&#xA;          this.bullets_angle = 0;&#xD;&#xA;          this.current_skill = 1;&#xD;&#xA;          this.barrage_count = 0;&#xD;&#xA;          this.skill = function(){&#xD;&#xA;            enemySkill();&#xD;&#xA;          };&#xD;&#xA;        }&#xD;&#xA;        function enemyUpdate(){&#xD;&#xA;          function move(){&#xD;&#xA;            function changeDirection(){&#xD;&#xA;              var options = ["left", "right", "up", "down"];&#xD;&#xA;              var id;&#xD;&#xA;              if (enemy.x <= 50) {id = options.indexOf("left"); options.splice(id, 1);}&#xD;&#xA;              if (enemy.x >= 450) {id = options.indexOf("right");options.splice(id, 1);}&#xD;&#xA;              if (enemy.y <= 50) {id = options.indexOf("up");options.splice(id, 1);}&#xD;&#xA;              if (enemy.y >= 200) {id = options.indexOf("down");options.splice(id, 1);}&#xD;&#xA;              var rand = Math.floor(Math.random() * options.length);&#xD;&#xA;              enemy.moving = options[rand];&#xD;&#xA;              switch(enemy.moving){&#xD;&#xA;                case "left": enemy.move_to = enemy.x - 150 ; break;&#xD;&#xA;                case "right": enemy.move_to = enemy.x + 150 ; break;&#xD;&#xA;                case "up": enemy.move_to = enemy.y - 150 ; break;&#xD;&#xA;                case "down": enemy.move_to = enemy.y + 150 ; break;&#xD;&#xA;              }&#xD;&#xA;            } /* end changeDirection() */&#xD;&#xA;            if (count % 800 === 0) {changeDirection(); console.log("changing");}&#xD;&#xA;            switch(enemy.moving){&#xD;&#xA;              case "left": if (enemy.x > 50 && enemy.x > enemy.move_to) {enemy.x -= 0.5;} break;&#xD;&#xA;              case "right": if (enemy.x < 450 && enemy.x < enemy.move_to) {enemy.x += 0.5;} break;&#xD;&#xA;              case "up": if (enemy.y > 50 && enemy.y > enemy.move_to) {enemy.y -= 0.5; } break;&#xD;&#xA;              case "down": if (enemy.y < 200 && enemy.y < enemy.move_to) {enemy.y += 0.5; } break;&#xD;&#xA;            }&#xD;&#xA;          } /* end move()*/&#xD;&#xA;          move();&#xD;&#xA;          enemy.skill();&#xD;&#xA;        } /* end enemyUpdate() */&#xD;&#xA;        function enemySkill(){&#xD;&#xA;          // console.log("enemy skill");&#xD;&#xA;          function setBullets(){&#xD;&#xA;            var prev_status = enemy.bullets_count === 0 ? 500 : enemy.bullets[enemy.bullets.length - 1]["radius"];&#xD;&#xA;            if (prev_status >25) {&#xD;&#xA;               // console.log("bullets set");&#xD;&#xA;              var center_x = enemy.x + enemy.w/2;&#xD;&#xA;              var center_y = enemy.y + enemy.h/2;&#xD;&#xA;              var radius = 20;&#xD;&#xA;              var ceil = enemy.bullets.length === 0 ? 0 : enemy.bullets.length -1;&#xD;&#xA;              for (var angle = enemy.bullets_angle, i= ceil; angle < enemy.bullets_angle + 360; angle += 40, i++ ) {&#xD;&#xA;                // console.log("i: " + i);&#xD;&#xA;                var radian = angle * Math.PI / 180;&#xD;&#xA;                var set_x = center_x + radius * Math.cos(radian);&#xD;&#xA;                var set_y = center_y + radius * Math.sin(radian);&#xD;&#xA;                // console.log("angle: " + /angle + "set_x: " + set_x + "set_y: " + set_y);&#xD;&#xA;                enemy.bullets.push({"x": set_x, "y": set_y, "moving": true, "radius": radius, "center_x": center_x, "center_y": center_y, "w": 25, "h": 25, "radian": radian});&#xD;&#xA;                if (enemy.bullets_count === 0) {enemy.bullets_count++;}&#xD;&#xA;                // console.log(enemy.bullets[0][i]["x"]);&#xD;&#xA;             }&#xD;&#xA;             enemy.bullets_angle += 10;&#xD;&#xA;             enemy.barrage_count ++;&#xD;&#xA;             if (enemy.barrage_count % 100 === 0) {&#xD;&#xA;               enemy.current_skill = 0;&#xD;&#xA;             }&#xD;&#xA;            }&#xD;&#xA;          } /* end setBullets */&#xD;&#xA;          function moveBullets(){&#xD;&#xA;            if (count % 4 ===0) {&#xD;&#xA;              for (var i = 0; i < enemy.bullets.length; i++) {&#xD;&#xA;                if (enemy.bullets[i]["moving"] === true) {&#xD;&#xA;                  var radian = enemy.bullets[i]["radian"];&#xD;&#xA;                  var center_x = enemy.bullets[i]["center_x"];&#xD;&#xA;                  var center_y = enemy.bullets[i]["center_y"];&#xD;&#xA;                  enemy.bullets[i]["radius"] += 5;&#xD;&#xA;                  var radius = enemy.bullets[i]["radius"];&#xD;&#xA;                  var set_x = center_x + radius * Math.cos(radian);&#xD;&#xA;                  var set_y = center_y + radius * Math.sin(radian);&#xD;&#xA;                  // console.log(set_y);&#xD;&#xA;                  enemy.bullets[i]["x"] = set_x;&#xD;&#xA;                  enemy.bullets[i]["y"] = set_y;&#xD;&#xA;                  if (enemy.bullets[i]["x"] < -100 || enemy.bullets[i]["x"] > canvas_w + 100 || enemy.bullets[i]["y"] < -100 || enemy.bullets[i]["y"] > canvas_y + 100 ) {&#xD;&#xA;                    // enemy.bullets[i]["moving"] = false;&#xD;&#xA;                    enemy.bullets.splice(i, 1);&#xD;&#xA;                  }&#xD;&#xA;                  }&#xD;&#xA;                }&#xD;&#xA;              }&#xD;&#xA;            }&#xD;&#xA;          if (enemy.current_skill === 1) {&#xD;&#xA;            setBullets();&#xD;&#xA;          }&#xD;&#xA;          moveBullets();&#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        function draw(){&#xD;&#xA;          var canvas = document.getElementById("canvas");&#xD;&#xA;          ctx = canvas.getContext("2d");&#xD;&#xA;          //hero&#xD;&#xA;          //ctx.fillStyle = "blue";&#xD;&#xA;          //ctx.fillRect(hero.x, hero.y ,hero.w, hero.h);&#xD;&#xA;          //enemy&#xD;&#xA;          //ctx.fillStyle = "red";&#xD;&#xA;          //ctx.fillRect(enemy.x, enemy.y ,enemy.w, enemy.h);&#xD;&#xA;          //heroの弾&#xD;&#xA;          ctx.fillStyle = "blue";&#xD;&#xA;          for (var i = 0; i < hero.bullets.length; i++) {&#xD;&#xA;            if (hero.bullets[i].moving === false) {&#xD;&#xA;              continue;&#xD;&#xA;            }&#xD;&#xA;            ctx.fillRect(hero.bullets[i].x, hero.bullets[i].y ,hero.bullets[i].w, hero.bullets[i].h);&#xD;&#xA;          }&#xD;&#xA;          //敵の弾&#xD;&#xA;          ctx.fillStyle = "red";&#xD;&#xA;          for (var i = 0; i < enemy.bullets.length; i++) {&#xD;&#xA;             ctx.fillStyle = "green";&#xD;&#xA;            if (enemy.bullets[i]["moving"] === false) {&#xD;&#xA;              continue;&#xD;&#xA;            }&#xD;&#xA;              ctx.beginPath();&#xD;&#xA;              ctx.arc(enemy.bullets[i]["x"], enemy.bullets[i]["y"], 15, 0, 2 * Math.PI, false);&#xD;&#xA;              ctx.closePath();&#xD;&#xA;              ctx.fill();&#xD;&#xA;          }&#xD;&#xA;        }&#xD;&#xA;        window.addEventListener("keydown", function(e){&#xD;&#xA;          switch(e.keyCode){&#xD;&#xA;            case 37: keycode = 37; break;&#xD;&#xA;            case 38: keycode = 38; break;&#xD;&#xA;            case 39: keycode = 39; break;&#xD;&#xA;            case 40: keycode = 40; break;&#xD;&#xA;          }&#xD;&#xA;        }, false);&#xD;&#xA;        window.addEventListener("keyup", function(e){&#xD;&#xA;          switch(e.keyCode){&#xD;&#xA;            case 37: keycode = NaN; break;&#xD;&#xA;            case 38: keycode = NaN; break;&#xD;&#xA;            case 39: keycode = NaN; break;&#xD;&#xA;            case 40: keycode = NaN; break;&#xD;&#xA;          }&#xD;&#xA;        }, false);&#xD;&#xA;        init();