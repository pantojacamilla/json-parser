    import javafx.event.ActionEvent;&#xD;&#xA;    import javafx.event.EventHandler;&#xD;&#xA;    import javafx.geometry.Insets;&#xD;&#xA;    import javafx.geometry.Pos;&#xD;&#xA;    import javafx.application.Application;&#xD;&#xA;    import javafx.beans.binding.Bindings;&#xD;&#xA;    import javafx.beans.property.DoubleProperty;&#xD;&#xA;    import javafx.beans.property.SimpleDoubleProperty;&#xD;&#xA;    import javafx.beans.value.WritableObjectValue;&#xD;&#xA;    import javafx.scene.Scene;&#xD;&#xA;    import javafx.scene.control.Button;&#xD;&#xA;    import javafx.scene.control.TextField;&#xD;&#xA;    import javafx.scene.layout.FlowPane;&#xD;&#xA;    import javafx.stage.Stage;&#xD;&#xA;    public class Calculator extends Application {&#xD;&#xA;    	&#xD;&#xA;    	private DoubleProperty value = new SimpleDoubleProperty();&#xD;&#xA;    	&#xD;&#xA;    	@Override&#xD;&#xA;    	public void start(Stage primaryStage) {&#xD;&#xA;    	&#xD;&#xA;    		FlowPane pane = new FlowPane();&#xD;&#xA;    		pane.setAlignment(Pos.CENTER);&#xD;&#xA;    		pane.setPadding(new Insets ( 30 , 20 , 30 , 20));&#xD;&#xA;    		pane.setHgap(5);&#xD;&#xA;    		pane.setVgap(5);&#xD;&#xA;    		pane.setMinWidth(400);&#xD;&#xA;    		pane.setPrefWidth(400);&#xD;&#xA;    		pane.setMaxWidth(400);&#xD;&#xA;    		&#xD;&#xA;    		TextField Rezultat = new TextField();&#xD;&#xA;    		Rezultat.setEditable(false);&#xD;&#xA;    		Rezultat.setAlignment(Pos.CENTER);&#xD;&#xA;    		Rezultat.setMinSize(336, 40);&#xD;&#xA;    		Rezultat.textProperty().bind(Bindings.format("%.0f" , value));&#xD;&#xA;    		pane.getChildren().add(Rezultat);&#xD;&#xA;    		&#xD;&#xA;    		Button sedmica = new Button("7");			&#xD;&#xA;    		Button osmica = new Button("8");&#xD;&#xA;    		Button devetka = new Button("9");&#xD;&#xA;    		Button plus = new Button("+");&#xD;&#xA;    		&#xD;&#xA;    			sedmica.setMinSize(80, 80);&#xD;&#xA;    			osmica.setMinSize(80, 80);&#xD;&#xA;    			devetka.setMinSize(80, 80);&#xD;&#xA;    			plus.setMinSize(80, 80);&#xD;&#xA;    	pane.getChildren().add(sedmica);&#xD;&#xA;    		sedmicaHandler handler7 = new sedmicaHandler();&#xD;&#xA;    		sedmica.setOnAction(handler7);&#xD;&#xA;    	pane.getChildren().add(osmica);&#xD;&#xA;    		osmicaHandler handler8 = new osmicaHandler();&#xD;&#xA;    		osmica.setOnAction(handler8);&#xD;&#xA;    	pane.getChildren().add(devetka);&#xD;&#xA;    		devetkaHandler handler9 = new devetkaHandler();&#xD;&#xA;    		devetka.setOnAction(handler9);&#xD;&#xA;    	pane.getChildren().add(plus);&#xD;&#xA;    		plusHandler handlerplus = new plusHandler();&#xD;&#xA;    		plus.setOnAction(handlerplus);&#xD;&#xA;    		&#xD;&#xA;    		Button cetvorka = new Button("4");&#xD;&#xA;    		Button petica = new Button("5");&#xD;&#xA;    		Button sestica = new Button("6");&#xD;&#xA;    		Button minus = new Button("-");&#xD;&#xA;    	&#xD;&#xA;    			cetvorka.setMinSize(80, 80);&#xD;&#xA;    			petica.setMinSize(80, 80);&#xD;&#xA;    			sestica.setMinSize(80, 80);&#xD;&#xA;    			minus.setMinSize(80, 80);&#xD;&#xA;    			&#xD;&#xA;    	pane.getChildren().add(cetvorka);&#xD;&#xA;    		cetvorkaHandler handler4 = new cetvorkaHandler();&#xD;&#xA;    		cetvorka.setOnAction(handler4);&#xD;&#xA;    	pane.getChildren().add(petica);&#xD;&#xA;    		peticaHandler handler5 = new peticaHandler();&#xD;&#xA;    		petica.setOnAction(handler5);&#xD;&#xA;    	pane.getChildren().add(sestica);&#xD;&#xA;    		sesticaHandler handler6 = new sesticaHandler();&#xD;&#xA;    		sestica.setOnAction(handler6);&#xD;&#xA;    	pane.getChildren().add(minus);&#xD;&#xA;    		minusHandler handlerminus = new minusHandler();&#xD;&#xA;    		minus.setOnAction(handlerminus);&#xD;&#xA;    	&#xD;&#xA;    		Button trica = new Button("3");&#xD;&#xA;    		Button dvica = new Button("2");&#xD;&#xA;    		Button jedinica = new Button("1");&#xD;&#xA;    		Button puta = new Button("*");&#xD;&#xA;    	&#xD;&#xA;    			trica.setMinSize(80, 80);&#xD;&#xA;    			dvica.setMinSize(80, 80);&#xD;&#xA;    			jedinica.setMinSize(80, 80);&#xD;&#xA;    			puta.setMinSize(80, 80);&#xD;&#xA;    		&#xD;&#xA;    	pane.getChildren().add(jedinica);&#xD;&#xA;    		jedinicaHandler handler1 = new jedinicaHandler();&#xD;&#xA;    		jedinica.setOnAction(handler1);&#xD;&#xA;    	pane.getChildren().add(dvica);&#xD;&#xA;    		dvicaHandler handler2 = new dvicaHandler();&#xD;&#xA;    		dvica.setOnAction(handler2);&#xD;&#xA;    	pane.getChildren().add(trica);&#xD;&#xA;    		tricaHandler handler3 = new tricaHandler();&#xD;&#xA;    		trica.setOnAction(handler3);&#xD;&#xA;    	pane.getChildren().add(puta);&#xD;&#xA;    		putaHandler handlerputa = new putaHandler();&#xD;&#xA;    		puta.setOnAction(handlerputa);&#xD;&#xA;    		&#xD;&#xA;    		Button nula = new Button("0");&#xD;&#xA;    		Button jednako = new Button("=");&#xD;&#xA;    		Button podijeljeno = new Button("/");&#xD;&#xA;    		Button EE = new Button ("EE");&#xD;&#xA;    			&#xD;&#xA;    			nula.setMinSize(80, 80);&#xD;&#xA;    			jednako.setMinSize(80, 80);&#xD;&#xA;    			podijeljeno.setMinSize(80, 80);&#xD;&#xA;    			EE.setMinSize(80, 80);&#xD;&#xA;    	&#xD;&#xA;    	pane.getChildren().add(EE);&#xD;&#xA;    		EEHandler handlerEE = new EEHandler();&#xD;&#xA;    		EE.setOnAction(handlerEE);&#xD;&#xA;    	pane.getChildren().add(nula);&#xD;&#xA;    		nulaHandler handler0 = new nulaHandler();&#xD;&#xA;    		nula.setOnAction(handler0);&#xD;&#xA;    	pane.getChildren().add(jednako);&#xD;&#xA;    		jednakoHandler handlerjednako = new jednakoHandler();&#xD;&#xA;    		jednako.setOnAction(handlerjednako);&#xD;&#xA;    	pane.getChildren().add(podijeljeno);&#xD;&#xA;    		podijeljenoHandler handlerpodijeljeno = new podijeljenoHandler();&#xD;&#xA;    		podijeljeno.setOnAction(handlerpodijeljeno);&#xD;&#xA;    	&#xD;&#xA;    	&#xD;&#xA;    		&#xD;&#xA;    	Scene scene = new Scene(pane);&#xD;&#xA;    	primaryStage.setTitle("Calculator");&#xD;&#xA;    	primaryStage.setScene(scene);&#xD;&#xA;    	primaryStage.show();&#xD;&#xA;    	&#xD;&#xA;    	}&#xD;&#xA;    	public static void main (String[] args)	{&#xD;&#xA;        Application.launch(args);  &#xD;&#xA;    	}&#xD;&#xA;    }&#xD;&#xA;    class nulaHandler implements EventHandler<ActionEvent>{&#xD;&#xA;    		@Override&#xD;&#xA;    	public void handle(ActionEvent e){&#xD;&#xA;    		value.set(0);&#xD;&#xA;    	}&#xD;&#xA;    }&#xD;&#xA;    class jedinicaHandler implements EventHandler<ActionEvent>{&#xD;&#xA;    		@Override&#xD;&#xA;    	public void handle(ActionEvent e){&#xD;&#xA;    		System.out.println("1");&#xD;&#xA;    	}&#xD;&#xA;    }			&#xD;&#xA;    class dvicaHandler implements EventHandler<ActionEvent>{&#xD;&#xA;    		@Override&#xD;&#xA;    	public void handle(ActionEvent e){&#xD;&#xA;    		System.out.println("2");&#xD;&#xA;    	}	&#xD;&#xA;    }&#xD;&#xA;    class tricaHandler implements EventHandler<ActionEvent>{&#xD;&#xA;    		@Override&#xD;&#xA;    	public void handle(ActionEvent e){&#xD;&#xA;    		System.out.println("3");&#xD;&#xA;    	}&#xD;&#xA;    }			&#xD;&#xA;    class cetvorkaHandler implements EventHandler<ActionEvent>{&#xD;&#xA;    		@Override&#xD;&#xA;    	public void handle(ActionEvent e){&#xD;&#xA;    		System.out.println("4");&#xD;&#xA;    	}&#xD;&#xA;    }&#xD;&#xA;    class peticaHandler implements EventHandler<ActionEvent>{&#xD;&#xA;    		@Override&#xD;&#xA;    	public void handle(ActionEvent e){&#xD;&#xA;    		System.out.println("5");&#xD;&#xA;    	}&#xD;&#xA;    }					&#xD;&#xA;    class sesticaHandler implements EventHandler<ActionEvent>{&#xD;&#xA;    		@Override&#xD;&#xA;    	public void handle(ActionEvent e){&#xD;&#xA;    		System.out.println("6");&#xD;&#xA;    	}&#xD;&#xA;    }						&#xD;&#xA;    class sedmicaHandler implements EventHandler<ActionEvent>{&#xD;&#xA;    		@Override&#xD;&#xA;    	public void handle(ActionEvent e){&#xD;&#xA;    		System.out.println("7");&#xD;&#xA;    	}&#xD;&#xA;    }							&#xD;&#xA;    class osmicaHandler implements EventHandler<ActionEvent>{&#xD;&#xA;    		@Override&#xD;&#xA;    	public void handle(ActionEvent e){&#xD;&#xA;    		System.out.println("8");&#xD;&#xA;    	}&#xD;&#xA;    }								&#xD;&#xA;    class devetkaHandler implements EventHandler<ActionEvent>{&#xD;&#xA;    		@Override&#xD;&#xA;    	public void handle(ActionEvent e){&#xD;&#xA;    		System.out.println("9");&#xD;&#xA;    	}&#xD;&#xA;    }									&#xD;&#xA;    class plusHandler implements EventHandler<ActionEvent>{&#xD;&#xA;    		@Override&#xD;&#xA;    	public void handle(ActionEvent e){&#xD;&#xA;    		System.out.println("+");&#xD;&#xA;    	}&#xD;&#xA;    }										&#xD;&#xA;    class minusHandler implements EventHandler<ActionEvent>{&#xD;&#xA;    		@Override&#xD;&#xA;    	public void handle(ActionEvent e){&#xD;&#xA;    		System.out.println("-");&#xD;&#xA;    	}&#xD;&#xA;    }											&#xD;&#xA;    class putaHandler implements EventHandler<ActionEvent>{&#xD;&#xA;    		@Override&#xD;&#xA;    	public void handle(ActionEvent e){&#xD;&#xA;    		System.out.println("*");&#xD;&#xA;    	}&#xD;&#xA;    }&#xD;&#xA;    class podijeljenoHandler implements EventHandler<ActionEvent>{&#xD;&#xA;    		@Override&#xD;&#xA;    	public void handle(ActionEvent e){&#xD;&#xA;    		System.out.println("/");&#xD;&#xA;    	}&#xD;&#xA;    }													&#xD;&#xA;    class jednakoHandler implements EventHandler<ActionEvent>{&#xD;&#xA;    		@Override&#xD;&#xA;    	public void handle(ActionEvent e){&#xD;&#xA;    		System.out.println("=");&#xD;&#xA;    	}&#xD;&#xA;    }														&#xD;&#xA;    class EEHandler implements EventHandler<ActionEvent>{&#xD;&#xA;    		@Override&#xD;&#xA;    	public void handle(ActionEvent e){&#xD;&#xA;    		System.out.println("EE");&#xD;&#xA;    	}&#xD;&#xA;    }