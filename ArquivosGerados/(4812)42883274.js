    import { Http, Response } from '@angular/http';&#xD;&#xA;    import {Injectable} from '@angular/core';&#xD;&#xA;    import 'rxjs/add/operator/map';&#xD;&#xA;    import 'rxjs/add/operator/do';&#xD;&#xA;    import 'rxjs/add/operator/catch';&#xD;&#xA;    import { Observable } from 'rxjs/Observable';&#xD;&#xA;    import { contentHeaders, apiUrl} from '../shared/headers';&#xD;&#xA;    @Injectable()&#xD;&#xA;    export class LoginService extends BaseService{&#xD;&#xA;    constructor(private http: Http){&#xD;&#xA;    super();&#xD;&#xA;    }&#xD;&#xA;    /**&#xD;&#xA;    * send the user login data (email, password) and the token back to be stored on the client side.&#xD;&#xA;    * @param user&#xD;&#xA;    * @returns {any|Promise}&#xD;&#xA;    */&#xD;&#xA;    login(user: any): Observable<any>{&#xD;&#xA;    let body = JSON.stringify(user);&#xD;&#xA;    return this.http.post(apiUrl + '/login', body, { headers: contentHeaders })&#xD;&#xA;    .map(this.extractData)&#xD;&#xA;    .catch(this.handleError);&#xD;&#xA;    }&#xD;&#xA;    /**&#xD;&#xA;    * extract response data and return it to the component&#xD;&#xA;    * @param res&#xD;&#xA;    * @returns {*}&#xD;&#xA;    */&#xD;&#xA;    public extractData(res: Response) {&#xD;&#xA;    let body = res.json();&#xD;&#xA;    console.log(body);&#xD;&#xA;    return body;&#xD;&#xA;    }&#xD;&#xA;    /**&#xD;&#xA;    * handle service error&#xD;&#xA;    * @param error&#xD;&#xA;    * @returns {ErrorObservable}&#xD;&#xA;    */&#xD;&#xA;    public handleError(res: Response) {&#xD;&#xA;    return Observable.throw(res);&#xD;&#xA;    }&#xD;&#xA;    }