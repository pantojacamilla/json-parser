    export default class Recrutement extends React.Component {&#xD;&#xA;        constructor(props) {&#xD;&#xA;          super(props);&#xD;&#xA;          this.state = {&#xD;&#xA;            candidats: [], // We suppose here that values are filled&#xD;&#xA;            values: [] // We suppose here that values are filled&#xD;&#xA;          };&#xD;&#xA;          this.getContacts();&#xD;&#xA;          this.getValues();&#xD;&#xA;        }&#xD;&#xA;        columnDefs = [{&#xD;&#xA;            cellRenderer: function(params) {&#xD;&#xA;              return '<span><i class="material-icons">&#xE5D3;</i></span>';&#xD;&#xA;            },&#xD;&#xA;            suppressMovable: true,&#xD;&#xA;            width: 100,&#xD;&#xA;            colId: 1,&#xD;&#xA;            //width: (self.columnDefinitions.find(function (v) { return v.colId === 1 }) || {}).size || 50,&#xD;&#xA;            pinned: 'left',&#xD;&#xA;            suppressFilter: true&#xD;&#xA;          },&#xD;&#xA;          {&#xD;&#xA;            width: 100,&#xD;&#xA;            headerName: "Formation",&#xD;&#xA;            editable: true,&#xD;&#xA;            colId: 7,&#xD;&#xA;            suppressMovable: true,&#xD;&#xA;            //width : (self.columnDefinitions.find(function (v) { return v.colId === 7 }) || {}).size || null,&#xD;&#xA;            autoHeight: true,&#xD;&#xA;            cellEditor: 'agSelectCellEditor',&#xD;&#xA;            valueGetter: function(params) {&#xD;&#xA;              if (params.data.candidat.formationId === null)&#xD;&#xA;                return "";&#xD;&#xA;              return this.state.values.formations.find(function(val) {&#xD;&#xA;                return val.id === params.data.candidat.formationId;&#xD;&#xA;              }).name;&#xD;&#xA;            },&#xD;&#xA;            valueSetter: function(params) {&#xD;&#xA;              return selectValueSetter(this.state.values.formations, true, 'formationId', params);&#xD;&#xA;            },&#xD;&#xA;            cellEditorParams: function() {&#xD;&#xA;              return {&#xD;&#xA;                values: this.state.values.formations&#xD;&#xA;                  .sort(function(a, b) {&#xD;&#xA;                    if (a.name < b.name) return -1;&#xD;&#xA;                    if (a.name > b.name) return 1;&#xD;&#xA;                    return 0;&#xD;&#xA;                  })&#xD;&#xA;                  .map(function(v) {&#xD;&#xA;                    return v.name;&#xD;&#xA;                  })&#xD;&#xA;              };&#xD;&#xA;            },&#xD;&#xA;            filter: "anyOfWordsFilter"&#xD;&#xA;          },&#xD;&#xA;        ];