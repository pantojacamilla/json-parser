    'use strict'&#xD;&#xA;    const fs = require('fs');&#xD;&#xA;    const path = require('path');&#xD;&#xA;    const http2 = require('http2');&#xD;&#xA;    const utils = require('./utils');&#xD;&#xA;    const { HTTP2_HEADER_PATH } = http2.constants;&#xD;&#xA;    const PORT = process.env.PORT || 3000;&#xD;&#xA;    // The files are pushed to stream here&#xD;&#xA;    function push(stream, path) {&#xD;&#xA;      const file = utils.getFile(path);&#xD;&#xA;      if (!file) {&#xD;&#xA;        return;&#xD;&#xA;      }&#xD;&#xA;      stream.pushStream({ [HTTP2_HEADER_PATH]: path}, (err, pushStream, headers) => {&#xD;&#xA;        if (err) throw err;&#xD;&#xA;        pushStream.respondWithFD(file.content, file.headers)&#xD;&#xA;      });&#xD;&#xA;    }&#xD;&#xA;    // Request handler&#xD;&#xA;    function onRequest(req, res) {&#xD;&#xA;      const reqPath = req.headers[':path'] === '/' ? '/index.html' : req.headers[':path']&#xD;&#xA;      const file = utils.getFile(reqPath);&#xD;&#xA;      // 404 - File not found&#xD;&#xA;      if (!file) {&#xD;&#xA;        res.statusCode = 404;&#xD;&#xA;        res.end();&#xD;&#xA;        return;&#xD;&#xA;      }&#xD;&#xA;      // Push with index.html&#xD;&#xA;      if (reqPath === '/index.html') {&#xD;&#xA;        push(res.stream, '/assets/main.js');&#xD;&#xA;        push(res.stream, '/assets/style.css');&#xD;&#xA;      } else {&#xD;&#xA;        console.log("requiring non index.html")&#xD;&#xA;      }&#xD;&#xA;      // Serve file&#xD;&#xA;      res.stream.respondWithFD(file.content, file.headers);&#xD;&#xA;    }&#xD;&#xA;    // creating an http2 server&#xD;&#xA;    const server = http2.createSecureServer({&#xD;&#xA;      cert: fs.readFileSync(path.join(__dirname, '/certificate.crt')),&#xD;&#xA;      key: fs.readFileSync(path.join(__dirname, '/privateKey.key'))&#xD;&#xA;    }, onRequest);&#xD;&#xA;    // start listening&#xD;&#xA;    server.listen(PORT, (err) => {&#xD;&#xA;      if (err) {&#xD;&#xA;        console.error(err);&#xD;&#xA;        return -1;&#xD;&#xA;      }&#xD;&#xA;      console.log(`Server listening to port ${PORT}`);&#xD;&#xA;    });