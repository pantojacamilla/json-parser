    $(function(){&#xD;&#xA;    	&#xD;&#xA;    	var scene = new THREE.Scene();&#xD;&#xA;    	var camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, .1, 500);&#xD;&#xA;    	var renderer = new THREE.WebGLRenderer();&#xD;&#xA;    	&#xD;&#xA;    	renderer.setClearColor(0xdddddd);&#xD;&#xA;    	renderer.setSize(window.innerWidth, window.innerHeight);&#xD;&#xA;    	renderer.shadowMap.enabled = true;&#xD;&#xA;    	renderer.shadowMapSoft = true;&#xD;&#xA;    	&#xD;&#xA;    	var axis = new THREE.AxisHelper(10);&#xD;&#xA;    	scene.add(axis);&#xD;&#xA;    	&#xD;&#xA;    	var color = new THREE.Color("rgb(255,0,0)");&#xD;&#xA;    	var color2 = new THREE.Color(0xd3d3d3);&#xD;&#xA;    	var grid = new THREE.GridHelper(50, 15, color, color2);&#xD;&#xA;    	&#xD;&#xA;    	scene.add(grid);&#xD;&#xA;    	&#xD;&#xA;    	var cubeGeometry = new THREE.BoxGeometry(5, 5, 5);&#xD;&#xA;    	var cubeMaterial = new THREE.MeshLambertMaterial({color: 0xff3300});&#xD;&#xA;    	var cube = new THREE.Mesh(cubeGeometry, cubeMaterial)&#xD;&#xA;    	&#xD;&#xA;    	/*var planeGeometry = new THREE.PlaneGeometry(30, 30, 30);&#xD;&#xA;    	var planeMaterial = new THREE.MeshLambertMaterial({color: 0xffffff});&#xD;&#xA;    	var plane = new THREE.Mesh(planeGeometry, planeMaterial);&#xD;&#xA;    	&#xD;&#xA;    	plane.rotation.x = -.5*Math.PI;&#xD;&#xA;    	plane.position.y = -.1&#xD;&#xA;    	plane.recieveShadow = true;&#xD;&#xA;    	&#xD;&#xA;    	scene.add(plane);*/&#xD;&#xA;    	&#xD;&#xA;    	cube.position.x = 2.5;&#xD;&#xA;    	cube.position.y = 4;&#xD;&#xA;    	cube.position.z = 2.5;&#xD;&#xA;    	cube.castShadow = true;&#xD;&#xA;    	&#xD;&#xA;    	scene.add(cube);&#xD;&#xA;    	&#xD;&#xA;    	var spotLight = new THREE.SpotLight(0xffffff);&#xD;&#xA;    	spotLight.castShadow = true;&#xD;&#xA;    	spotLight.position.set(15, 30, 50);&#xD;&#xA;    	&#xD;&#xA;    	scene.add(spotLight);&#xD;&#xA;    	&#xD;&#xA;    	camera.position.x = 40;&#xD;&#xA;    	camera.position.y = 40;&#xD;&#xA;    	camera.position.z = 40;&#xD;&#xA;    	&#xD;&#xA;    	camera.lookAt(scene.position);&#xD;&#xA;    	&#xD;&#xA;    	var guiControls = new function(){&#xD;&#xA;    		this.rotationX = 0.01;&#xD;&#xA;    		this.rotationY = 0.01;&#xD;&#xA;    		this.rotationZ = 0.01;&#xD;&#xA;    	}&#xD;&#xA;    	&#xD;&#xA;    	var datGUI = new dat.GUI();&#xD;&#xA;    	datGUI.add(guiControls, 'rotationX', 0, 1);&#xD;&#xA;    	datGUI.add(guiControls, 'rotationY', 0, 1);&#xD;&#xA;    	datGUI.add(guiControls, 'rotationZ', 0, 1);&#xD;&#xA;    	&#xD;&#xA;    	render();&#xD;&#xA;    	function render() {&#xD;&#xA;            //Me trying to reset the camera view every render&#xD;&#xA;    		camera.fov = 45&#xD;&#xA;    		camera.aspect = window.innerWidth / window.innerHeight&#xD;&#xA;    		camera.near = .1&#xD;&#xA;    		camera.far = 500&#xD;&#xA;    		scene.add(camera);&#xD;&#xA;    		cube.rotation.x += .1;&#xD;&#xA;    		renderer.setSize(window.innerWidth, window.innerHeight);&#xD;&#xA;    		requestAnimationFrame(render);&#xD;&#xA;    		renderer.render(scene, camera);&#xD;&#xA;    	}&#xD;&#xA;    	&#xD;&#xA;    	$("#world").append(renderer.domElement);&#xD;&#xA;    	renderer.render(scene, camera);&#xD;&#xA;    });