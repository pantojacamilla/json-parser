    var sgsoip = window.sgsoip || {};&#xD;&#xA;    sgsoip.DataContext = (function ($) {&#xD;&#xA;        'use strict';&#xD;&#xA;        var me = {&#xD;&#xA;            getFunctionalAreas: getFunctionalAreas,&#xD;&#xA;            removeFunctionalArea: removeFunctionalArea,&#xD;&#xA;            saveFunctionalArea: saveFunctionalArea&#xD;&#xA;        };&#xD;&#xA;        function getFunctionalAreas(callback) {&#xD;&#xA;            var functionalareas = null;&#xD;&#xA;            if ($.isFunction(callback)) {&#xD;&#xA;                //functionalareas = localStorage["functionalareas"];&#xD;&#xA;                //alert('test');&#xD;&#xA;                //if (functionalareas != "undefined") {&#xD;&#xA;                //    callback(functionalareas);&#xD;&#xA;                //} else {&#xD;&#xA;                $.getJSON('/FunctionalAreas/GetJsonData', function (data) {&#xD;&#xA;                        //localStorage["functionalareas"] = JSON.stringify(data.FunctionalAreas);&#xD;&#xA;                    callback(data);&#xD;&#xA;                    });&#xD;&#xA;                //}&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;        function removeFunctionalArea(functionalArea) {&#xD;&#xA;        }&#xD;&#xA;        function saveFunctionalArea(functionalArea) {&#xD;&#xA;        }&#xD;&#xA;        return me;&#xD;&#xA;    })(jQuery);&#xD;&#xA;    var sgsoip = window.sgsoip || {};&#xD;&#xA;    sgsoip.FunctionalArea = function (FunctionalAreaID, FunctionalAreaName, FunctionalAreaActive) {&#xD;&#xA;        'use strict';&#xD;&#xA;        this.FunctionalAreaID = ko.observable(FunctionalAreaID);&#xD;&#xA;        this.FunctionalAreaName = ko.observable(FunctionalAreaName).extend({ required: "Functional Area Name is required" });&#xD;&#xA;        this.FunctionalAreaActive = ko.observable(FunctionalAreaActive).extend({ required: "Active is required" });&#xD;&#xA;        this.HasError = ko.pureComputed(function () {&#xD;&#xA;            return this.FunctionalAreaActive.hasError() || this.FunctionalAreaName.hasError();&#xD;&#xA;        }, this);&#xD;&#xA;    };