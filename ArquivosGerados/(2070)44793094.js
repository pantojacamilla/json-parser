    function permAlone(string) {&#xD;&#xA;      if (string.length < 2) return string; // This is our break condition&#xD;&#xA;      var permutations = []; // This array will hold our permutations&#xD;&#xA;      for (var i = 0; i < string.length; i++) {&#xD;&#xA;        var character = string[i];&#xD;&#xA;        // Cause we don't want any duplicates:&#xD;&#xA;        if (string.indexOf(character) != i) // if char was used already&#xD;&#xA;          continue; // skip it this time&#xD;&#xA;        var remainingString = string.slice(0, i) + string.slice(i + 1, string.length); //Note: you can concat Strings via '+' in JS&#xD;&#xA;        for (var subPermutation of permAlone(remainingString))&#xD;&#xA;          permutations.push(character + subPermutation);&#xD;&#xA;      }&#xD;&#xA;      var permutationsFinal = [];&#xD;&#xA;      for (var j = 0; j < (permutations.length); j++) {&#xD;&#xA;        if (!(permutations[j].match(/([a-zA-Z])\1/))) {&#xD;&#xA;          permutationsFinal.push(permutations[j]);&#xD;&#xA;        }&#xD;&#xA;      }&#xD;&#xA;      return (permutationsFinal);&#xD;&#xA;    }&#xD;&#xA;    permAlone('abc');