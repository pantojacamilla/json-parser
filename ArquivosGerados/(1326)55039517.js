            public Form1()&#xD;&#xA;            {&#xD;&#xA;                try&#xD;&#xA;                {&#xD;&#xA;                    _mutex = System.Threading.Mutex.OpenExisting("systemWideMutex");&#xD;&#xA;                    _mutex.WaitOne(); //obtain a lock by waitone&#xD;&#xA;                    _mutex.ReleaseMutex(); //release&#xD;&#xA;                }&#xD;&#xA;                catch { _mutex = new System.Threading.Mutex(true, "systemWideMutex"); } //Create mutex for the first time&#xD;&#xA;                new Thread(threadSafeWorkBetween2Instances).Start(); //Start process&#xD;&#xA;            }&#xD;&#xA;            void threadSafeWorkBetween2Instances()&#xD;&#xA;            {&#xD;&#xA;                while (true)&#xD;&#xA;                {&#xD;&#xA;                    try&#xD;&#xA;                    {&#xD;&#xA;                        _mutex = System.Threading.Mutex.OpenExisting("systemWideMutex");&#xD;&#xA;                        _mutex.WaitOne(); //obtain a lock by waitone&#xD;&#xA;                        //DO THREADSAFE WORK HERE!!!&#xD;&#xA;                        //Write to the same file&#xD;&#xA;                        _mutex.ReleaseMutex(); //release&#xD;&#xA;                    }&#xD;&#xA;                    catch { _mutex = new System.Threading.Mutex(true, "systemWideMutex"); } //Create mutex for the first time&#xD;&#xA;                    Thread.Sleep(10000);&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;            private void Form1_FormClosing(object sender, FormClosingEventArgs e)&#xD;&#xA;            {&#xD;&#xA;                _mutex.ReleaseMutex(); //release&#xD;&#xA;            }