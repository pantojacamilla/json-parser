    export class CalendarComponent implements OnInit {&#xD;&#xA;      viewDate: Date;&#xD;&#xA;      isSlotFree: boolean[][] = [&#xD;&#xA;        [true, true]&#xD;&#xA;      ];&#xD;&#xA;      constructor(private http: HttpClient) {&#xD;&#xA;      }&#xD;&#xA;      ngOnInit() {&#xD;&#xA;        this.viewDate = new Date();&#xD;&#xA;        var i: number;&#xD;&#xA;        var j: number;&#xD;&#xA;        for (i = 1; i < 31; i++) {&#xD;&#xA;          this.isSlotFree.push([true, true]);&#xD;&#xA;        }&#xD;&#xA;        let p = new HttpParams().set('month', (this.viewDate.getMonth() + 1).toString());&#xD;&#xA;        this.http.get < busyDateResponse[] > ("http://localhost:51967/api/stylists/getBusyDates", {&#xD;&#xA;          params: p&#xD;&#xA;        }).subscribe(res => {&#xD;&#xA;          this.setIsSlotFree(res);&#xD;&#xA;        });&#xD;&#xA;        this.x = true;&#xD;&#xA;        console.log(this.isSlotFree);&#xD;&#xA;        this.viewDate = new Date();&#xD;&#xA;      }&#xD;&#xA;      setIsSlotFree(res: busyDateResponse[]): void {&#xD;&#xA;        var busy_date: busyDateResponse;&#xD;&#xA;        for (busy_date of res) {&#xD;&#xA;          var temp: number = (busy_date.slot == 'm') ? 0 : 1;&#xD;&#xA;          this.isSlotFree[busy_date.day - 1][temp] = false;&#xD;&#xA;        }&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;    interface busyDateResponse {&#xD;&#xA;      $id: string;&#xD;&#xA;      day: number;&#xD;&#xA;      month: number;&#xD;&#xA;      year: number;&#xD;&#xA;      slot: string;&#xD;&#xA;    }