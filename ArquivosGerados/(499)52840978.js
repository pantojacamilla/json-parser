    var ctx = game.getContext('2d');&#xD;&#xA;    var sprite = new Image;&#xD;&#xA;    sprite.src = "https://opengameart.org/sites/default/files/styles/medium/public/preview_idle.gif";&#xD;&#xA;    var player = {&#xD;&#xA;      x: game.width / 2 - 250 / 2,&#xD;&#xA;      y: game.height / 2 - 213 / 2,&#xD;&#xA;      width: 250,&#xD;&#xA;      height: 213,&#xD;&#xA;      rotation: 0,&#xD;&#xA;      vx: 0,&#xD;&#xA;      vy: 0&#xD;&#xA;    };&#xD;&#xA;    var mouse = {x: 0, y: 0};&#xD;&#xA;    var angle = 0;&#xD;&#xA;    var bullets = [];&#xD;&#xA;    setInterval(function() {&#xD;&#xA;      // bullets update&#xD;&#xA;      for (var a = 0; a < bullets.length; a++) {&#xD;&#xA;        var bullet = bullets[a];&#xD;&#xA;        bullet.x += bullet.vx;&#xD;&#xA;        bullet.y += bullet.vy;&#xD;&#xA;      }&#xD;&#xA;      // player update (rotate)&#xD;&#xA;      angle = Math.atan2(mouse.y - (player.y + player.height / 2), mouse.x - (player.x + player.width / 2));&#xD;&#xA;      player.rotation = angle * (180 / Math.PI);&#xD;&#xA;      // draw&#xD;&#xA;      ctx.clearRect(0, 0, game.width, game.height);&#xD;&#xA;      // draw player (+rotate)&#xD;&#xA;      ctx.save();&#xD;&#xA;      ctx.translate(player.x + player.width / 2, player.y + player.height / 2);&#xD;&#xA;      ctx.rotate(player.rotation * Math.PI / 180);&#xD;&#xA;      ctx.drawImage(sprite, -player.width / 2, -player.height / 2, player.width, player.height);&#xD;&#xA;      ctx.restore();&#xD;&#xA;      // draw bullets&#xD;&#xA;      for (var e = 0; e < bullets.length; e++) {&#xD;&#xA;        var bullet = bullets[e];&#xD;&#xA;        ctx.fillRect(bullet.x, bullet.y, bullet.width, bullet.height);&#xD;&#xA;      }&#xD;&#xA;    }, 1000 / 60);&#xD;&#xA;    window.addEventListener("mousemove", function(e) {&#xD;&#xA;      mouse.x = e.pageX;&#xD;&#xA;      mouse.y = e.pageY;&#xD;&#xA;    });&#xD;&#xA;    window.addEventListener("mousedown", function(e) {&#xD;&#xA;      bullets.push({&#xD;&#xA;        width: 25,&#xD;&#xA;        height: 25,&#xD;&#xA;        x: player.x + player.width / 2 - 5 / 2 + (50 * Math.cos(angle)),&#xD;&#xA;        y: player.y + player.height / 2 - 5 / 2 + (50 * Math.sin(angle)),&#xD;&#xA;        vx: Math.cos(angle) * 7 + player.vx,&#xD;&#xA;        vy: Math.sin(angle) * 7 + player.vy,&#xD;&#xA;      });&#xD;&#xA;    });