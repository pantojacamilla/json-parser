    function addCircleToMap(map){&#xD;&#xA;      map.addObject(new H.map.Circle(&#xD;&#xA;        // The central point of the circle&#xD;&#xA;        {lat:36.178699, lng:-115.146171},&#xD;&#xA;        // The radius of the circle in meters&#xD;&#xA;        1000,&#xD;&#xA;        {&#xD;&#xA;          style: {&#xD;&#xA;            strokeColor: 'rgba(55, 85, 170, 0.6)', // Color of the perimeter&#xD;&#xA;            lineWidth: 2,&#xD;&#xA;            fillColor: 'rgba(0, 128, 0, 0.7)'  // Color of the circle&#xD;&#xA;          }&#xD;&#xA;        }&#xD;&#xA;      ));&#xD;&#xA;    }&#xD;&#xA;    //Step 1: initialize communication with the platform&#xD;&#xA;    var platform = new H.service.Platform({&#xD;&#xA;      app_id: 'DemoAppId01082013GAL',&#xD;&#xA;      app_code: 'AJKnXv84fjrb0KIHawS0Tg',&#xD;&#xA;      useCIT: true,&#xD;&#xA;      useHTTPS: true&#xD;&#xA;    });&#xD;&#xA;    var defaultLayers = platform.createDefaultLayers();&#xD;&#xA;    //Step 2: initialize a map - this map is centered over las vegas&#xD;&#xA;    var map = new H.Map(document.getElementById('map'),&#xD;&#xA;      defaultLayers.normal.map,{&#xD;&#xA;      center: {lat:36.178699, lng:-115.146171},&#xD;&#xA;      zoom: 13&#xD;&#xA;    });&#xD;&#xA;    //Step 3: make the map interactive&#xD;&#xA;    // MapEvents enables the event system&#xD;&#xA;    // Behavior implements default interactions for pan/zoom (also on mobile touch environments)&#xD;&#xA;    var behavior = new H.mapevents.Behavior(new H.mapevents.MapEvents(map));&#xD;&#xA;    // Create the default UI components&#xD;&#xA;    var ui = H.ui.UI.createDefault(map, defaultLayers);&#xD;&#xA;    // Now use the map as required...&#xD;&#xA;    addCircleToMap(map);