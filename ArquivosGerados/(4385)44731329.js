    // login_app.js&#xD;&#xA;    var route = require('../../libs/router.js');	//my lib&#xD;&#xA;    var dbPath = "192.168.5.15/sqlite/db.sqlite"	// here is the path i want to keep it static&#xD;&#xA;    function login() {&#xD;&#xA;        var email         = document.getElementById("email").value;&#xD;&#xA;        var password    = document.getElementById("password").value;&#xD;&#xA;        if(email == "" || password == ""){&#xD;&#xA;            alert("Please Enter Your email & Password ...");&#xD;&#xA;            return;&#xD;&#xA;        } else{&#xD;&#xA;            var sql = require('sql.js');                            //Import sqLite &#xD;&#xA;            var fs = require("fs");                                 //Import Files driver&#xD;&#xA;            var SHA256 = require("crypto-js/sha256");              	//Crypting Library&#xD;&#xA;            try {&#xD;&#xA;                var filebuffer = fs.readFileSync(dbPath);			//here is the problem it converts the file to local machine path c:/..../192....&#xD;&#xA;                if (filebuffer != null) {&#xD;&#xA;                    var db = new SQL.Database(filebuffer);&#xD;&#xA;                } else {&#xD;&#xA;                    var db = new SQL.Database();&#xD;&#xA;                    console.log("No Database");&#xD;&#xA;                }&#xD;&#xA;                // Prepare an sql statement&#xD;&#xA;                var stmt = db.prepare("SELECT * FROM users WHERE email=:emailid");&#xD;&#xA;                // Bind values to the parameters and fetch the results of the query&#xD;&#xA;                var result = stmt.getAsObject({':emailid' : email});&#xD;&#xA;                if(result.password == null) alert('Account not existing, please contact Your Administrator ...');&#xD;&#xA;                else{&#xD;&#xA;                    if(SHA256(password) == result.password) {&#xD;&#xA;                        &#xD;&#xA;                        route.data.relocate('dashboard');&#xD;&#xA;                    }&#xD;&#xA;                    else alert('Wrong Login credentials, please try again ...');&#xD;&#xA;                }&#xD;&#xA;            } catch (e) {&#xD;&#xA;                console.log(e);&#xD;&#xA;            }&#xD;&#xA;        }  &#xD;&#xA;    }